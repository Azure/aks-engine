{
    "properties": {
        "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "outputs": {
                "masterFQDN": {
                    "type": "string",
                    "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
                },
                "primaryAvailabilitySetName": {
                    "type": "string",
                    "value": "[variables('primaryAvailabilitySetName')]"
                },
                "primaryScaleSetName": {
                    "type": "string",
                    "value": "[variables('primaryScaleSetName')]"
                },
                "resourceGroup": {
                    "type": "string",
                    "value": "[variables('resourceGroup')]"
                },
                "routeTableName": {
                    "type": "string",
                    "value": "[variables('routeTableName')]"
                },
                "securityGroupName": {
                    "type": "string",
                    "value": "[variables('nsgName')]"
                },
                "subnetName": {
                    "type": "string",
                    "value": "[variables('subnetName')]"
                },
                "virtualNetworkName": {
                    "type": "string",
                    "value": "[variables('virtualNetworkName')]"
                },
                "vnetResourceGroup": {
                    "type": "string",
                    "value": "[variables('virtualNetworkResourceGroupName')]"
                }
            },
            "parameters": {
                "agentSubnet": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "Sets the subnet of the agent node(s)."
                    },
                    "type": "string"
                },
                "aksEngineVersion": {
                    "metadata": {
                        "description": "Contains details of the aks-engine version which was used to provision the cluster"
                    },
                    "type": "string"
                },
                "apiServerCertificate": {
                    "metadata": {
                        "description": "The base 64 server certificate used on the master"
                    },
                    "type": "string"
                },
                "apiServerPrivateKey": {
                    "metadata": {
                        "description": "The base 64 server private key used on the master."
                    },
                    "type": "securestring"
                },
                "caCertificate": {
                    "metadata": {
                        "description": "The base 64 certificate authority certificate"
                    },
                    "type": "string"
                },
                "caPrivateKey": {
                    "metadata": {
                        "description": "The base 64 CA private key used on the master."
                    },
                    "type": "securestring"
                },
                "clientCertificate": {
                    "metadata": {
                        "description": "The base 64 client certificate used to communicate with the master"
                    },
                    "type": "string"
                },
                "clientPrivateKey": {
                    "metadata": {
                        "description": "The base 64 client private key used to communicate with the master"
                    },
                    "type": "securestring"
                },
                "cloudproviderConfig": {
                    "defaultValue": {
                        "cloudProviderBackoff": true,
                        "cloudProviderBackoffDuration": 0,
                        "cloudProviderBackoffExponent": "0",
                        "cloudProviderBackoffJitter": "0",
                        "cloudProviderBackoffRetries": 10,
                        "cloudProviderRateLimit": false,
                        "cloudProviderRateLimitBucket": 0,
                        "cloudProviderRateLimitQPS": "0"
                    },
                    "type": "object"
                },
                "cniPluginsURL": {
                    "defaultValue": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-latest.tgz",
                    "type": "string"
                },
                "containerRuntime": {
                    "allowedValues": [
                        "docker",
                        "kata-containers",
                        "containerd"
                    ],
                    "defaultValue": "docker",
                    "metadata": {
                        "description": "The container runtime to use (docker|kata-containers|containerd)"
                    },
                    "type": "string"
                },
                "containerdDownloadURLBase": {
                    "defaultValue": "https://storage.googleapis.com/cri-containerd-release/",
                    "type": "string"
                },
                "containerdVersion": {
                    "allowedValues": [
                        "1.1.5",
                        "1.1.6",
                        "1.2.4"
                    ],
                    "defaultValue": "1.1.5",
                    "metadata": {
                        "description": "The Azure Moby build version"
                    },
                    "type": "string"
                },
                "dockerBridgeCidr": {
                    "metadata": {
                        "description": "Docker bridge network IP address and subnet"
                    },
                    "type": "string"
                },
                "dockerEngineDownloadRepo": {
                    "defaultValue": "https://aptdocker.azureedge.net/repo",
                    "metadata": {
                        "description": "The Docker Engine download URL for Kubernetes."
                    },
                    "type": "string"
                },
                "enableAggregatedAPIs": {
                    "defaultValue": false,
                    "metadata": {
                        "description": "Enable aggregated API on master nodes"
                    },
                    "type": "bool"
                },
                "etcdClientCertificate": {
                    "metadata": {
                        "description": "The base 64 server certificate used on the master"
                    },
                    "type": "string"
                },
                "etcdClientPrivateKey": {
                    "metadata": {
                        "description": "The base 64 server private key used on the master."
                    },
                    "type": "securestring"
                },
                "etcdDiskSizeGB": {
                    "metadata": {
                        "description": "Size in GB to allocate for etcd volume"
                    },
                    "type": "string"
                },
                "etcdDownloadURLBase": {
                    "metadata": {
                        "description": "etcd image base URL"
                    },
                    "type": "string"
                },
                "etcdEncryptionKey": {
                    "metadata": {
                        "description": "Encryption at rest key for etcd"
                    },
                    "type": "string"
                },
                "etcdPeerCertificate0": {
                    "metadata": {
                        "description": "The base 64 server certificates used on the master"
                    },
                    "type": "string"
                },
                "etcdPeerPrivateKey0": {
                    "metadata": {
                        "description": "The base 64 server private keys used on the master."
                    },
                    "type": "securestring"
                },
                "etcdServerCertificate": {
                    "metadata": {
                        "description": "The base 64 server certificate used on the master"
                    },
                    "type": "string"
                },
                "etcdServerPrivateKey": {
                    "metadata": {
                        "description": "The base 64 server private key used on the master."
                    },
                    "type": "securestring"
                },
                "etcdVersion": {
                    "metadata": {
                        "description": "etcd version"
                    },
                    "type": "string"
                },
                "firstConsecutiveStaticIP": {
                    "defaultValue": "10.240.255.5",
                    "metadata": {
                        "description": "Sets the static IP of the first master"
                    },
                    "type": "string"
                },
                "fqdnEndpointSuffix": {
                    "defaultValue": "cloudapp.azure.com",
                    "metadata": {
                        "description": "Endpoint of FQDN."
                    },
                    "type": "string"
                },
                "gcHighThreshold": {
                    "defaultValue": 85,
                    "metadata": {
                        "description": "High Threshold for Image Garbage collection on each node"
                    },
                    "type": "int"
                },
                "gcLowThreshold": {
                    "defaultValue": 80,
                    "metadata": {
                        "description": "Low Threshold for Image Garbage collection on each node."
                    },
                    "type": "int"
                },
                "generatorCode": {
                    "metadata": {
                        "description": "The generator code used to identify the generator"
                    },
                    "type": "string"
                },
                "kubeClusterCidr": {
                    "metadata": {
                        "description": "Kubernetes cluster subnet"
                    },
                    "type": "string"
                },
                "kubeConfigCertificate": {
                    "metadata": {
                        "description": "The base 64 certificate used by cli to communicate with the master"
                    },
                    "type": "string"
                },
                "kubeConfigPrivateKey": {
                    "metadata": {
                        "description": "The base 64 private key used by cli to communicate with the master"
                    },
                    "type": "securestring"
                },
                "kubeDNSServiceIP": {
                    "metadata": {
                        "description": "Kubernetes DNS IP"
                    },
                    "type": "string"
                },
                "kubernetesACIConnectorEnabled": {
                    "metadata": {
                        "description": "ACI Connector Status"
                    },
                    "type": "bool"
                },
                "kubernetesAddonManagerSpec": {
                    "metadata": {
                        "description": "The container spec for hyperkube."
                    },
                    "type": "string"
                },
                "kubernetesCcmImageSpec": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "The container spec for cloud-controller-manager."
                    },
                    "type": "string"
                },
                "kubernetesClusterAutoscalerEnabled": {
                    "metadata": {
                        "description": "Cluster autoscaler status"
                    },
                    "type": "bool"
                },
                "kubernetesDNSMasqSpec": {
                    "metadata": {
                        "description": "The container spec for kube-dnsmasq-amd64."
                    },
                    "type": "string"
                },
                "kubernetesDNSSidecarSpec": {
                    "metadata": {
                        "description": "The container spec for k8s-dns-sidecar-amd64."
                    },
                    "type": "string"
                },
                "kubernetesHyperkubeSpec": {
                    "metadata": {
                        "description": "The container spec for hyperkube."
                    },
                    "type": "string"
                },
                "kubernetesKubeDNSSpec": {
                    "metadata": {
                        "description": "The container spec for kubedns-amd64."
                    },
                    "type": "string"
                },
                "kubernetesKubeletClusterDomain": {
                    "metadata": {
                        "description": "--cluster-domain Kubelet config"
                    },
                    "type": "string"
                },
                "kubernetesPodInfraContainerSpec": {
                    "metadata": {
                        "description": "The container spec for pod infra."
                    },
                    "type": "string"
                },
                "kuberneteselbsvcname": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "elb service for standard lb"
                    },
                    "type": "string"
                },
                "linuxAdminUsername": {
                    "metadata": {
                        "description": "User name for the Linux Virtual Machines (SSH or Password)."
                    },
                    "type": "string"
                },
                "linuxpoolCount": {
                    "defaultValue": 1,
                    "metadata": {
                        "description": "The number of vms in agent pool linuxpool"
                    },
                    "type": "int"
                },
                "linuxpoolSubnet": {
                    "defaultValue": "10.240.0.0/16",
                    "metadata": {
                        "description": "Sets the subnet of agent pool 'linuxpool'."
                    },
                    "type": "string"
                },
                "linuxpoolVMSize": {
                    "allowedValues": [
                        "Standard_A0",
                        "Standard_A1",
                        "Standard_A10",
                        "Standard_A11",
                        "Standard_A1_v2",
                        "Standard_A2",
                        "Standard_A2_v2",
                        "Standard_A2m_v2",
                        "Standard_A3",
                        "Standard_A4",
                        "Standard_A4_v2",
                        "Standard_A4m_v2",
                        "Standard_A5",
                        "Standard_A6",
                        "Standard_A7",
                        "Standard_A8",
                        "Standard_A8_v2",
                        "Standard_A8m_v2",
                        "Standard_A9",
                        "Standard_B1ls",
                        "Standard_B1ms",
                        "Standard_B1s",
                        "Standard_B2ms",
                        "Standard_B2s",
                        "Standard_B4ms",
                        "Standard_B8ms",
                        "Standard_D1",
                        "Standard_D11",
                        "Standard_D11_v2",
                        "Standard_D12",
                        "Standard_D12_v2",
                        "Standard_D13",
                        "Standard_D13_v2",
                        "Standard_D14",
                        "Standard_D14_v2",
                        "Standard_D15_v2",
                        "Standard_D16_v3",
                        "Standard_D16s_v3",
                        "Standard_D1_v2",
                        "Standard_D2",
                        "Standard_D2_v2",
                        "Standard_D2_v3",
                        "Standard_D2s_v3",
                        "Standard_D3",
                        "Standard_D32_v3",
                        "Standard_D32s_v3",
                        "Standard_D3_v2",
                        "Standard_D4",
                        "Standard_D4_v2",
                        "Standard_D4_v3",
                        "Standard_D4s_v3",
                        "Standard_D5_v2",
                        "Standard_D64_v3",
                        "Standard_D64s_v3",
                        "Standard_D8_v3",
                        "Standard_D8s_v3",
                        "Standard_DC2s",
                        "Standard_DC4s",
                        "Standard_DS1",
                        "Standard_DS11",
                        "Standard_DS11-1_v2",
                        "Standard_DS11_v2",
                        "Standard_DS12",
                        "Standard_DS12-1_v2",
                        "Standard_DS12-2_v2",
                        "Standard_DS12_v2",
                        "Standard_DS13",
                        "Standard_DS13-2_v2",
                        "Standard_DS13-4_v2",
                        "Standard_DS13_v2",
                        "Standard_DS14",
                        "Standard_DS14-4_v2",
                        "Standard_DS14-8_v2",
                        "Standard_DS14_v2",
                        "Standard_DS15_v2",
                        "Standard_DS1_v2",
                        "Standard_DS2",
                        "Standard_DS2_v2",
                        "Standard_DS3",
                        "Standard_DS3_v2",
                        "Standard_DS4",
                        "Standard_DS4_v2",
                        "Standard_DS5_v2",
                        "Standard_E16-4s_v3",
                        "Standard_E16-8s_v3",
                        "Standard_E16_v3",
                        "Standard_E16s_v3",
                        "Standard_E20_v3",
                        "Standard_E20s_v3",
                        "Standard_E2_v3",
                        "Standard_E2s_v3",
                        "Standard_E32-16s_v3",
                        "Standard_E32-8s_v3",
                        "Standard_E32_v3",
                        "Standard_E32s_v3",
                        "Standard_E4-2s_v3",
                        "Standard_E4_v3",
                        "Standard_E4s_v3",
                        "Standard_E64-16s_v3",
                        "Standard_E64-32s_v3",
                        "Standard_E64_v3",
                        "Standard_E64i_v3",
                        "Standard_E64is_v3",
                        "Standard_E64s_v3",
                        "Standard_E8-2s_v3",
                        "Standard_E8-4s_v3",
                        "Standard_E8_v3",
                        "Standard_E8s_v3",
                        "Standard_F1",
                        "Standard_F16",
                        "Standard_F16s",
                        "Standard_F16s_v2",
                        "Standard_F1s",
                        "Standard_F2",
                        "Standard_F2s",
                        "Standard_F2s_v2",
                        "Standard_F32s_v2",
                        "Standard_F4",
                        "Standard_F4s",
                        "Standard_F4s_v2",
                        "Standard_F64s_v2",
                        "Standard_F72s_v2",
                        "Standard_F8",
                        "Standard_F8s",
                        "Standard_F8s_v2",
                        "Standard_G1",
                        "Standard_G2",
                        "Standard_G3",
                        "Standard_G4",
                        "Standard_G5",
                        "Standard_GS1",
                        "Standard_GS2",
                        "Standard_GS3",
                        "Standard_GS4",
                        "Standard_GS4-4",
                        "Standard_GS4-8",
                        "Standard_GS5",
                        "Standard_GS5-16",
                        "Standard_GS5-8",
                        "Standard_H16",
                        "Standard_H16m",
                        "Standard_H16mr",
                        "Standard_H16r",
                        "Standard_H8",
                        "Standard_H8m",
                        "Standard_HB60rs",
                        "Standard_HC44rs",
                        "Standard_L16s",
                        "Standard_L16s_v2",
                        "Standard_L32s",
                        "Standard_L32s_v2",
                        "Standard_L4s",
                        "Standard_L64s_v2",
                        "Standard_L80s_v2",
                        "Standard_L8s",
                        "Standard_L8s_v2",
                        "Standard_M128",
                        "Standard_M128-32ms",
                        "Standard_M128-64ms",
                        "Standard_M128m",
                        "Standard_M128ms",
                        "Standard_M128s",
                        "Standard_M16-4ms",
                        "Standard_M16-8ms",
                        "Standard_M16ms",
                        "Standard_M32-16ms",
                        "Standard_M32-8ms",
                        "Standard_M32ls",
                        "Standard_M32ms",
                        "Standard_M32ts",
                        "Standard_M64",
                        "Standard_M64-16ms",
                        "Standard_M64-32ms",
                        "Standard_M64ls",
                        "Standard_M64m",
                        "Standard_M64ms",
                        "Standard_M64s",
                        "Standard_M8-2ms",
                        "Standard_M8-4ms",
                        "Standard_M8ms",
                        "Standard_NC12",
                        "Standard_NC12s_v2",
                        "Standard_NC12s_v3",
                        "Standard_NC24",
                        "Standard_NC24r",
                        "Standard_NC24rs_v2",
                        "Standard_NC24rs_v3",
                        "Standard_NC24s_v2",
                        "Standard_NC24s_v3",
                        "Standard_NC6",
                        "Standard_NC6s_v2",
                        "Standard_NC6s_v3",
                        "Standard_ND12s",
                        "Standard_ND24rs",
                        "Standard_ND24s",
                        "Standard_ND6s",
                        "Standard_NV12",
                        "Standard_NV12s_v2",
                        "Standard_NV24",
                        "Standard_NV24s_v2",
                        "Standard_NV6",
                        "Standard_NV6s_v2",
                        "Standard_PB12s",
                        "Standard_PB24s",
                        "Standard_PB6s"
                    ],
                    "defaultValue": "Standard_D2_v2",
                    "metadata": {
                        "description": "The size of the Virtual Machine."
                    },
                    "type": "string"
                },
                "linuxpoolosImageName": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
                    },
                    "type": "string"
                },
                "linuxpoolosImageOffer": {
                    "defaultValue": "UbuntuServer",
                    "metadata": {
                        "description": "Linux OS image type."
                    },
                    "type": "string"
                },
                "linuxpoolosImagePublisher": {
                    "defaultValue": "Canonical",
                    "metadata": {
                        "description": "OS image publisher."
                    },
                    "type": "string"
                },
                "linuxpoolosImageResourceGroup": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
                    },
                    "type": "string"
                },
                "linuxpoolosImageSKU": {
                    "defaultValue": "16.04-LTS",
                    "metadata": {
                        "description": "OS image SKU."
                    },
                    "type": "string"
                },
                "linuxpoolosImageVersion": {
                    "defaultValue": "latest",
                    "metadata": {
                        "description": "OS image version."
                    },
                    "type": "string"
                },
                "location": {
                    "defaultValue": "westus2",
                    "metadata": {
                        "description": "Sets the location for all resources in the cluster"
                    },
                    "type": "string"
                },
                "masterEndpointDNSNamePrefix": {
                    "metadata": {
                        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
                    },
                    "type": "string"
                },
                "masterOffset": {
                    "allowedValues": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "defaultValue": 0,
                    "metadata": {
                        "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
                    },
                    "type": "int"
                },
                "masterSubnet": {
                    "defaultValue": "10.240.0.0/16",
                    "metadata": {
                        "description": "Sets the subnet of the master node(s)."
                    },
                    "type": "string"
                },
                "masterVMSize": {
                    "allowedValues": [
                        "Standard_A0",
                        "Standard_A1",
                        "Standard_A10",
                        "Standard_A11",
                        "Standard_A1_v2",
                        "Standard_A2",
                        "Standard_A2_v2",
                        "Standard_A2m_v2",
                        "Standard_A3",
                        "Standard_A4",
                        "Standard_A4_v2",
                        "Standard_A4m_v2",
                        "Standard_A5",
                        "Standard_A6",
                        "Standard_A7",
                        "Standard_A8",
                        "Standard_A8_v2",
                        "Standard_A8m_v2",
                        "Standard_A9",
                        "Standard_B1ls",
                        "Standard_B1ms",
                        "Standard_B1s",
                        "Standard_B2ms",
                        "Standard_B2s",
                        "Standard_B4ms",
                        "Standard_B8ms",
                        "Standard_D1",
                        "Standard_D11",
                        "Standard_D11_v2",
                        "Standard_D12",
                        "Standard_D12_v2",
                        "Standard_D13",
                        "Standard_D13_v2",
                        "Standard_D14",
                        "Standard_D14_v2",
                        "Standard_D15_v2",
                        "Standard_D16_v3",
                        "Standard_D16s_v3",
                        "Standard_D1_v2",
                        "Standard_D2",
                        "Standard_D2_v2",
                        "Standard_D2_v3",
                        "Standard_D2s_v3",
                        "Standard_D3",
                        "Standard_D32_v3",
                        "Standard_D32s_v3",
                        "Standard_D3_v2",
                        "Standard_D4",
                        "Standard_D4_v2",
                        "Standard_D4_v3",
                        "Standard_D4s_v3",
                        "Standard_D5_v2",
                        "Standard_D64_v3",
                        "Standard_D64s_v3",
                        "Standard_D8_v3",
                        "Standard_D8s_v3",
                        "Standard_DC2s",
                        "Standard_DC4s",
                        "Standard_DS1",
                        "Standard_DS11",
                        "Standard_DS11-1_v2",
                        "Standard_DS11_v2",
                        "Standard_DS12",
                        "Standard_DS12-1_v2",
                        "Standard_DS12-2_v2",
                        "Standard_DS12_v2",
                        "Standard_DS13",
                        "Standard_DS13-2_v2",
                        "Standard_DS13-4_v2",
                        "Standard_DS13_v2",
                        "Standard_DS14",
                        "Standard_DS14-4_v2",
                        "Standard_DS14-8_v2",
                        "Standard_DS14_v2",
                        "Standard_DS15_v2",
                        "Standard_DS1_v2",
                        "Standard_DS2",
                        "Standard_DS2_v2",
                        "Standard_DS3",
                        "Standard_DS3_v2",
                        "Standard_DS4",
                        "Standard_DS4_v2",
                        "Standard_DS5_v2",
                        "Standard_E16-4s_v3",
                        "Standard_E16-8s_v3",
                        "Standard_E16_v3",
                        "Standard_E16s_v3",
                        "Standard_E20_v3",
                        "Standard_E20s_v3",
                        "Standard_E2_v3",
                        "Standard_E2s_v3",
                        "Standard_E32-16s_v3",
                        "Standard_E32-8s_v3",
                        "Standard_E32_v3",
                        "Standard_E32s_v3",
                        "Standard_E4-2s_v3",
                        "Standard_E4_v3",
                        "Standard_E4s_v3",
                        "Standard_E64-16s_v3",
                        "Standard_E64-32s_v3",
                        "Standard_E64_v3",
                        "Standard_E64i_v3",
                        "Standard_E64is_v3",
                        "Standard_E64s_v3",
                        "Standard_E8-2s_v3",
                        "Standard_E8-4s_v3",
                        "Standard_E8_v3",
                        "Standard_E8s_v3",
                        "Standard_F1",
                        "Standard_F16",
                        "Standard_F16s",
                        "Standard_F16s_v2",
                        "Standard_F1s",
                        "Standard_F2",
                        "Standard_F2s",
                        "Standard_F2s_v2",
                        "Standard_F32s_v2",
                        "Standard_F4",
                        "Standard_F4s",
                        "Standard_F4s_v2",
                        "Standard_F64s_v2",
                        "Standard_F72s_v2",
                        "Standard_F8",
                        "Standard_F8s",
                        "Standard_F8s_v2",
                        "Standard_G1",
                        "Standard_G2",
                        "Standard_G3",
                        "Standard_G4",
                        "Standard_G5",
                        "Standard_GS1",
                        "Standard_GS2",
                        "Standard_GS3",
                        "Standard_GS4",
                        "Standard_GS4-4",
                        "Standard_GS4-8",
                        "Standard_GS5",
                        "Standard_GS5-16",
                        "Standard_GS5-8",
                        "Standard_H16",
                        "Standard_H16m",
                        "Standard_H16mr",
                        "Standard_H16r",
                        "Standard_H8",
                        "Standard_H8m",
                        "Standard_HB60rs",
                        "Standard_HC44rs",
                        "Standard_L16s",
                        "Standard_L16s_v2",
                        "Standard_L32s",
                        "Standard_L32s_v2",
                        "Standard_L4s",
                        "Standard_L64s_v2",
                        "Standard_L80s_v2",
                        "Standard_L8s",
                        "Standard_L8s_v2",
                        "Standard_M128",
                        "Standard_M128-32ms",
                        "Standard_M128-64ms",
                        "Standard_M128m",
                        "Standard_M128ms",
                        "Standard_M128s",
                        "Standard_M16-4ms",
                        "Standard_M16-8ms",
                        "Standard_M16ms",
                        "Standard_M32-16ms",
                        "Standard_M32-8ms",
                        "Standard_M32ls",
                        "Standard_M32ms",
                        "Standard_M32ts",
                        "Standard_M64",
                        "Standard_M64-16ms",
                        "Standard_M64-32ms",
                        "Standard_M64ls",
                        "Standard_M64m",
                        "Standard_M64ms",
                        "Standard_M64s",
                        "Standard_M8-2ms",
                        "Standard_M8-4ms",
                        "Standard_M8ms",
                        "Standard_NC12",
                        "Standard_NC12s_v2",
                        "Standard_NC12s_v3",
                        "Standard_NC24",
                        "Standard_NC24r",
                        "Standard_NC24rs_v2",
                        "Standard_NC24rs_v3",
                        "Standard_NC24s_v2",
                        "Standard_NC24s_v3",
                        "Standard_NC6",
                        "Standard_NC6s_v2",
                        "Standard_NC6s_v3",
                        "Standard_ND12s",
                        "Standard_ND24rs",
                        "Standard_ND24s",
                        "Standard_ND6s",
                        "Standard_NV12",
                        "Standard_NV12s_v2",
                        "Standard_NV24",
                        "Standard_NV24s_v2",
                        "Standard_NV6",
                        "Standard_NV6s_v2",
                        "Standard_PB12s",
                        "Standard_PB24s",
                        "Standard_PB6s"
                    ],
                    "metadata": {
                        "description": "The size of the Virtual Machine."
                    },
                    "type": "string"
                },
                "maxPods": {
                    "defaultValue": 30,
                    "metadata": {
                        "description": "This param has been deprecated."
                    },
                    "type": "int"
                },
                "mobyVersion": {
                    "allowedValues": [
                        "3.0.1",
                        "3.0.2",
                        "3.0.3",
                        "3.0.4",
                        "3.0.5",
                        "3.0.6"
                    ],
                    "defaultValue": "3.0.6",
                    "metadata": {
                        "description": "The Azure Moby build version"
                    },
                    "type": "string"
                },
                "nameSuffix": {
                    "defaultValue": "38062788",
                    "metadata": {
                        "description": "A string hash of the master DNS name to uniquely identify the cluster."
                    },
                    "type": "string"
                },
                "networkPlugin": {
                    "allowedValues": [
                        "kubenet",
                        "azure",
                        "flannel",
                        "cilium"
                    ],
                    "defaultValue": "flannel",
                    "metadata": {
                        "description": "The network plugin to use for Kubernetes (kubenet|azure|flannel|cilium)"
                    },
                    "type": "string"
                },
                "networkPolicy": {
                    "allowedValues": [
                        "",
                        "none",
                        "azure",
                        "calico",
                        "cilium"
                    ],
                    "defaultValue": "",
                    "metadata": {
                        "description": "The network policy enforcement to use (calico|cilium); 'none' and 'azure' here for backwards compatibility"
                    },
                    "type": "string"
                },
                "orchestratorName": {
                    "maxLength": 3,
                    "metadata": {
                        "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
                    },
                    "minLength": 3,
                    "type": "string"
                },
                "osImageName": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
                    },
                    "type": "string"
                },
                "osImageOffer": {
                    "defaultValue": "UbuntuServer",
                    "metadata": {
                        "description": "Linux OS image type."
                    },
                    "type": "string"
                },
                "osImagePublisher": {
                    "defaultValue": "Canonical",
                    "metadata": {
                        "description": "OS image publisher."
                    },
                    "type": "string"
                },
                "osImageResourceGroup": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
                    },
                    "type": "string"
                },
                "osImageSKU": {
                    "defaultValue": "16.04-LTS",
                    "metadata": {
                        "description": "OS image SKU."
                    },
                    "type": "string"
                },
                "osImageVersion": {
                    "defaultValue": "latest",
                    "metadata": {
                        "description": "OS image version."
                    },
                    "type": "string"
                },
                "privateAzureRegistryServer": {
                    "defaultValue": "",
                    "metadata": {
                        "description": "The private Azure registry server for hyperkube."
                    },
                    "type": "string"
                },
                "servicePrincipalClientId": {
                    "metadata": {
                        "description": "Client ID (used by cloudprovider)"
                    },
                    "type": "securestring"
                },
                "servicePrincipalClientSecret": {
                    "metadata": {
                        "description": "The Service Principal Client Secret."
                    },
                    "type": "securestring"
                },
                "sshRSAPublicKey": {
                    "metadata": {
                        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
                    },
                    "type": "string"
                },
                "targetEnvironment": {
                    "defaultValue": "AzurePublicCloud",
                    "metadata": {
                        "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
                    },
                    "type": "string"
                },
                "vnetCidr": {
                    "defaultValue": "10.0.0.0/8",
                    "metadata": {
                        "description": "Cluster vnet cidr"
                    },
                    "type": "string"
                },
                "vnetCniLinuxPluginsURL": {
                    "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-latest.tgz",
                    "type": "string"
                },
                "vnetCniWindowsPluginsURL": {
                    "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-latest.zip",
                    "type": "string"
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersionCompute')]",
                    "dependsOn": [
                        "[variables('vnetID')]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[variables('linuxpoolVMNamePrefix')]",
                    "properties": {
                        "overprovision": false,
                        "singlePlacementGroup": true,
                        "upgradePolicy": {
                            "mode": "Manual"
                        },
                        "virtualMachineProfile": {
                            "extensionProfile": {
                                "extensions": [
                                    {
                                        "name": "vmssCSE",
                                        "properties": {
                                            "autoUpgradeMinorVersion": true,
                                            "protectedSettings": {
                                                "commandToExecute": "[concat('echo $(date),$(hostname); retrycmd_if_failure() { r=$1; w=$2; t=$3; shift \u0026\u0026 shift \u0026\u0026 shift; for i in $(seq 1 $r); do timeout $t ${@}; [ $? -eq 0  ] \u0026\u0026 break || if [ $i -eq $r ]; then return 1; else sleep $w; fi; done }; ERR_OUTBOUND_CONN_FAIL=50; retrycmd_if_failure 50 1 3 nc -vz k8s.gcr.io 443 \u0026\u0026 retrycmd_if_failure 50 1 3 nc -vz gcr.io 443 \u0026\u0026 retrycmd_if_failure 50 1 3 nc -vz docker.io 443 || exit $ERR_OUTBOUND_CONN_FAIL; for i in $(seq 1 1200); do if [ -f /opt/azure/containers/provision.sh ]; then break; fi; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' GPU_NODE=false SGX_NODE=false /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh \u003e\u003e /var/log/azure/cluster-provision.log 2\u003e\u00261\"')]"
                                            },
                                            "publisher": "Microsoft.Azure.Extensions",
                                            "settings": {},
                                            "type": "CustomScript",
                                            "typeHandlerVersion": "2.0"
                                        }
                                    }
                                ]
                            },
                            "networkProfile": {
                                "networkInterfaceConfigurations": [
                                    {
                                        "name": "[variables('linuxpoolVMNamePrefix')]",
                                        "properties": {
                                            "enableAcceleratedNetworking": false,
                                            "ipConfigurations": [
                                                {
                                                    "name": "ipconfig1",
                                                    "properties": {
                                                        "primary": true,
                                                        "subnet": {
                                                            "id": "[variables('linuxpoolVnetSubnetID')]"
                                                        }
                                                    }
                                                }
                                            ],
                                            "primary": true
                                        }
                                    }
                                ]
                            },
                            "osProfile": {
                                "adminUsername": "[parameters('linuxAdminUsername')]",
                                "computerNamePrefix": "[variables('linuxpoolVMNamePrefix')]",
                                "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionSource'),'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionScript'),'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionInstalls'),'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionConfigs'),'\n    \n\n- path: /opt/azure/containers/provision_configs_custom_cloud.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('provisionConfigsCustomCloud'),'\n\n\n- path: /etc/ssh/sshd_config\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.sshdConfig'),'\n\n- path: /etc/systemd/system.conf\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.systemConf'),'\n\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.healthMonitorScript'),'\n\n- path: /etc/systemd/system/kubelet-monitor.timer\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a timer that delays kubelet-monitor from starting too soon after boot\n    [Timer]\n    OnBootSec=30min\n    [Install]\n    WantedBy=multi-user.target\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a script that checks kubelet health and restarts if needed\n    After=kubelet.service\n    [Service]\n    Restart=always\n    RestartSec=10\n    RemainAfterExit=yes\n    ExecStart=/usr/local/bin/health-monitor.sh kubelet\n\n- path: /etc/systemd/system/docker-monitor.timer\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a timer that delays docker-monitor from starting too soon after boot\n    [Timer]\n    OnBootSec=30min\n    [Install]\n    WantedBy=multi-user.target\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a script that checks docker health and restarts if needed\n    After=docker.service\n    [Service]\n    Restart=always\n    RestartSec=10\n    RemainAfterExit=yes\n    ExecStart=/usr/local/bin/health-monitor.sh container-runtime\n\n- path: /etc/apt/preferences\n  permissions: \"0644\"\n  owner: root\n  content: |\n    Package: walinuxagent\n    Pin: version 2.2.32.2\n    Pin-Priority: 550\n\n\n    \n- path: /etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n    \n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n\n\n\n\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('clientCertificate'),'\n\n\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5% --feature-gates=PodPriority=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=k8s.gcr.io/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=100 \n    KUBELET_IMAGE=',parameters('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=node-role.kubernetes.io/agent=,kubernetes.io/role=agent,agentpool=linuxpool,storageprofile=managed,storagetier=Standard_LRS,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTzU7jSBC++ylKCYfdQ8ebEO2yIB/4MUwEAhQHcQhR1LaLuJR229NVncAM8+4jJ8AQCKPxyVX9/XWpenxjSSbBCXLmqBaqbHTuUzQowXFlc2o611qK+IFYOAo9u9BUmTZhSjacP0PbMMSvnhzmQTBO0C0ow0kwRBbtJNJmqR85iO2CXGVLtHJKBqMQJQtzvNfeyKtS4rMMmeMHkkS0eI66/d0gfsAsabSuHUYr51RzAWFVS6i/eYdhVlnRZNHxi1SHiy28cp6TA1VDuNAuNJS+Ov8JNrP0WRaVQYvuYQw7f5WVtwJPMHNYw13rvdNdC55gmYEyf4MyCP/ABA5ACrSwtl3RlUrJ5h9ifmwcwD21tqV/lin1HBUX2uFHtaANo4IYiEFDrZ2QNrCs3Fy7ytscpAJpzn3N4lCX0OyGsyjYcNjjftAGKERq3g/DGUnh005WlSv9Ne7t74rCYb/7f/ff9qrIqrLZB7Xb7fV7e//tdt9dhJub8CNnYkAtwaJ0qF70O5LVU4fiCLkX7W2S1JqFqejUIIMSsLqZhCGWrVCqfw/9ZO3hLoDnTym0jYRidAt0Gye2ylEZnaLhqLXz/fzmKL6IR9PLq5N4enF4FF8kP1obhEXU26wr40tUtfEzsiont346bwa7RqwB/Ia782J2fHV5Ojj7VV9dj5JtuGF8NkhG8XCVbkv7djD6Mh0dDi5HSRCMB5ZFGzMJbrUVzI8eo9IbIeUZXUe0m6EEPwMAAP//egq4kGEEAAA=\n\n\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n\n\n\n- path: \"/etc/kubernetes/azurestackcloud.json\"\n  permissions: \"0600\"\n  owner: \"root\"\n  content: |\n    ',variables('environmentJSON'),'\n\n\n\nruncmd:\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n'))]",
                                "linuxConfiguration": {
                                    "disablePasswordAuthentication": true,
                                    "ssh": {
                                        "publicKeys": [
                                            {
                                                "keyData": "[parameters('sshRSAPublicKey')]",
                                                "path": "[variables('sshKeyPath')]"
                                            }
                                        ]
                                    }
                                }
                            },
                            "storageProfile": {
                                "dataDisks": null,
                                "imageReference": {
                                    "offer": "[variables('linuxpoolosImageOffer')]",
                                    "publisher": "[variables('linuxpoolosImagePublisher')]",
                                    "sku": "[variables('linuxpoolosImageSKU')]",
                                    "version": "[variables('linuxpoolosImageVersion')]"
                                },
                                "osDisk": {
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage",
                                    "diskSizeGB": 200
                                }
                            }
                        }
                    },
                    "sku": {
                        "capacity": 1,
                        "name": "[variables('linuxpoolVMSize')]",
                        "tier": "Standard"
                    },
                    "tags": {
                        "aksEngineVersion": "[parameters('aksEngineVersion')]",
                        "creationSource": "[concat(parameters('generatorCode'), '-', variables('linuxpoolVMNamePrefix'))]",
                        "orchestrator": "[variables('orchestratorNameVersionTag')]",
                        "poolName": "linuxpool",
                        "resourceNameSuffix": "[parameters('nameSuffix')]"
                    },
                    "type": "Microsoft.Compute/virtualMachineScaleSets"
                },
                {
                    "apiVersion": "[variables('apiVersionCompute')]",
                    "location": "[variables('location')]",
                    "name": "[variables('masterAvailabilitySet')]",
                    "properties": {
                        "platformFaultDomainCount": 2,
                        "platformUpdateDomainCount": 3
                    },
                    "sku": {
                        "name": "Aligned"
                    },
                    "tags": null,
                    "type": "Microsoft.Compute/availabilitySets"
                },
                {
                    "apiVersion": "[variables('apiVersionNetwork')]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[variables('virtualNetworkName')]",
                    "properties": {
                        "addressSpace": {
                            "addressPrefixes": [
                                "[parameters('vnetCidr')]"
                            ]
                        },
                        "subnets": [
                            {
                                "name": "[variables('subnetName')]",
                                "properties": {
                                    "addressPrefix": "[parameters('masterSubnet')]",
                                    "networkSecurityGroup": {
                                        "id": "[variables('nsgID')]"
                                    }
                                }
                            }
                        ]
                    },
                    "tags": null,
                    "type": "Microsoft.Network/virtualNetworks"
                },
                {
                    "apiVersion": "[variables('apiVersionNetwork')]",
                    "location": "[variables('location')]",
                    "name": "[variables('nsgName')]",
                    "properties": {
                        "securityRules": [
                            {
                                "name": "allow_ssh",
                                "properties": {
                                    "access": "Allow",
                                    "description": "Allow SSH traffic to master",
                                    "destinationAddressPrefix": "*",
                                    "destinationPortRange": "22-22",
                                    "direction": "Inbound",
                                    "priority": 101,
                                    "protocol": "Tcp",
                                    "sourceAddressPrefix": "*",
                                    "sourcePortRange": "*"
                                }
                            },
                            {
                                "name": "allow_kube_tls",
                                "properties": {
                                    "access": "Allow",
                                    "description": "Allow kube-apiserver (tls) traffic to master",
                                    "destinationAddressPrefix": "*",
                                    "destinationPortRange": "443-443",
                                    "direction": "Inbound",
                                    "priority": 100,
                                    "protocol": "Tcp",
                                    "sourceAddressPrefix": "*",
                                    "sourcePortRange": "*"
                                }
                            },
                            {
                                "name": "allow_vnet_inbound",
                                "properties": {
                                    "access": "Allow",
                                    "description": "Allow traffic inbound within vnet",
                                    "destinationAddressPrefix": "10.0.0.0/8",
                                    "destinationPortRange": "*",
                                    "direction": "Inbound",
                                    "priority": 4095,
                                    "protocol": "*",
                                    "sourceAddressPrefix": "10.0.0.0/8",
                                    "sourcePortRange": "*"
                                }
                            },
                            {
                                "name": "allow_vnet_outbound",
                                "properties": {
                                    "access": "Allow",
                                    "description": "Allow traffic outbound within vnet",
                                    "destinationAddressPrefix": "10.0.0.0/8",
                                    "destinationPortRange": "*",
                                    "direction": "Outbound",
                                    "priority": 4095,
                                    "protocol": "*",
                                    "sourceAddressPrefix": "10.0.0.0/8",
                                    "sourcePortRange": "*"
                                }
                            }
                        ]
                    },
                    "tags": null,
                    "type": "Microsoft.Network/networkSecurityGroups"
                },
                {
                    "apiVersion": "[variables('apiVersionNetwork')]",
                    "location": "[variables('location')]",
                    "name": "[variables('masterPublicIPAddressName')]",
                    "properties": {
                        "dnsSettings": {
                            "domainNameLabel": "[variables('masterFqdnPrefix')]"
                        },
                        "publicIPAllocationMethod": "Static"
                    },
                    "sku": {
                        "name": "[variables('loadBalancerSku')]"
                    },
                    "tags": null,
                    "type": "Microsoft.Network/publicIPAddresses"
                },
                {
                    "apiVersion": "[variables('apiVersionNetwork')]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[variables('masterLbName')]",
                    "properties": {
                        "backendAddressPools": [
                            {
                                "name": "[variables('masterLbBackendPoolName')]"
                            }
                        ],
                        "frontendIPConfigurations": [
                            {
                                "name": "[variables('masterLbIPConfigName')]",
                                "properties": {
                                    "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('masterPublicIPAddressName'))]"
                                    }
                                }
                            }
                        ],
                        "inboundNatRules": [
                            {
                                "name": "[concat('SSH-', variables('masterVMNamePrefix'), 0)]",
                                "properties": {
                                    "backendPort": 22,
                                    "enableFloatingIP": false,
                                    "frontendIPConfiguration": {
                                        "id": "[variables('masterLbIPConfigID')]"
                                    },
                                    "frontendPort": 22,
                                    "protocol": "Tcp"
                                }
                            }
                        ],
                        "loadBalancingRules": [
                            {
                                "name": "LBRuleHTTPS",
                                "properties": {
                                    "backendAddressPool": {
                                        "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                    },
                                    "backendPort": 443,
                                    "enableFloatingIP": false,
                                    "frontendIPConfiguration": {
                                        "id": "[variables('masterLbIPConfigID')]"
                                    },
                                    "frontendPort": 443,
                                    "idleTimeoutInMinutes": 5,
                                    "loadDistribution": "Default",
                                    "probe": {
                                        "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
                                    },
                                    "protocol": "Tcp"
                                }
                            }
                        ],
                        "probes": [
                            {
                                "name": "tcpHTTPSProbe",
                                "properties": {
                                    "intervalInSeconds": 5,
                                    "numberOfProbes": 2,
                                    "port": 443,
                                    "protocol": "Tcp"
                                }
                            }
                        ]
                    },
                    "sku": {
                        "name": "[variables('loadBalancerSku')]"
                    },
                    "tags": null,
                    "type": "Microsoft.Network/loadBalancers"
                },
                {
                    "apiVersion": "[variables('apiVersionNetwork')]",
                    "copy": {
                        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                        "name": "nicLoopNode"
                    },
                    "dependsOn": [
                        "[variables('vnetID')]",
                        "[variables('masterLbName')]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
                    "properties": {
                        "ipConfigurations": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "loadBalancerBackendAddressPools": [
                                        {
                                            "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                        }
                                    ],
                                    "loadBalancerInboundNatRules": [
                                        {
                                            "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                                        }
                                    ],
                                    "primary": true,
                                    "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
                                    "privateIPAllocationMethod": "Static",
                                    "subnet": {
                                        "id": "[variables('vnetSubnetID')]"
                                    }
                                }
                            }
                        ]
                    },
                    "tags": null,
                    "type": "Microsoft.Network/networkInterfaces"
                },
                {
                    "apiVersion": "[variables('apiVersionCompute')]",
                    "copy": {
                        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                        "name": "vmLoopNode"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
                        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                    "properties": {
                        "availabilitySet": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
                        },
                        "hardwareProfile": {
                            "vmSize": "Standard_D2_v2"
                        },
                        "networkProfile": {
                            "networkInterfaces": [
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
                                }
                            ]
                        },
                        "osProfile": {
                            "adminUsername": "[parameters('linuxAdminUsername')]",
                            "computerName": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                            "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n- path: /opt/azure/containers/provision_source.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionSource'),'\n\n- path: /opt/azure/containers/provision.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionScript'),'\n\n- path: /opt/azure/containers/provision_installs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionInstalls'),'\n\n- path: /opt/azure/containers/provision_configs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.provisionConfigs'),'\n\n\n- path: /opt/azure/containers/provision_configs_custom_cloud.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('provisionConfigsCustomCloud'),'\n\n\n- path: /etc/ssh/sshd_config\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.sshdConfig'),'\n\n- path: /etc/systemd/system.conf\n  permissions: \"0644\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.systemConf'),'\n\n- path: /usr/local/bin/health-monitor.sh\n  permissions: \"0544\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.healthMonitorScript'),'\n\n- path: /etc/systemd/system/kubelet-monitor.timer\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a timer that delays kubelet-monitor from starting too soon after boot\n    [Timer]\n    OnBootSec=30min\n    [Install]\n    WantedBy=multi-user.target\n\n- path: /etc/systemd/system/kubelet-monitor.service\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a script that checks kubelet health and restarts if needed\n    After=kubelet.service\n    [Service]\n    Restart=always\n    RestartSec=10\n    RemainAfterExit=yes\n    ExecStart=/usr/local/bin/health-monitor.sh kubelet\n\n- path: /etc/systemd/system/docker-monitor.timer\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a timer that delays docker-monitor from starting too soon after boot\n    [Timer]\n    OnBootSec=30min\n    [Install]\n    WantedBy=multi-user.target\n\n- path: /etc/systemd/system/docker-monitor.service\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=a script that checks docker health and restarts if needed\n    After=docker.service\n    [Service]\n    Restart=always\n    RestartSec=10\n    RemainAfterExit=yes\n    ExecStart=/usr/local/bin/health-monitor.sh container-runtime\n\n- path: /etc/apt/preferences\n  permissions: \"0644\"\n  owner: root\n  content: |\n    Package: walinuxagent\n    Pin: version 2.2.32.2\n    Pin-Priority: 550\n\n\n    \n- path: /etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    MountFlags=shared\n    \n\n- path: /etc/systemd/system/docker.service.d/exec_start.conf\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Service]\n    ExecStart=\n    \n    ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay2 --bip=',parameters('dockerBridgeCidr'),'\n    \n\n- path: /etc/docker/daemon.json\n  permissions: \"0644\"\n  owner: root\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n\n\n\n- path: /etc/kubernetes/certs/ca.crt\n  permissions: \"0644\"\n  encoding: base64\n  owner: root\n  content: |\n    ',parameters('caCertificate'),'\n\n- path: /etc/kubernetes/certs/client.crt\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',parameters('clientCertificate'),'\n\n\n- path: /etc/kubernetes/generate-proxy-certs.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.generateProxyCertsScript'),'\n\n\n\n\n- path: /var/lib/kubelet/kubeconfig\n  permissions: \"0644\"\n  owner: root\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n      \n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n      \n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SRQWuDQBCF7/6KwXNFel1C7jkkFQq9hB7GdapLdmdldzT478umRkISGy/CzHufzzfYmy8K0XhWML5nJ8ONgso3mSPBBgVVBsDoSMFpqKmIuqNmsBTmcexRL7spCrkMwGJNNiYngBgKCrRnCd4WvUWmy1x713smlgdw7Eknb+ejHEjOPpwUSBiSL3HQMIWZXqxlS49x2JKCjXHt9nZUDdZW3ho9Kdj9HLxUgSKxzBrtncNUwzEvu6mnkOD5G+QLP/+epRjaqOC4Se/tdTh6Ozja+4FlTnmblEQXCRiYhOKyBnDJUKF0CkoSXT4RXRkjhsKa+sKxJCuQEUNpTV3eq64UF80L5xmxJZZyj4wtNbuGWIxMxSeJGG5v0wfC5oPttFzqr4W7Mz39+XTny4cXXL/awv8NrJKeVfFYw0v7yz5+AwAA//98jKkxTgMAAA==\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySsc6jMAyAd57CYj6Ebo2q7h3aQzrpluoGE3w0auKgxFDx9qdQqFBb/v5ZkBz7s/kc7MwfCtF4VjD8zK6GGwWVbzJHgg0KqgyA0ZGCa19ToT1L8NZSKBwythTm+9ihXpLiGIVcBmCxJhsTAkAMBQVzfdFZZJri2rvOM7Fsd4gd6QS5+CgnkpsPVwUS+gRI6WiYwtym+DhtOsZhSwp2xrX7dajqra28NXpUcPh38lIFisQy52jvHCZD57y8jB2F1CX/Aflro/zvXIOhjQrOu/TdL8HB297R0fcs89zr2Ul0kciBSSg+rgFcKqhQLgpKEl2+SVoYA4bCmnriWJINyIChtKYun7MWiovmQ+UNsSWW8jj9dnNoiMXIWPwmEcPtevpA2PxiOz52dz+7tYxo0z7ukaeNvrWSnsQ00QPXber5Ws0m6Z2jVz8fy78lanaRNPwPAAD//74dndSaAwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySwWrjMBCG736KIec1Zq+i9N5Du4aFvZQ9TORZR0SaEdLYxW+/yNghbeykuQRG83/680UY3R9K2QkbGH9WZ8edgVa6KpBih4qmAmAMZOA8HKnG6DKlkdIyzhHtepanrBQqAI9H8rkkAdRRMmCFNYmvo0emeW4lRGFivQHnSLZkT5L1jfRD0tmApqHkCgcdU1ro9V638nEBezLw5EL/fD1qB+9b8c5OBl7+vYm2iTKxLjtWQsCi4f3QnKZIqcAPP+Bw4R/+LquY+mzg/al8P6/DUfwQ6FUG1qXldVNSWxdgYlLKl2OAUAIt6slAQ2qbjaWVMWKqvTvOHE+6AxkxNd4dm69bKyVk9yD5gdgTa/OKjD11Lx2xOp3q36TquL9unwi7X+ynyz/1+a4s9rxzmcTbajh0Tr309/pJP/+yebVarX95Fpuyy7uaQRd63LV+3/guaUv9rfaH8W/531C8C15d73i+X+iT8P8BAAD//6wu3Pc4BAAA\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRwW76MAzG730Kv0DV///AJZp25wCrNGl3k3glonG62Cnq208NUGAaaMfY3/f5ZwcH/0FJfGQD4//q4NkZaKOrAik6VDQVAGMgA4e8oxqdi1wHZOwonVsyoL30ZRKlUAGMN6kykJ1z9lF0S3qM6WBAU6YKwEZW9ExJZkX9bBaAD9iRgRcfutdroc1938be28nA+nMbtU0kxFoUiSTmZKnEnwpfmUSXN4AdsoFVWN6BQkyTgdW/jS/FMfY50CZmvtgunAVRzs4wC1rUvYGG1DbzEolJSZo7XSJ0b9xPyw2ueUH8L2Ejpqb3u+aI2BFrsykncWtHrF6n+p1UPXcP80/8dwe+AZp/pQw624fnG/xEfWD/M/N3AAAA///0SbKqggIAAA==\n\n\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RVT2/iPhC98yms3t2016j8pJ9aDj2URVtp78Z5gIXtSe0xG779ykmBhD9Z1qfwZvzmed4Yq9r8QoiGfCnQMHz+jMXueQlWz5Ot8VUp3hQc+U/wxIFVpViVEyGsWsLG/CXENi0RPBjx0VChbYqMICPCzmiU4oFDwkObqcnV5OG5bDfJOlCzbyNsEErhqcJECK8czjIyFGulD3jcR4abxBo6i2C42ipGJ6gvNK++2HEZF1KEOJTIqw6GguH9q1UxzluVnRCZ06UOho1W9jubySIozj09EEixxb4jl4EsHoe9cyq37qiE6ryfQilmX+lIK8RO2TRsbF5YraC5FHP61BtUyeJY9ET0MGtM5Hht16yBTvyPm85KafKsjEfonViTc8pXp/ZLUWz2NUI+ew8cuiCFlDlBk1+Z9bTYqVBYsywyZsHFKTbYcpg+baowfXl9f/v53yC+guIUINeKEaezpkYwDp6Vff02b0HV/94Tt8ZNc4sHBK1K6ajC9CVrWOTfH1ThVMc4tUYpXoxbn4GLZO2CrNH7Uryv5sSLgAjPx6wrk9+tgEgpaPSmOINfCZEHmBC6TqV4fnpyRzRCp3ZsyTMa7qfXweyMxRpVKQZn3ZFNDh+UfJ9fCpeRheJNKQqwLmK0hUbg2CPtThGjlW1EbijyQLaqfni7P6t4yX26HBfkYC2vhu8iv2OY+l5chO4qEpIvGlZLi/hoSW8vqE3dRQfBIUcW6ShfsFhcSsunt9/hv6nLHszBvylsB3jnc++65sS2en9KOjUphiJuVEChVWutWRmt+v0fcX6U+Q5DbtgxSntjiEZGaJTupqM3/Rylu2rubWvzo/EJC53/k4/5+ak+e0UolsIan5rJnwAAAP//oTzHAuEHAAA=\n\n- path: /etc/kubernetes/addons/flannel-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xXW3PbNhN916/YYR7yfTMBKddpLkynM47spi9xMnGmL51OBwKXIiIQgIGlLPXy3zvgRSJpWrU9vfGBIxKLPWd3D7GrJ/C5kB5yqRBuuAdbKYUZ5M6U6ewJFETWp0myklRUy1iYMhHGofFJrrjWqOB/31+cnQMnIFkimLz2ULt6/vrlKc6/wq9PX5++fPX/GWNsxq38AZ2XRqewOZmtpc5SuEK3kQLPhDCVplmJxDNOPJ0BaF5iCi1W++wtF5jCuloi8ztPWM4AFF+i8mELAM8yo0uu+QpdHMycRkIfS5OUJsMULrSvHF5spSdf02p4LIzO5eo9t2OatxnV4C0tJvLVfamRRJeCNhk2TK3tR/dQ6h0noSUTRufxFx8Y/1a7+rW+A0SBWJRCJJZuHj3r3tLO1m9b9MNChgpXnMJi5wIgkv4cc14pescJb/guSoFcha3B77PurpGOULlEujFuHXC/CdEtVOUJ3UJm7tsDg7dcrFFnQwKfW76breI6GuGOpYVbQh1++mRzskTindTOOZZGX+GUygY1zfy/U1JvUQS/hKVVnLDB6JMNVx9/gsMkDwCutSFOIS2HrV4UmFUKXcyVLfiIoXCSpOCKWZOl8PRpva3jGK7CeGqrOlBE4HKFCgUZdwALpRghcCeKFHiZvXh+zMz4FJTU1bY1sk4aJ2m3UNz7y7p+TXVYQGYd79aajEI3jpzBGndN1kZg2hBzyLPd3hbA2ODBuBTaSh2WMM9RUAqX5qpN5hQGc0aNgUoe5D+Ncl3t6Ydrw1WFKUQhx9GDwBdtLs6CEP0Hre4Rlh8cyZejUzhcwmjiUqPbZ5RNfEd7JFnyFaZwXfFdratBE0k38/hVPGdDFQhTljx8tD9ClBhLyVLqbkcWPYOIMWlZyf1189B8otUyHEHlykXw00HkKKpaLUYTbintJcA6uZEKV5gN9AuAetPXShPbxw/nP1+evb8YF+a7ul9C78olquwT5sO37fuPnIp0/1XHwfedUFcfzxZ/A159ru1tN0ZVJb4Pxfa3o3aV7nktg1XjMemvsGG3btvi1C4kkfRVkowUJLUnrhQTWt5fQCfz4woK6vFFLRUR7h4JGALbvgFhgeUTtAZ9tVkXWiYaKc6Sk3lnFwebN3BThCEqaOgNZAa8QrRw+mI+D48a+3o8nu5+2LcTt2fwFya+4fOnlQ+Hfe1poDF7txSGkRzd/pjQRDewDT3eMaKFIeEfHnfbubKZcj4ZhYMpxS25iHlFhXHyl7o7xetXdV/ohpZjo/DjJ15XqabWDLiV75ypbO8Qj5ru4tCbygnsrViTNf1hg27Ze79Ceriz0BInvSnpaf9ww0kUj3SeeOJUTWLY2u1khd5KnUm9+m8Uyihsj/Qu/CNkZgC39Tam46vlFxTh1GEw+e/r3v+5/ggAAP//Zx4OVDoOAAA=\n\n- path: /etc/kubernetes/addons/azure-cloud-provider-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7ySMW8UMRCFe/+K0TVu8KF0yB1Q0AeJJkrh9T4Sc17bmhmvRH492l1BBCzRJTrSWWPNm3lvPuecCS19AUuqxRMPIR5D1/vK6SFoquV4eifHVN/OVwM0XJlTKqOnj7mLgq9rhpmgYQwavCHKYUCW5UV06gO4QLH2x63DCXhOEZ4Oyh0HQ1TCBE/yXRSTDw+d4WKufXSN65xGsOGeId44Ci194tqbeLo5HG4NEUNq54i1ghlFZa3P4GHdw1FkBMX6bEHj/frqbVyKF/D/IZUxlbvXiKFmXOPrIvsziCc2NkR/3+qcMdKHb4i6Br4pfN6WfR9j7UV/iex2b5/SwmJu8e62WZeI+reMd4y0RVsURd1cc5/ghlRGML3oJLvUWfsndVYQGSr2EbtlBt3YO6h9Yzf87O3/Yu0ZObwshkfq9ng6j8RnHetsAJ/w+Q8IfwQAAP//R0K/CfAEAAA=\n\n- path: /etc/kubernetes/addons/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5ySy07zMBCF93mKUf7dL9qqO5QXYAMIhcsGsZjaQzpqYruecWjfHuXS0laARHZ2fObMN5ODgV8oCntXACbLOt9cy5z9ol2uSHEJ/+BpzQIsEGmbOJKdZxt2toAHX7PZZ75hfVSsSIoMYAYlbROJlmSIW7JZTPXhqaaW6uJLIcE7oQwAIJL4FM2g7LRV9CkUkOf9/VQAr3nwVvK3U887UrSoONFsUfsqv4LhLIqaLvzvvRtAk1Dsy2QvSk2xSSuaheh3+74AoKW46gUfqGY9fvwbETkbPDuVDkkotmzoN56bzuwUCpOuySkbVLIjgvOuHJs8l7dHkAUG/n84t0MUvvlZE6Yw3r1z1WCQAwE2JAHH535xA+/5aNM7CplIKpPtjnfaKbluE/Jjxs5jP1RfRv8zAAD//+vGAkRdAwAA\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8ySTWszMQyE7/4VInfvS24vvvbaLxLotSi2kpr1xyLJgfTXl91NA2lD6aGEnOUZzTwWDvGFWGItDkQr4466/r90sf7bLzekuDR9LMHBeh7eJRQxmRQDKjoDUDCTg0BbbEkNAJZSFTXWIuMYPm39qOxGy65vG+JCStOeKPaottMbBwvlRgsDkHBD6WhzLvKpiRJbId5HTyfNwHUfxzrE7osE3xuTDVF6MyBjJiWevOeCD1hwR8GcAqP3tRXVw0BjfSwBObzer9YGwKN/i2WXayAHK8LwVNLBWGvNXwHNcxw7MOXY8newt8PmeY54dTRy/JNbZvPru7nQ/EdeF7hMQbcx0VWATIvOgUjfHqckZ60/AgAA//9h3eJ/YwQAAA==\n\n\n\n\n\n- path: /etc/kubernetes/addons/blobfuse-flexvolume-installer.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5yUz4rbMBDG736KYe+2kkMh6NxLoVsCC73LyiQRGWlczcgkb1+Ek1072Zaw38mM5vtp/th2Q/iNWQInC3hWTPVRzLjuUd26OYW0s/DdYeT0htpEVLdz6mwDkFxECz1xvy+C7Z7wPDK1IYk6IszXFBmcRwun0mMrF1GMDQC5HkkqBeC0kdYNwwdqipYec0JF6QIbT0UUcyuYx1BxL5oLvjQyoK8UQUKvnCdidOqPP2dX3BfbACjGgZzi1THrq4oW5k/sk54rsmbeCq3ynNSFhPn9gvaZYU4K0R3QQvS5i8FnFt5r5zma00bM1VYimntUiWjX3arbLEnbQrRlCv5i4cf+F+s2o2DS96yMwiV7nA2jBv8UFF3EAPxQLHxbxUUwYuR8sbBevYbZAYUYvu6f+nnlkuaM2xRHpoHKISSZkWJN3jo9WjCo3nyszky0q8U84lwmPvwDNbpsiA9mOmnm5T1s9w50ZJkoM/TwGfWme9xjm/9BPtNz4h2+Lb6kqvon6JZvOosFCqmcm78BAAD//7hUPOZABAAA\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RXS28btxO/61MQvuTEtZS//YdAQAfXSdMCtSPYQYGeDIo71rLmq+RwYxn98AW5u/I+pNRobbQdwDCXM8N5/TgccSd/Bh+kNYzUi9mDNCUjt+BrKeBCCBsNzjQgLzlyNiPEcA2MVMBdQPDtRnBcACMPcQM07AKCnhGi+AZUSDokc7wBhFBIeypUTMo0NGYYOUEf4SRL8rK0RnPDt+CLoZq2JTByA8IaIRXMKKX5rx+C33BR8IiV9fKJo7SmeFhm7XqxAeRdhJeNCzdWwYHwmhhYFyX9KrGihhuze7u4PpoQPXx8lAHDzEcFgc0o4U5+8ja6bI8SeEQwKdKQP7lzaeEh2OgFtEIlOGV3GgwmZg1+0zK2gPm/kqFZfOUoqryKruQIeeny5sT0ycnUEtStEfoMg/bTlu3K2fJlbrxCKb+TppRm+6+sqFVwA/fJSJfYb4Q4I2SK0xfEEuLmVxCYoXPwKr/8Ao/LsW8Ol9bcy+0Vd9/oC1RkoX+gPQyS3jl3nZLT+B19zjMjv9PmwF6IOYeN56f1gitX8UXjXw58esrxJLVpH6Tor0U8lGzS/MOwei8pZ3AgkmlnPbb3MC0ZWc6zGeR+C7hut5bvZ4QEUCDQ+tbjZaDcuZ6tcfDPzWl0Qz/sG9JrPCUTP94SQV3aPDglBQ+MLCaZ0al9/dRz8bCTCNopjtAq9RKRSA30j4VJCDfGYgZfTziICsqowBcZtKOwhJcoBVfU2ZKRd++yWhdYIuel9RJ3l4qHcN3rMTS1cdrpt9LCGuTSgO85QInUfJvqtgzFVvhkdt8LuC7/f8bqRXFenO01SKOxjkqtrZJix8iP99cW1x4C5EbV0QQmHQ0eo2dSUksc7REiXGRkudSjbQ3a+h0j7+dnV3LA8/BbhPC3D1KyBgMhrL3dwPCsCtF9AhwbcBwrRlL6FFZPY2b/gvYpQSC3hi9f1gOWNBIlVx9A8d1tmp3KBOL21neEUoONuOef97jCas1NOXSTktMDFUn7lDZVWfVAGKLW3O/uuJOsxR85gpp8PamHIJ/As0WxfAXM7B/6jv4TyAFTj3PehHX1y93684e764urj6Ojaq4ifO+tHpsm5F6CKtsB5CBvnWHXtaUimfoz67fri8s3diE/Bz352qqo4SrNMoP80sMDCG3kBwZ1Um5MnQKK0/2o0tExwDtb3o2R1CC+NVZKvzp8ZCvm4mo515N9eETPM3denE/ZDUBWi7P5CGjPuq3IGIlJACsPobKqXJ1PeM+/FFZHb/O+3R8XcVYp6sBLW67+N080dTOg1BytX8GjswZM6kmzfk0Hr8kLiym6UXRYq2OzaKIwmIevD70taBX48RNLyQPsGLls38KL1KbCZ6P6YLAu6VnPSDs9tO7YEm4HE0OiNCCNHmobGFHSxMfZHwEAAP//P6q84JYPAAA=\n\n- path: /etc/kubernetes/addons/ip-masq-agent.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xUy04rORDd5ytK7J0HYhDybhRYIJFMBNLsC3clWPGj4yr3JKP5+JG7k9AdAfdyV9erxD7n1KlHF9b2b0psY9BAe6FQfvKkmb2S4Gy0taHScI/kY3ghGXkSrFBQjwACetKA/+ZEytbKI+8UbijI8Y1rNKRhm19J8YGF/AjA4Ss5LnQAE30dAwX5TAVacgokxGMbJ8ZlFkqKKTW2aF9JynTVIrGqYvAYcENpPKT5WJGGZzIxGOuohYulpCHEikZckymGhHztUKgz18+0nL7x1tkdK6zrz61fRCl/T5HKqZONycph7pB52ZayK5IqcGWSFWvQHdFvkWVJ8k9MWw0l6eN9wb6QIyMxvXsrvbuoQWQNzoa8P4IkOkoopdknnoItHTTMj5H/LAXlv4I7nHVjXTgxaXjYWxYeElvfKTq6LD+Wpn0kssvnBAEadHnY0nJovSYjGpbxxbxRlR2dg74LXXV2PmI97Mlk+SbpIpSJQdAGSr1SfTX83bEeN2X873i8MakUYoBT6KvbG91cj6fj6ZC0ys6torPmoOFxvYyySsR9aSaT29mJQWgv741vx6qxjjZUDeYEoIkue1rEHIT7hC9SUSaGtd2ojtrjAPiis0J50zAhMZMOeYYk4piToUGkRLtMPIwOYOqs4Y+pH8qTj+lQ7he29+Cst9/iX/cEuix67F/JvLtfYD008SOhkVJq1F+1zWm1zk+CP7da1bnQv+GGfQicEx1XwymVQUQN/6lWK8SwQN5lSljR/PH+ufdpzabj65ub8llMZrfdLkbePdmwfYoGnYY1Ou6akogPwTwGodSUl9sp/x8AAP//35GpbdEGAAA=\n\n- path: /etc/kubernetes/addons/keyvault-flexvolume-installer.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5xUwW7bMAy9+yuI3mOnh2GDbgMaDD10CNpi10GRX1IhkuiJlJH8/aAZSZxh3dbyJDySj3wkITv4b8jiORnCQZHqU7rxdgO1t83ep97QnUXk9ARtItT2Vq1piILdIEh9EdlhMLTHcbQl6GIbcBg5lIhfzn3ZICcopPXcuVBEkReCPHoHQzeaC24mmr7nFG2yO+T2Oi1yD0OrJCVjdfCi0hAlG/Fa3eqTwdYKlWkhR1HERga42rMiDsEqpv7nuqrNtf1T39s0vkcn0antasoB2Wpd1AlynNT6hHxGFn8dzmQ+2h0MRZfb6F1m4a22jmO3/yTdJb77A4cZl+2y/XhNtS4hrDl4dzR0v/3Kus4QJD1HZQiX7DCbbAV/FIheYURuKIY+LOMVGBE5Hw3dLh/8zBF89O/PRxovqaexPX9+/LJ6/n53/zgjGG0oMNRBXXfZWjdNZAhl55Ocwyf0gUuat7agWJG11Zf/JTqd+cjh2jWFzzb+wjIxz3KHN1R6pU7iHk8IcMr5Ql0/iN9ul8VQ8Kkcmp8BAAD//zw4L4JXBAAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9xVTW8jNwy9z68Q5hz5A5sWhoAe2gbYFugGRhL0UuRAa5ixan1V5BiZFv3vhSYee6axHW+KBYrVSXiUHslHkYJofsVEJngltvNiY3ylxD2mrdH4vdah8Vw4ZKiAQRVCWFihpbwTYrMgCTEqsWlWmDwykqyA1qsAqXo5sTdMTJhq2xBjkvRCr0TJqcGyOwlVFbwDDzWmyfiaCxUqcYc6eG0sFkJ4cHjSazZSBL07IaklRldIKXfZ3QWLxTDvtAI9gYbXIZk/gU3wk82ic72dj5I/7Vc6440De9r//0K61FgkVUgB0XxMoYmkxG9l+VgIkZBCkzR2CKFOyNQZtphWHagTAmP5+PZ1HfyTqR3EdzMMA+gNt1nYbDxagA22ch1shWnss0Yur0TZxCq7vhJlhRbflcZlcRAyG1/TuSguEqAr9AnPa4SY38PYSUzhuf0c8ml/45yLK1GumaPqAdUjNIBeJfvYNdzFXXbozB+Mr4yvv7K+Cxbv8CnH0JfmjCCFEINJdVH61Kx+R81dbx+d4e8fmud+iNNfw8UqvlWR94RNEXWOI4bEXUCy2ypxff2hc8qQauRlhy1eQEKLmkO67J1wG1GJ21BhJnmlEz4z+ryl6Xa+QoZetxuMNrQOz/2qX+bP/LJKJ4zWaCAl5q+0dMB6/csgwwvkRRctMO4IBkrlZUdclzR1H2ZeOngG4zHtGaSAVA/4pJASGg6yRo8JGKXGxObJaGCk0bF+Asp1IP6um5PTaQ9OBkqpxWx/0Tios44LmtQ65XId7W1w1bfXajufzGeT+fjysrF2GazRrRI/P90GXiYk7Np8J5HZokeiZQorPGQmRA7xI/IQEiICr5Uop+UYHbbHYZFeY34oPz08LO8HFuMNG7A3aKG9zw+vIiU+zAYn2DgMDR8znn17h3BGRdoXcnks0JgCBx2sEg8/Lvf44RscHE34R4PENBZFxyaHOHMj1KELqVVi/s3skxlYrHHmvzBsg20cfsqzesgizw3//CppyO3y9WVXzOnQ+EI+Eu8zaNFFbm9MUuKvv3cwjT6X27eK50OF96OZkFeei/8aW4GUsMY3z8U/AQAA//+ptPHgmAwAAA==\n\n- path: /etc/kubernetes/addons/kube-metrics-server-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RWW08rNxB+319h5eU8eQ+0qEKW+nBKUYUEKCKI18rxDss0vmk8m5L++mpvSTaXFWkp5fgljtdz+eabi3XEJ6CEwSuxPM8W6AslZkBLNPDNmFB5zhywLjRrlQnhtQMlHDChSTIBLYG64xS1ASUW1RxkWiUGlwlh9RxsqiVF84U8MKQcw1djq8RAjQ6sBSdMFUyam7oognfa6xIoH4q5UIAS1z5VBNevmDhlUspsGwfNtcl1xS+B8C/NGHy+uGyE1wivWuMPwcIBeK33ag/lR4ChykJSmRQ64m8UqtjYk2JSKyNIoSID3VkMRWo2PhTQ7Xoi6r9LoHl3tQRufi2mdvOnZvNywAy8Mvg6jumAwQKiDSsHnt+o/l8x8wv6An352QgKFh7guTbSx24EWCbEfsaNw0jV/A8w3CTBwXo8tQpPYWEOrHsqxjkYWpe1Pkmgi/+/H/xDhgbUrMtA6ohbEMEzmka8B/tp6HpT5QydUF0GNuQVYKHUHL7fQtqB8Z8zszsw321SnhbIfZJa25O7gfHJCWymCKZ2JYEFw4G6TLhMUsd4AFUMxOuhRKzExcWPjUikwMEEq8Tj1bQ5YU0l8HR9azeomwG0k9+/rofP+71IjgJ617R/ABO8QQtH4urqYXm75deYZwwuWs3QiW5Fol5HolEvOzAwDr73s9kPiub+uAETPGv0QGsjcswfIdDpsubnMuWloSZeO0PFFT9dqOVZ/kN+PpSaVtZOg0WzUuLm+T7wlCBBU9O9M85pX2zgSvH1iBtSSNk+c37eYi9Vzmla/a4jqi9f+vCGAmYD7upVZ+kO8SEpYdFXr3v5rSMSlJiYRnr5t+nN8Z7SXc07OJsG+RFde5PBraZsNOuOVmHZtvs9CMtNb23jIQT6BKYimC0wPt7OnoDweaVEDaBXNCUMhLy6Q4+uckqcn51tlPVf2+O/AwAA//9I3iWt8gwAAA==\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUTW/bMAy9+1cQuTuNtxYYdMvaoAvQdkZSDNupUGQ20aqvSZTR7NcPdmrXH1nRDeiA+WSRfOJ7j5K4k1/QB2kNgzJLHqQpGKzRl1LgXAgbDSUaiRecOEsADNfIgKRS6J+WwXGBDB7iBtOwD4Q6AVB8gypUCKgz3iBhmEp7IlQMhD4NhyYMJuQjTupKXhTWaG74Fv20D9O2QAYLE6LHxaMMFJI0TZMuf7/hYsoj7ayXPzlJa6YPH2pwmW2QeCPv/MBgZRV+lKaQZvuSxH+hxFuFK7yvmnAnL72N7gU5CcBISMu7IcULLU0S4uY7CgosSeHobF870aHXw7PSc7BrGXeOwQ6VrleDZm/naL9VWqBTdv97ecGhqPg666kmno6pVjkGp6fZ+9N6TdxvkfI62pYFVCjI+leIp73DdobLfGQxPhKa6jcMzu9FLUbj4Gr+v64Taqc44YF7V1P1dXWNtR3V12xc//cO/M2wFEBYQ1wa9G2PFNCUzw2bs3C7vLparO5u5teLdT4/X7QFACVXcfQGHkV/Wq5vP6++3V3Pv47xk9mkDUrNt8hgK3xl9rP1aSX95KCAle+mWTad9UF5VCq3Soo9g+X9jaXcY8D6sj85Kks0GELu7QZZh8aOyF0idUMAjtOOwUkD6ufaO3HWiUsjSXJ1gYrv1yisKQKDrFNAUqONdCQ3GmXTJXTn0Y4sH9zJFzbxyAv5x6pb1NvK9hhs9AJDl4THHxEDhT4x4SKDs5nuBTVq6/cMsrPZtexklNTyrzcwtsB17z2rvuolGrwENjBQ0sTH5FcAAAD//5njR79PCAAA\n\n\n\n- path: /etc/default/kubelet\n  permissions: \"0644\"\n  owner: root\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available\u003c750Mi,nodefs.available\u003c10%,nodefs.inodesFree\u003c5% --feature-gates=PodPriority=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --image-pull-progress-deadline=30m --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=0.0.0.0/0 --pod-infra-container-image=k8s.gcr.io/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=100 \n    KUBELET_IMAGE=',parameters('kubernetesHyperkubeSpec'),'\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,node-role.kubernetes.io/master=,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=node-role.kubernetes.io/master=true:NoSchedule\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTzU7jSBC++ylKCYfdQ8ebEO2yIB/4MUwEAhQHcQhR1LaLuJR229NVncAM8+4jJ8AQCKPxyVX9/XWpenxjSSbBCXLmqBaqbHTuUzQowXFlc2o611qK+IFYOAo9u9BUmTZhSjacP0PbMMSvnhzmQTBO0C0ow0kwRBbtJNJmqR85iO2CXGVLtHJKBqMQJQtzvNfeyKtS4rMMmeMHkkS0eI66/d0gfsAsabSuHUYr51RzAWFVS6i/eYdhVlnRZNHxi1SHiy28cp6TA1VDuNAuNJS+Ov8JNrP0WRaVQYvuYQw7f5WVtwJPMHNYw13rvdNdC55gmYEyf4MyCP/ABA5ACrSwtl3RlUrJ5h9ifmwcwD21tqV/lin1HBUX2uFHtaANo4IYiEFDrZ2QNrCs3Fy7ytscpAJpzn3N4lCX0OyGsyjYcNjjftAGKERq3g/DGUnh005WlSv9Ne7t74rCYb/7f/ff9qrIqrLZB7Xb7fV7e//tdt9dhJub8CNnYkAtwaJ0qF70O5LVU4fiCLkX7W2S1JqFqejUIIMSsLqZhCGWrVCqfw/9ZO3hLoDnTym0jYRidAt0Gye2ylEZnaLhqLXz/fzmKL6IR9PLq5N4enF4FF8kP1obhEXU26wr40tUtfEzsiont346bwa7RqwB/Ia782J2fHV5Ojj7VV9dj5JtuGF8NkhG8XCVbkv7djD6Mh0dDi5HSRCMB5ZFGzMJbrUVzI8eo9IbIeUZXUe0m6EEPwMAAP//egq4kGEEAAA=\n\n- path: /etc/systemd/system/kms.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SQPW7jMBBGe55CF5DoclcAi13sFmltBykcFzT92RmIP8rMUI5y+sB20ggB0hB8Dw8zwOweM+ne/IMEplGpZOffK2NIYtZ4rcQQdyxhAHcCnijA/Dkp2GXopfDQlhwpo1PPZ6gxu8292pvtPMIJpTHCrCHqWZ2PFz+L2VJCqbq5ug2CW5n/bwg3dLYK2wNle9/acM3Ns2mats1Q91JEP3EqsSY4W0btr89CQ4Md6gGcoZB+wd/EItEGsIoNvr1+6ETBK6QLrP3PyWLk5NlGOtiL92dk7ZfilqfAXaLARcpJu1CSHX6JHZLYAfPka9R+WnWr7rcxu4cs6mPcmyefFce/s0s1KrVVwF/n/wgAAP//Goll9c8BAAA=\n\n\n\n- path: /opt/azure/containers/kubelet.sh\n  permissions: \"0755\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -e\n  \n\n\n    sed -i \"s|\u003cimg\u003e|',parameters('kubernetesAddonManagerSpec'),'|g\" /etc/kubernetes/manifests/kube-addon-manager.yaml\n    for a in \"/etc/kubernetes/manifests/kube-apiserver.yaml /etc/kubernetes/manifests/kube-controller-manager.yaml /etc/kubernetes/manifests/kube-scheduler.yaml\"; do\n      sed -i \"s|\u003cimg\u003e|',parameters('kubernetesHyperkubeSpec'),'|g\" $a    \n    done\n    a=/etc/kubernetes/manifests/kube-apiserver.yaml\n    sed -i \"s|\u003cargs\u003e|\\\"--advertise-address=\u003cadvertiseAddr\u003e\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/kubeaudit/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/addons/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,ValidatingAdmissionWebhook,ResourceQuota,ExtendedResourceToleration\\\", \\\"--enable-bootstrap-token-auth=true\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-servers=https://\u003cetcdEndPointUri\u003e:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--proxy-client-cert-file=/etc/kubernetes/certs/proxy.crt\\\", \\\"--proxy-client-key-file=/etc/kubernetes/certs/proxy.key\\\", \\\"--repair-malformed-updates=false\\\", \\\"--requestheader-allowed-names=\\\", \\\"--requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt\\\", \\\"--requestheader-extra-headers-prefix=X-Remote-Extra-\\\", \\\"--requestheader-group-headers=X-Remote-Group\\\", \\\"--requestheader-username-headers=X-Remote-User\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" $a\n\n    sed -i \"s|\u003cetcdEndPointUri\u003e|127.0.0.1|g\" $a\n\n    sed -i \"s|\u003cadvertiseAddr\u003e|',variables('kubernetesAPIServerIP'),'|g\" $a\n    sed -i \"s|\u003cargs\u003e|\\\"--allocate-node-cidrs=true\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.244.0.0/16\\\", \\\"--cluster-name=honcaok111004\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--configure-cloud-routes=false\\\", \\\"--controllers=*,bootstrapsigner,tokencleaner\\\", \\\"--feature-gates=LocalStorageCapacityIsolation=true,ServiceNodeExclusion=true\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" /etc/kubernetes/manifests/kube-controller-manager.yaml\n    sed -i \"s|\u003cargs\u003e|\\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--profiling=false\\\", \\\"--v=2\\\"|g\" /etc/kubernetes/manifests/kube-scheduler.yaml\n    sed -i \"s|\u003cimg\u003e|',parameters('kubernetesHyperkubeSpec'),'|g; s|\u003cCIDR\u003e|',parameters('kubeClusterCidr'),'|g; s|\u003ckubeProxyMode\u003e|iptables|g\" /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n    KUBEDNS=/etc/kubernetes/addons/kube-dns-deployment.yaml\n\n    sed -i \"s|\u003cimg\u003e|',parameters('kubernetesKubeDNSSpec'),'|g; s|\u003cimgMasq\u003e|',parameters('kubernetesDNSMasqSpec'),'|g; s|\u003cimgSidecar\u003e|',parameters('kubernetesDNSSidecarSpec'),'|g; s|\u003cdomain\u003e|',parameters('kubernetesKubeletClusterDomain'),'|g; s|\u003cclustIP\u003e|',parameters('kubeDNSServiceIP'),'|g\" $KUBEDNS\n\n\n\n\n\n\n\n\n\n\n\n\n    sed -i \"s|\u003ckubeClusterCidr\u003e|',parameters('kubeClusterCidr'),'|g\" /etc/kubernetes/addons/flannel-daemonset.yaml\n\n    \n\n    sed -i \"s|apparmor_parser|d|g\" /etc/systemd/system/kubelet.service\n\n\n\n\n- path: /opt/azure/containers/mountetcd.sh\n  permissions: \"0744\"\n  encoding: gzip\n  owner: root\n  content: !!binary |\n    ',variables('cloudInitFiles.mountEtcdScript'),'\n\n- path: /etc/systemd/system/etcd.service\n  permissions: \"0644\"\n  owner: root\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n\n- path: /opt/azure/containers/setup-etcd.sh\n  permissions: \"0744\"\n  owner: root\n  content: |\n    #!/bin/bash\n    set -x\n  \n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n    /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n  \n\n\n\n- path: \"/etc/kubernetes/azurestackcloud.json\"\n  permissions: \"0600\"\n  owner: \"root\"\n  content: |\n    ',variables('environmentJSON'),'\n\n\n\nruncmd:\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- aptmarkWALinuxAgent hold\n\n'))]",
                            "linuxConfiguration": {
                                "disablePasswordAuthentication": true,
                                "ssh": {
                                    "publicKeys": [
                                        {
                                            "keyData": "[parameters('sshRSAPublicKey')]",
                                            "path": "[variables('sshKeyPath')]"
                                        }
                                    ]
                                }
                            }
                        },
                        "storageProfile": {
                            "dataDisks": [
                                {
                                    "createOption": "attach",
                                    "diskSizeGB": 512,
                                    "lun": 0,
                                    "managedDisk": {
                                        "id": "[concat('/subscriptions/', variables('subscriptionId'), '/resourceGroups/', variables('resourceGroup'),'/providers/Microsoft.Compute/disks/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
                                    },
                                    "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
                                }
                            ],
                            "imageReference": {
                                "offer": "[parameters('osImageOffer')]",
                                "publisher": "[parameters('osImagePublisher')]",
                                "sku": "[parameters('osImageSku')]",
                                "version": "[parameters('osImageVersion')]"
                            },
                            "osDisk": {
                                "caching": "ReadWrite",
                                "createOption": "FromImage",
                                "diskSizeGB": 200
                            }
                        }
                    },
                    "tags": {
                        "aksEngineVersion": "[parameters('aksEngineVersion')]",
                        "creationSource": "[concat(parameters('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                        "orchestrator": "[variables('orchestratorNameVersionTag')]",
                        "poolName": "master",
                        "resourceNameSuffix": "[parameters('nameSuffix')]"
                    },
                    "type": "Microsoft.Compute/virtualMachines"
                },
                {
                    "apiVersion": "[variables('apiVersionCompute')]",
                    "copy": {
                        "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                        "name": "vmLoopNode"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
                    ],
                    "location": "[variables('location')]",
                    "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
                    "properties": {
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                            "commandToExecute": "[concat('echo $(date),$(hostname); retrycmd_if_failure() { r=$1; w=$2; t=$3; shift \u0026\u0026 shift \u0026\u0026 shift; for i in $(seq 1 $r); do timeout $t ${@}; [ $? -eq 0  ] \u0026\u0026 break || if [ $i -eq $r ]; then return 1; else sleep $w; fi; done }; ERR_OUTBOUND_CONN_FAIL=50; retrycmd_if_failure 50 1 3 nc -vz k8s.gcr.io 443 \u0026\u0026 retrycmd_if_failure 50 1 3 nc -vz gcr.io 443 \u0026\u0026 retrycmd_if_failure 50 1 3 nc -vz docker.io 443 || exit $ERR_OUTBOUND_CONN_FAIL; for i in $(seq 1 1200); do if [ -f /opt/azure/containers/provision.sh ]; then break; fi; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done; ', variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh \u003e\u003e /var/log/azure/cluster-provision.log 2\u003e\u00261\"')]"
                        },
                        "publisher": "Microsoft.Azure.Extensions",
                        "settings": {},
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0"
                    },
                    "tags": {},
                    "type": "Microsoft.Compute/virtualMachines/extensions"
                }
            ],
            "variables": {
                "apiVersionAuthorizationSystem": "2018-01-01-preview",
                "apiVersionAuthorizationUser": "2018-09-01-preview",
                "apiVersionCompute": "2017-03-30",
                "apiVersionKeyVault": "2016-10-01",
                "apiVersionManagedIdentity": "2015-08-31-preview",
                "apiVersionNetwork": "2017-10-01",
                "apiVersionStorage": "2017-10-01",
                "clusterKeyVaultName": "",
                "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "customCloudAuthenticationMethod": "client_secret",
                "customCloudIdentifySystem": "azure_ad",
                "environmentJSON": "{\"name\":\"AzureStackCloud\",\"managementPortalURL\":\"https://manage.windowsazure.com/\",\"publishSettingsURL\":\"https://manage.windowsazure.com/publishsettings/index\",\"serviceManagementEndpoint\":\"https://management.core.windows.net/\",\"resourceManagerEndpoint\":\"https://management.azure.com/\",\"activeDirectoryEndpoint\":\"https://login.microsoftonline.com/\",\"galleryEndpoint\":\"https://gallery.azure.com/\",\"keyVaultEndpoint\":\"https://vault.azure.net/\",\"graphEndpoint\":\"https://graph.windows.net/\",\"serviceBusEndpoint\":\"https://servicebus.windows.net/\",\"batchManagementEndpoint\":\"https://batch.core.windows.net/\",\"storageEndpointSuffix\":\"core.windows.net\",\"sqlDatabaseDNSSuffix\":\"database.windows.net\",\"trafficManagerDNSSuffix\":\"trafficmanager.net\",\"keyVaultDNSSuffix\":\"vault.azure.net\",\"serviceBusEndpointSuffix\":\"servicebus.windows.net\",\"serviceManagementVMDNSSuffix\":\"cloudapp.net\",\"resourceManagerVMDNSSuffix\":\"cloudapp.azure.com\",\"containerRegistryDNSSuffix\":\"azurecr.io\",\"tokenAudience\":\"https://management.azure.com/\"}",
                "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
                "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
                "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
                "etcdPeerCertFilepath": [
                    "/etc/kubernetes/certs/etcdpeer0.crt",
                    "/etc/kubernetes/certs/etcdpeer1.crt",
                    "/etc/kubernetes/certs/etcdpeer2.crt",
                    "/etc/kubernetes/certs/etcdpeer3.crt",
                    "/etc/kubernetes/certs/etcdpeer4.crt"
                ],
                "etcdPeerCertificates": [
                    "[parameters('etcdPeerCertificate0')]"
                ],
                "etcdPeerKeyFilepath": [
                    "/etc/kubernetes/certs/etcdpeer0.key",
                    "/etc/kubernetes/certs/etcdpeer1.key",
                    "/etc/kubernetes/certs/etcdpeer2.key",
                    "/etc/kubernetes/certs/etcdpeer3.key",
                    "/etc/kubernetes/certs/etcdpeer4.key"
                ],
                "etcdPeerPrivateKeys": [
                    "[parameters('etcdPeerPrivateKey0')]"
                ],
                "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
                "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
                "excludeMasterFromStandardLB": "false",
                "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', parameters('fqdnEndpointSuffix'))]",
                "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
                "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
                "linuxpoolCount": "[parameters('linuxpoolCount')]",
                "linuxpoolIndex": 0,
                "linuxpoolSubnetName": "[variables('subnetName')]",
                "linuxpoolVMNamePrefix": "k8s-linuxpool-38062788-vmss",
                "linuxpoolVMSize": "[parameters('linuxpoolVMSize')]",
                "linuxpoolVnetSubnetID": "[variables('vnetSubnetID')]",
                "linuxpoolosImageName": "[parameters('linuxpoolosImageName')]",
                "linuxpoolosImageOffer": "[parameters('linuxpoolosImageOffer')]",
                "linuxpoolosImagePublisher": "[parameters('linuxpoolosImagePublisher')]",
                "linuxpoolosImageResourceGroup": "[parameters('linuxpoolosImageResourceGroup')]",
                "linuxpoolosImageSKU": "[parameters('linuxpoolosImageSKU')]",
                "linuxpoolosImageVersion": "[parameters('linuxpoolosImageVersion')]",
                "loadBalancerSku": "Basic",
                "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
                "locations": [
                    "[resourceGroup().location]",
                    "[parameters('location')]"
                ],
                "masterAvailabilitySet": "[concat('master-availabilityset-', parameters('nameSuffix'))]",
                "masterCount": 1,
                "masterEtcdClientPort": 2379,
                "masterEtcdClientURLs": [
                    "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
                ],
                "masterEtcdClusterStates": [
                    "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
                    "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
                    "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
                ],
                "masterEtcdPeerURLs": [
                    "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
                    "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
                ],
                "masterEtcdServerPort": 2380,
                "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
                "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
                "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
                "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
                "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
                "masterLbBackendPoolName": "[concat(parameters('orchestratorName'), '-master-pool-', parameters('nameSuffix'))]",
                "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
                "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
                "masterLbIPConfigName": "[concat(parameters('orchestratorName'), '-master-lbFrontEnd-', parameters('nameSuffix'))]",
                "masterLbName": "[concat(parameters('orchestratorName'), '-master-lb-', parameters('nameSuffix'))]",
                "masterOffset": 0,
                "masterPrivateIpAddrs": [
                    "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
                    "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
                    "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
                    "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
                    "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
                ],
                "masterPublicIPAddressName": "[concat(parameters('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', parameters('nameSuffix'))]",
                "masterVMNamePrefix": "k8s-master-38062788-",
                "masterVMNames": [
                    "[concat(variables('masterVMNamePrefix'), '0')]",
                    "[concat(variables('masterVMNamePrefix'), '1')]",
                    "[concat(variables('masterVMNamePrefix'), '2')]",
                    "[concat(variables('masterVMNamePrefix'), '3')]",
                    "[concat(variables('masterVMNamePrefix'), '4')]"
                ],
                "maxVMsPerPool": 100,
                "maximumLoadBalancerRuleCount": 250,
                "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
                "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
                "orchestratorNameVersionTag": "Kubernetes:1.11.9",
                "primaryAvailabilitySetName": "",
                "primaryScaleSetName": "[concat(parameters('orchestratorName'), '-linuxpool-',parameters('nameSuffix'), '-vmss')]",
                "cloudInitFiles": {
                    "provisionScript": "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",
                    "provisionSource": "H4sIAAAAAAAA/9xZa3ObSBb9rl9xR6bG9myhh2U79rg0O1hghbIEKoHspJIM1YKWRAlo0jROvHH++1bz1oPEzqZqpjafDPQ9ffvc12nl4Jf23A3a0arROFCmU8t4a5jKeGCOLEWTrkeKdSOpo34PDsDA9MG1Mdgk9hwICIM5BhyguYcdmD9C9Bgx7NvMA1EEWZlMlYFkKnJjE9UwpamZgp7WgUYMUYYdIHQvfoI4GOkz2VI11bRMdazoM7N/Bgdguj4mMYNPyGVusIQFoWB7JHZEN3AZ0DiwfQcYAZv4oYcZTsBu1JFi3Uvm4HUBdl4DhmDheqnVa30kW/fSSNVmb6Shopn9V3AAs8RjvkXoIRvDJ+S5QfwZLXHAAIUMQmSv0RIDCWBFPAecmHJwN4gY8tLDTZWRIhnKnh0uNnag2MMowikOCer3QguG6cYW0sS0VM0wpdGoOPNl5czZWu4ZxR9jl2KnihglIIo5kC1ZMiVLVqeWppvWjT7T5H63AwegMNsBBzEEjkuT0C5IHDil4XSmaao2LLbvdms4xxyJEZ4ayLZxFLnzLASpA/q9NtIluQQ6+Q6QQz4FHkEVX+70kTXWZ1qWmt3eBs8+iQOWWjtutIYH4sV+xYM0qYvtTzeMk2xOjWkcMLdqONC1G3WY7Xm2YWaTYOEuY4pTU9uLI4ZpYirrg1tluhO+k07NsR1ir7fCn0HsUHeSxaAGIifuKDquwtwqb/dA7YtChfwck+KQwBo/VgF5dnLQAqv37aOhkIlbEJVGc8IDIqcr9zaane4y1q/fJk6MVKMM7Eldh/HJ/DGpjojE1M6KY2xYw8mwhpu69jI2YDgZcjo2kzRxaCfgr77lTzXctxfGTrn16tJlfRHl6ZZV3Qojj60eC6id8/TqSvc2nmMaYIajndy5nV0rfCKUbaPHM2YdzzEfIrbn8i42dwNEH8v2wducR2zkJZWYAKnj4R6P6jLG9Zeb1HI/RopZTZjeaeaIh9kzM2aga6akakrqzmRWCVOvmjaMPmZ1EMaeB4jXOUNuwOvTR8u0Nww0dfdEp3UcDzR1h9yxYU2mumzJyvUepLr+uGIsjH5vt/Mm3/Jdm5KILFjLJn47bUnteB4HLG53z1ud02KpWCwVQ0qcloPnO45MboeWJMvZ9OcBukEun+6MAHKctBOE62U6YhM5cjNS3tzpo9lY2XOM028j1OoQuaik1JPNoZrVTTn20kA78IBp5JIgq0d5MtWvM3l0ermBkHQ3BGue+R74xIk9DHHEWfaJE1IyT8Osz8xrnvg8ebQU6ayzgYQjhuaeG62AxGye5L9NggDbLHfklk/fvT3mfF99V/vvms/mje6bgG333vO6vEvsq503Md9uUud1yZaYV5tUUUJ7RvqrumZVlI+zUwODmWHqY8tQpOngtSXrY0nVjJTmi07NrLXjiBEfIoyovQKH+MgN0nY+nMwseareKVOj2ioueBIGD67jIjEP7jNbRhVxm7WLulEznMzAoS7PxQ3yjOGbWrDLOvKM4RsIKab4Y7Qji6qAlfNedjeKDn/GdsxwgpS6lXXsQmTKkjoqk+nyok5Xhwwc5HqPEIcOYtkM5QCziSyZSolwWY8gLjHL7Hc0/sBQeCe6Uw1V1yxjMFUnZjJ7pooklw52O7WZVl4jCnHPVm4ER78cQ2RTN2R8OLEVhge/0dCNvnBkIwZtzOz2b2Ku1Z9gSXEIf6lyH56AURAdOFTlfvMQngB9WsPhl5C6Ad8kDkNMj4TO8dfD48bseqaZM0s3LE0aK/1m+txsTF8ro/Itf2o2BvpU0Y3ybfrcbGQjt9+OI9pOpmhy+ctGbiNVTulX/j4VV40kT+/6p91O69Vl+qQYZhUkzf+GdqfKqpQLMJ45qq71T1qdVq+x9bLb6vZaXbGb25TjczrTeCw2zDuNBgqZj+j6XhrxG47EbzhHx/ClAQBJlKwFoRYKmeURex0lrylm9NH2HctdWAvkery+uycdOIOTsyRbOCAI3c1r09MTvE/M3QW8ewdNoduEfh+a/I7VhA8frniEg2QF/4c/uwyEvdfBZA32tnDi4LtItde/ZO3CbXxtNPYcruCDf3Nx1Be6Vyk3kYdx2BdOroClid0XelcQrdwFg19/3foj3YQrJXADEI4i/BG6IGSgx1fgkMLnDA6E4o8vf34tvr4D4d8g4o/QAfjA8ecUo3XJcM4yCG6yLN8DtqlJ6LFXBJS03Tjwvin8+b7JDfnO0dXGUopZTAPoltR6Ed5YkRACQklO8XXhJn86JEgtvrPt132BsAJiRQyx6P87Ij+L5gqHS8wshugceV7BHUPU+hZ/6fKEv5h6feG0jFtT+FKx/pqHoVlDaGXtFqmIgsj+s0iW8N1+nNDKHj9Iah7Y8w7YMfVAXETGCITkT7Lr4Q/HIR3tXCI9J4254A4RW1XicAUPyHMdxLWqhegy6gtnG7F5blz2xkTIdwRha5u/K9vzwPT2Byb3d8PGXvnEgX99rvn83MAVE5CjvDBcLyE9YUtcVMjfR1VC87anP5nsFzNTaINSNqz4JXERR5hC+wHRtufO2064XnJVsy5foZC1PTdiUeW9jewVTr7wi4L7gLOPf7Qd/NAO+NX+5I9fuxvkJWl/eF+RlLkmJItE/ybuHTY2j9irnoYfgtdmqnF3At3tJI98VbrCIjELY9ZvMz9sZwJZTD+1SPyiwVIjshLn+I1bFMtblIiKb7kqFxcglr9JbX/NNDunjItijEHYOUSunEUFmn8dvbtXPvze+u346egdVj5Q2vrtWGhuVX6Ai8rnQnwP5P6esH/xT8riPKydZ0qOLYpy6VEnfMscybj+GzTI/5gq+Q8wohgQMXsQKbaJ7+PAiXge/TNFTV57ZYW+MMbPOPle4bs3D4ofGyyKk98gXpYJED3YAfJxLqh+VH+W/y3oIOyTgF+ECXKeY5D5DULmyj8v4huz5r8BAAD//18gQJZLHQAA",
                    "provisionInstalls": "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",
                    "provisionConfigs": "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",
                    "sshdConfig": "H4sIAAAAAAAA/4xWW3PbOA9956/AVA9pv/G9Xzptnup1LvXETjxxMtu3DEXBEjcUqSEou9qH/vYdUL4kqbfZySQjEeDBAXAAJYE/Cxmgcj5QB6YLAmkzqLwLTjlDsEEwmgJaWDkvFs4HGI1EAg+EEAokBFcF7SxBcOCRgtcqwKbQqgBtA/qVVEj9AyBRkcFGGwOpthkEJ5JZDDDOMo9EcHb2+mTQiz9isQUBJvDNUbjGhpjXni+s0ZN2FkZia4c+BtUnKvj3sXAUHj3JxydsfuORvemB6j/4ZKPT0+GX6CWu8cfY5M7rUJQEqvZrjNYuFXJ0+umr0SlR0XM+FxNdFegJVCFVIUeDbuVMM/w4OP3qKrTspVzZkUij00/dXJWvj4ejz8eO2VsFHz2+jPaPo8/8KObjCUFRShUJdU+Hoy6GlxgHK0O9ttZsZbRXBiGShddrbTBHWGIlvWS9gCYItbeYgYvaAkJVex0a8UC4v/HsQoMkRAIzvcKgS4w6Jf03glsBVgWW6OVBAEMg9Gv0wNW/xuYOc7TYQk1Zl2tp4OOnwUAso981Nn/oQDAcjP4fw7g81zYXy4aMyy+l0kaHBsYP99/EzOUzXKOB6c3lLTuP61CgDVpF+DN20PbKS4X3zHQ4GogF+lKHO+dCNLJiC53q0K0k0cb5TCzj6MxdhtTmerccvwSOx4s6fcLmiEEkcO7sSQCPMuPZhJrQnxD87Pc8C7Id7Z/9HrVvK22QxDS3zuNde8Q4CVw6D6HQcaQ3zj9B4+p2ZKUhBxYxA/bn2hJou9f+45N1GxvVT6KF/DUJ60QCpEttpP/d8KaSMPv1rkjg3gFamRoELKvQwK6E1OGZsTky8QYJ3t/c3sPdxeR2Pr+4Ob84/7BtwwVfW+xubVEnL66GfQxVSGPQ5tj1SJWzhIeA8D7FjfQImqhGgo0OBWfnSoTFeA6ly2qDbeFDwY2hD2KyA7zb4h1N8kDHOv6baYp0Qm0tGoMZKIPSQ8Af4UBI7LI6gvl9OLx0fiN9pm3OJ9+Hw3NNlZHN7WpFGGDIO1bbMHchY4f4MpPEmo3auJ8srhGrsdFrbMXyQNgKumU9NsZtQBmNNjBrJgbGKcnNsmvtnS3ZtJZeczokxkphFS7sGmbjmyuYTR7/J8SyTqmhgCXQKlTQr8n3jU77273S59NuO+AcdYlhL9iTBunkWfu4DfJFMToglXK1Daw8hUTa5h2RtAuFX519ZunBdNWCa9piZp0jqHFARAIpguQiYOy4q/MizuJbTZc2Ewkc714P4BwrtLFvPO2u9pGBcnal87rdapzCEVprLd8MXsoG0oZ7JZLIljCEGGwF715vLta4qw+L611PJFwjXhJ/1RRgI7n3xbb021I/L64qUD21/zDUe7yj7DuMY3etjF1I68D0/qVU2za+lTDrxLqTXvzWjOe7/TmZ3T6cP07nV2dwz7F4Q8JGEiiPMmDWL12mVxozSJu2q8bVGUxLmSOktTbZTjhiEkcgDsr+c8PfgX8CAAD//8RJh7hwCQAA",
                    "systemConf": "H4sIAAAAAAAA/xzFMQqAMAwF0N2z5ApOboInEJEaPrWQJiVNB28vOr19S5oy/JhWK7qYhpsIvM/cBnEbiTk+O4IUcbL03+bF6B4ZIRdVVPPnDQAA///t4NIJTAAAAA==",
                    "healthMonitorScript": "H4sIAAAAAAAA/6RVbW/bNhf9rl9xrBgPnBayIgPpA6RTgC4z1qCLU8RJ9yENDJq6sghLpEBSaTLD/32QRL8odgcM8xdL4n075557edILK6PDuZAhyWfMmck87wT3mTAwXIvSQmmxEJJZSsAsMmtLcxGGC2Gzaj7kqgiX1Zy0JEtm/3Geq3lYMGNJhzyvmv8Fp3DBRZgRy20WFEoKq/TQZN4JmEyQMYM5kUShEpEKSpAqDbY0AcmFkDT0PEMWgYJUlTRkN6+lKCllIvc8rqRlQpKe6UpaUdDMZRFyMTjFygNyxVmOQKNgLzNmLRWlNfH59sR9iqN9W64Ft3ns91dfHn4dzz7f3ozXDW3tgd+xPahBsoJq36vbyf2n68n4bnb3MLm/vhnPJp9uxhdBoviS9HoXpWWIZ8SXM66Kgskk9lsrlKa2EykeH3Es5i4cejGcl4+np4+wGUkPwPH4/VULZo1SJU2SVHgeUIPIUQNRlcWHM/RXR/zXuESY0HMoqzz/iEQ1iUSKwWBDKeK4QzpOT/dqAohnCv4Ne9k69Ff79mtoYjyjpIevWnGiRMgFrILr8Y55OOYdUCHJmKHv0sw1sWXznApvl7e/SSqksGInBHz3jwP+7vdwr1/rGtiCCQkhsQ1iiCuZmOHQpTU5UQm/PxhghHfvNsHfv8fpaW2RKEke8CMTOcHqivYp7P1b9g9IvTpgpr86rtM16kmipLeha6O04+Z+3dTjImt/5VLkOYLp9e8P07sIrWXiDFwDAPNqLBXc5mjNg/ov+JGpuKiZ9X9a7abKlt9odNZ2NDfUOfD7q+kf4/HX2XR8dTv5ber8mvwN9WvPq7dXTvZwY7QU/smEbRbSCIWQlSXTvDmvWoZzQlpJboWSrFkJ+0V11o5TRxztTlRly8rGvr9VwSMiPHVl4Iz6A17pHEFR49qLt/YRpAgMgmmzqS/CMBr9f3g2PBtGF9HZ6Pzc7d6/MLr8X3Rk+vptho52vjiEwqCSrf/rVh1vGufY6HD/4T/0ZCO+Ex+BpJqQncLa6h4MW9AFDu4U/LJVTOAUE7rqLutE9CIsIq9ecduVHvvNddg0pN7ufns0nnyL/ZAsDxNKWZXbJlBA8tl3BSIgbO6G8eTbujMJRlWavzlv8nbQ11rgqiiVJGnjfuS18KaWaYvdxeqAYifSRoX1fDjftb+jbf9rM6gHnHQq/afb06P8p1Edr51Yh9PkOQW0wD4fxbGN/DaNMJDKwlRlqbRt1lMqvL8DAAD//2MFqDLACAAA",
                    "customSearchDomainsScript": "H4sIAAAAAAAA/5RQwY7TQAy95ytMOU+nW6nigiKQOCOEtBcuWXfiNCYz48h2KFntx6Mq5bBiL1xm9J6en5/f+3fxzDWe0cbGyCH8bkwWTQRRZo/4vCjFJNWRK6nFWeUXG0vtNtnexqaxpRegNArsAPpqwQg1jfBx+79IQa5fsVC7g7aFSJ5iJb+KTpGrkw6YyPZ9PB1CyrL0gSv7Pg2XxlZzKslzp2SO6nA8wAkeDvAX3424XporsneDaIezd1nSZI2S65pK3/HQDch5UboNn+DheACcPVxuR6/A1RxzBiXMpQcz257gItnAsJwxJClF6gZeU/Pqo9Tj/sOdznw2mDFNeKGJ/a1kW1+vKvp+W/4Nza6ifbuDly0O/BSuEB7hX/Gjkbafnt7wutf9Aq4QMTxHiJ/Dj/gE/yP+EwAA//9I8xcdHgIAAA==",
                    "generateProxyCertsScript": "H4sIAAAAAAAA/7RX627bOBP9HT3FVDVyAT5FtvP15q6yMBQvGiRNsrILbNEtBFoa21zLokLSSd3W774gZd0cyel2s/kVkzNnzhwOh6Pnz+wxje0xETPDEGzJAwSbJdImX5cc7YDFktAYubATzu6ooCz2U7Nj5XHjXf/x0Xf7/sXgo2O2vpV/9xxbLhLl92VlBRHFWFoBOZ7jam1mjt6o5OWNGlwCLguXy/PB1WgrXr5WA1ANmFq6Q++Btzv06rwDwR94V1jna7Xemvlg5J753uD3D4Ph6N2gfzbwcre+Qtq133NSxAC5FDbH2yUKOUMSIi8UsiY0wizQhtcgZbm1VIWrCo1c1gBtlK6u7ICZ4ypDuXg99POKcL2R/9v55eCmP3qnABs3e46NMrDnyzHyGCUKuxIlK4fC/2LwsQG5vLMTdlMkJU7NbH+U6oanUYg/9C+v3Qv/qv9+4JgLIiRyX5v6ys2PWDA3S+aptYrlmLq0Ao5EojY+ntBJZBoGncCnT2B9BbP1zb0evr8e+h+887UJnz+/BTnD2ABQR+eOLv3B1dnN9fnVaJidZ2Wx58ykTETPtjvdV8ft4/Zxp9c9efVmbZYg3P6GTwGwWWqSIj+vFESZ3/S9/nvHtKyAKBvnAdbaNDAS+BPUKyJU6Zcim8aEGhlKViNl5GytKSmUQVjpLnkCg011VBTKFn8AblMzmasmPNRascWCxKEl6QLZUjonbQGWta1fFmkNlrqIzsOU1rC5y5kcyhTjMGE0lsKpUVedxpeEcQle/+pMJ9c6XMwlLpIjw2AJxkJEMMWYCwIWW0polZ8B6Lb//zo343gLVoz3YH150X4DVkhWAjqvuy9B8d3yrIB5I7DEcvwXHNjulaOvjas1c/sHO1nkj0MTk3LgwrgGwx16ZQ5kOuU4JZJx+9oRKyFx0UtvtSgYpWnqYDrXVydtsGhch+z2K8m6/RpFBEpfIKckgna3lqM3Mox7Tjd9QviS+SEV88Mj+GYAFFeqf3PunIAuPRlBce5pya1hihJau14msKyE01hadyRaosXiaAWn0Grs6z8ZPe/kj8Yrd/t/FUxdo8ez207tOXi4YHcI9zMqUSQkQEhIGNJ4CkTCGKc0jtUPNoGOkBDRGLWjwBAsCgcdYf8pbPtgh4ZNBHbKEMwWLISX7Xaj1bq2ZPx7Kmc+R8lXefVMGAcKqn4PBd5CBzrdo7cQMr2p/mpw8r1P0PoVLLyFNsBn2N+HMUcyh+/fQUSICbzQliGL0VgbVPjqxPwZkkjOVodHTQTa7SqDHz31rOlBGuFJWILxHNQzDmoCAskAYzKOEExdPx1I24NqU8iJRAFaKNPgC7AmUAyVldd/bRqL+YRO2A4DA4OZ2j8MicQjIFK1Z6mqTTIgwe2SctwwYxx099SxFZXi+XpMMg1Q5lCaaNYAp80EYX+LoYbaEAtNw0ho6LSeqXmGIwn1tpxRAb80Y+YDTjoEmSY4jgrwX3a4o2Kygn/UY5LlY8FMaB0GRELpe2h9ZMIp2CHe2fEyiqB7ut95a+zp4WhvLxV0wpZxCOn4AJvvA0g/ECAg/4OYSdCDo249MZp7BsCEPoVsu1rzEwhVwD+QJn+maxWCXCIoa5RW/RxXNaI8sSYNL8iTiaLxG1RpqhuoLZyiFTSqMqHGnEYRtBIaGveEyvS/x3rW1oXPug2QOARB7tAOZhjMddIQsEUSodSdYPdL9HcAAAD//z5tw7exEAAA",
                    "mountEtcdScript": "H4sIAAAAAAAA/3RT0W4TMRB891cMad7oxbmCKrVSiioBUgRNqhKeEIp8572ziWOHs52kBf4d2UmaIOBeLO94Z2d3585e8EpbXgmv2BnuXLRB2xbaQzpLUNQRtPWBhIRrQKGWqKgW0VO6V7GFCmHlrzmvYusHRkRbq5WQA0uB18ZFWWirA39ZxZaXl1cXw6tX7AxTWxOCosygPRq9JXmOjlZGHBAyboONDipfMxcSF2olbEv+8DpFn1W0OqhYDWq35LdPsSMuFr4g22pLfBWN4ZeX5YB5Cii27O3404cRl7TmXtbs/vZhNp6Np5NR/0dCfpXsbvp5MrufjiezEV+Ljhtd8TQDqf2CRUlrIZfwFIIhtlxI3aFYoX/MYss0UfxE29GfgG7wBf03KOg7hvjKgiLLAIBq5dBLBdJchOlIyEdkHpK93ZOtDhiyRrNM2zt0UPaQ1PHGB1EdK1j6V4X+c7vYfSfq9hERg0unpEZEE/y5dY3QZo8O9+dFDzc3p4UbzYzHkf//SrhP5vNt7rYoLG1Qop9mfwIvF40f0Da8PqFE8TF7cb7LfI/iHYx4epzrICpD82STUXmeQ99c7Kww+1hSt1vK6TbyT1Art7EoHjLzdbb630v/HQAA///IpMlTMQMAAA=="
                },
                "provisionConfigsCustomCloud": "H4sIAAAAAAAA/7RX7XLaSBb9z1PcyGzZrlgI72ZdKe+SlCKUCRMbXJKcVCak5Lb6CjoW3Up3yx9j8+5TLRBgwIakZvhhG3E559zT96O988K5ZNy5JGpYqyFXhUQPpWYpS4hGtbcP9zUAAPeP88API9f7GPvdT52g1z31u1H8e9jrxmdu9KFlOagT56q4RMlRo3LIn4VEpUlylWSioI3vSnBrGSvww9554Pnxqdt1f/OD2O+2z3qdbtS6SIiG+iZaeIDvP6AhUYlCJnhKOBmg9DnNBeMaHkBLsClYfcu6eJrbj9y2G7lzcqu+jUZnhJpQoomDU0L1luTMvkapmOCtfzcP/2s3D+3m4STvpJAZrEdeVlDGe+fBSRz40XnQ9Xptv1V/Wz7+eP7Oj71eNwp6Jyd+MJP1vnPit5ZPYUQ4S1FpVT60E8G1FFmG0h5NvGrckVFW4rIUvkJ9iRRetKAJ3/4Heoi8DDOvHQgwz0iCUP4cioyihFRIUCqDS8Yp44NZdAlsp1B/TvkKh3kppGAzsNTD/69FVoxQqezNgw2cjPDYcPX5JHAolD4jenhcPQDIzVvo940j/b5jgvtOglKrh4G1QcvzIk5FwfUjJZZSmTWnBhiZkLMnFSyGSiS0x7O7Y9CywI3aZtJSVls4D0/kd4wPjIXgms4LTeeBFEJDMm9o0KIMIXkuRS6ZeaS0kOUHlwhFTolG2pghL1ZrrxfFnh9Enfcdz438eFq80/a/JtLJ2KVzQ8gAuXYWx0gjx5G1FWbc9sOogiyUdDKRkMxRQyLRSYi9kIsZMWqBpZFIPSdJ8set9oz45wPnimbYE5fsJTnlx5gp/BsKf2dykMEpVKMNpv0K1ayp2uzR8TJlqkhppAcgcSSusQTapksXS91ZaDeHbluR6xBmvbI9TMpqC79qEztWVxPcsCwzNStRS4bUuG1yxVumIRG0NIMLDc1fGr4lTP1tbVyrJYKnbFBI/PhaeYXSYuSZjTbbjXibC6nNQa+qrE1aXMu7ZERjlsYpYVkhEY6acNiE/zTBrF6wk6e+q1DDy9upC5+HyME9jz743chUZ6fXNfI/9Nom2SRjyHW8UA8HpSNLBVL2OwXGtYArvINrkhX6oDLa5RRCP/jUMc0RdLpe58w9ib2Tjtm7oe8FfjRz3oCnIsvEjalDs+AhJ3eZIBRumB6a1JAevQLk5jwmBPdTHgCwzO60jsGq5+mtq94RhUev/DKWhloyPrAOlqKjuxwtOLby9PbRZzlR6kZIOkGr3kwCxrPt9hWs+v1a+w4Oxha0WmCtemgBfFtu0Q0GxW3f7M526wKToYD6/Yb4MTyUXh29AtumaAy42JrLzKqKaEtd01uTMXR7njM3DD/3gvavcVVnMudbWF5aslFZTEoTqU0tEU7NoDN/Wj/nxEazy7AdcyMcwz8B/a8p9M8buxm/Cv1Z+b9AMUljnoUZ3UHXj/ywnNZxuxO06nuUSXMDKvvKjNb5zXxs7c+/+zqsWIxD0/Vev1+DOXauXquYFHq42IMN0+8zuO3qzzCt9hW8gfo6OY/By38+1uUED9B/tO++/wDbJnKwNkeo3697PIbdBryEe0KoV44bM/TLy+LeWm37492nebc9z81TaBb6hL5JAx/vbXS+wil1r8jepZjtNWbYISYS9f7uhTmZFcOrm8DjEd5pmwEefYnDL2Hkn86GN6GpWjeud6Y3tnLGaOTINTBa3oTc9vsQkF8zKfgIuW5sXwgml4ZGTrjuUKjod+H5TKqdbt/WxrW/AgAA///LSOTXfg8AAA==",
                "provisionScriptParametersCommon": "[concat('ADMINUSER=',parameters('linuxAdminUsername'),' ETCD_DOWNLOAD_URL=',parameters('etcdDownloadURLBase'),' ETCD_VERSION=',parameters('etcdVersion'),' CONTAINERD_VERSION=',parameters('containerdVersion'),' MOBY_VERSION=',parameters('mobyVersion'),' TENANT_ID=',variables('tenantID'),' KUBERNETES_VERSION=1.11.9 HYPERKUBE_URL=',parameters('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' VM_TYPE=',variables('vmType'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' PRIMARY_SCALE_SET=',variables('primaryScaleSetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' TARGET_ENVIRONMENT=',parameters('targetEnvironment'),' NETWORK_PLUGIN=',parameters('networkPlugin'),' NETWORK_POLICY=',parameters('networkPolicy'),' VNET_CNI_PLUGINS_URL=',parameters('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',parameters('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',toLower(string(parameters('cloudproviderConfig').cloudProviderBackoff)),' CLOUDPROVIDER_BACKOFF_RETRIES=',parameters('cloudproviderConfig').cloudProviderBackoffRetries,' CLOUDPROVIDER_BACKOFF_EXPONENT=',parameters('cloudproviderConfig').cloudProviderBackoffExponent,' CLOUDPROVIDER_BACKOFF_DURATION=',parameters('cloudproviderConfig').cloudProviderBackoffDuration,' CLOUDPROVIDER_BACKOFF_JITTER=',parameters('cloudproviderConfig').cloudProviderBackoffJitter,' CLOUDPROVIDER_RATELIMIT=',toLower(string(parameters('cloudproviderConfig').cloudProviderRatelimit)),' CLOUDPROVIDER_RATELIMIT_QPS=',parameters('cloudproviderConfig').cloudProviderRatelimitQPS,' CLOUDPROVIDER_RATELIMIT_BUCKET=',parameters('cloudproviderConfig').cloudProviderRatelimitBucket,' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USER_ASSIGNED_IDENTITY_ID=',variables('userAssignedClientID'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' LOAD_BALANCER_SKU=',variables('loadBalancerSku'),' EXCLUDE_MASTER_FROM_STANDARD_LB=',variables('excludeMasterFromStandardLB'),' MAXIMUM_LOADBALANCER_RULE_COUNT=',variables('maximumLoadBalancerRuleCount'),' CONTAINER_RUNTIME=',parameters('containerRuntime'),' CONTAINERD_DOWNLOAD_URL_BASE=',parameters('containerdDownloadURLBase'),' POD_INFRA_CONTAINER_SPEC=',parameters('kubernetesPodInfraContainerSpec'),' KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' IS_HOSTED_MASTER=false',' IS_IPV6_DUALSTACK_FEATURE_ENABLED=false',' PRIVATE_AZURE_REGISTRY_SERVER=',parameters('privateAzureRegistryServer'),' AUTHENTICATION_METHOD=',variables('customCloudAuthenticationMethod'),' IDENTITY_SYSTEM=',variables('customCloudIdentifySystem'))]",
                "provisionScriptParametersMaster": "[concat('COSMOS_URI= MASTER_VM_NAME=',variables('masterVMNames')[variables('masterOffset')],' ETCD_PEER_URL=',variables('masterEtcdPeerURLs')[variables('masterOffset')],' ETCD_CLIENT_URL=',variables('masterEtcdClientURLs')[variables('masterOffset')],' MASTER_NODE=true NO_OUTBOUND=false CLUSTER_AUTOSCALER_ADDON=',parameters('kubernetesClusterAutoscalerEnabled'),' ACI_CONNECTOR_ADDON=',parameters('kubernetesACIConnectorEnabled'),' APISERVER_PRIVATE_KEY=',parameters('apiServerPrivateKey'),' CA_CERTIFICATE=',parameters('caCertificate'),' CA_PRIVATE_KEY=',parameters('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',parameters('kubeConfigCertificate'),' KUBECONFIG_KEY=',parameters('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',parameters('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',parameters('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',parameters('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',parameters('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ENABLE_AGGREGATED_APIS=',string(parameters('enableAggregatedAPIs')),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
                "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "resourceGroup": "[resourceGroup().name]",
                "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
                "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
                "scope": "[resourceGroup().id]",
                "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
                "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
                "singleQuote": "'",
                "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
                "sshNatPorts": [
                    22,
                    2201,
                    2202,
                    2203,
                    2204
                ],
                "storageAccountBaseName": "",
                "storageAccountPrefixes": [],
                "subnetName": "[concat(parameters('orchestratorName'), '-subnet')]",
                "subnetNameResourceSegmentIndex": 10,
                "subscriptionId": "[subscription().subscriptionId]",
                "tenantId": "[subscription().tenantId]",
                "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
                "useInstanceMetadata": "false",
                "useManagedIdentityExtension": "false",
                "userAssignedClientID": "",
                "userAssignedID": "",
                "userAssignedIDReference": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedID'))]",
                "virtualNetworkName": "[concat(parameters('orchestratorName'), '-vnet-', parameters('nameSuffix'))]",
                "virtualNetworkResourceGroupName": "''",
                "vmType": "vmss",
                "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
                "vnetNameResourceSegmentIndex": 8,
                "vnetResourceGroupNameResourceSegmentIndex": 4,
                "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
            }
        },
        "parameters": {
            "agentSubnet": {
                "value": ""
            },
            "aksEngineVersion": {
                "value": "canary"
            },
            "apiServerCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYvakNDQSthZ0F3SUJBZ0lRTk1rV1VBa0pscHBFV1JEb2wyOEZ4REFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBek1qY3hPVEV4TVRoYUZ3MDBPVEF6TVRreE9URXhNVGhhTUJReApFakFRQmdOVkJBTVRDV0Z3YVhObGNuWmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBS0JiUnp2RmZEbHRXcGRnQ2RPc1hXVHlObERNK0lGLzB6RktEeHNQVzlybFVwZkVtOUVocWdkWGtFanYKQldlaDdIR0JwYzI4TmNnaU5vM1Q3bnNFYkszOVA3RlBkMnhDMHFMT3ZSbGE0cXo1S21oR0R2WUpVSWlJbFdkbApuNVhwZUZTNEhEckpxUTRHNWVCTk1zWVlrMWhlZ3d2d3NIZTdBRzNyUzhqOC85bmJEOG95Qkd0VVVyQVpEVUJlCmFMQkx4WjRuZnZXcUR2bHVaVHl2QnhhWDM5bW83KzJHWTdiSVhYQ0cyQnh4N3ExdkloRWdqbXB4TGhqVnlFVFQKbkdlZURJNmg2dmNEQkUySWxQTCtnSTN1WlB5TVluMXN3UHc1bVU4anNFTm44NHRHRm9iRGRNYkQ2Ri9GN0dmaAp5eFRpT0YvcXBnd0QxVWZQcmFrOW1ScjhVd2d5dnM2WFQvQnZvQi9BNjFKWFB0UWVzcytwbFJjT3RIaEd0MXJJCjFLUGtaakNpVWJwR0JYYUFROTJNNFNteDMwS2N6QmY4ejRNUEc3VnBVRGJwYkV5WGh0MTV1QVlHcVZEVFF4V1MKRmd6MDlFZi81QUtHdTB0SWE5bTFxakxWd01KQjNWMDNjdi9KbnFkM0tuNXhEdEU2Z1BTUWg5blg5NmIzS0VLOQplRktZMkhkSXFNZStFWUhtUjhpMmx4cWZScG9xWWhaOVlyajVFQzUxTGovMGgvZVJ0ZG9ZQXBxRUFJemJqalJsCllhTDN3Y0N0VU1OekFidlFLU0dRZXBjMk5rZ2VHSjZFSDlTT2pqbjJlbHg4NmtYWkF4d0NBd0dsNy82SC9WRlcKcXkyREVzLzlqb2VwQW45a01jREtmQ3BpclhEMjFmVjc1M1U5MjZnVDBmbEI2cytQQWdNQkFBR2pnZ0ZSTUlJQgpUVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvCkJBSXdBRENDQVJZR0ExVWRFUVNDQVEwd2dnRUpnaWhvYjI1allXOXJNVEV4TURBMExuZGxjM1IxY3pJdVkyeHYKZFdSaGNIQXVZWHAxY21VdVkyOXRnZ2xzYjJOaGJHaHZjM1NDQ210MVltVnlibVYwWlhPQ0VtdDFZbVZ5Ym1WMApaWE11WkdWbVlYVnNkSUlXYTNWaVpYSnVaWFJsY3k1a1pXWmhkV3gwTG5OMlk0SWthM1ZpWlhKdVpYUmxjeTVrClpXWmhkV3gwTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2hacmRXSmxjbTVsZEdWekxtdDFZbVV0YzNsemRHVnQKZ2hwcmRXSmxjbTVsZEdWekxtdDFZbVV0YzNsemRHVnRMbk4yWTRJb2EzVmlaWEp1WlhSbGN5NXJkV0psTFhONQpjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkljRUN2RC9CWWNFZndBQUFZY0VDdkQvRDRjRUNnQUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQXFid0NOcXdLeXRvODhCbVRNKzJlRGxaV2xXYnIyUXA1VXdMWWJreFcKTnNJMzFjdzl6UDdNcU1kdWMwOExFUTBzVTY5TGRJZ0JtaVdxVklrQ0p6aWxGaWNMY2V4RVdTVTFPTnJJQnpTego3R3RoLzhGMkNVY0cyVUNtelo1N0pjTkpVWDdiUGxrampBaFRjU1B1TTQ2NHFLN0hNdnNSN2JNcy9Ya1RaRHpWCnJUSW9WdG1ONUswS0x6L0hBcGdNVkFvSHhqMHBjVWpMTmVxSlJVaHZ1SlZsN0x5YnRyQmYwNUJzVkp2THROZGEKVVZtTnIrRHl5eThvMFFMQkdaY1VWQjRCeDVOdG9QM2cxZU5uQ3lBcUlVZy85RHpFeE8zTytENWxkU2krM2FJMQo5RndkV1N1RlFFRXpwNzUrSmlhZzZQK3VKeUltQWNCS0JCU3ZhUUZDS0w2K3l3cHFtNjN0UXZkNEluYURZeXZxCldXMkFTUk4yTk11Qk5FRFk5Q3lwQTRxVVhpalM1dnpQVkdqa2lXbS9iVDJCOW1SRUxDUlFYeUpFZ1NsL2RMeHEKQzhnb3RMV1NxM2ZJUHlnVXJLeWNPb1RwRlFwaVAyK29iZms3YTM3OVkrZ2Nxb3QrelZpMWdTVDdkMm5CQy9qOApaWFJRM0VEOGRlcEpDTEdRVlVlRWZJTUFoVWRtWnRRNkVWUk5MREs5MTdWS1pXcHoyR3phZHRlaW9HYlBzRWRYCkNTVWh1QmlVa0pUUHlLczJiNTlPUlYrN1crR0NVN2xXSGFQbDg4Z0Q4eHVQb041ZG5uWEh6Q3B5SXY5QitPN0sKeGVEb0hHbHdsd2NNWXhvQlg3T1FCYURVUzcyZTVpVHJ2QkZNNlRNdmpJN2x1UUhXYnNkVVdwWXQzWkpNdHJqWgowOW89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            },
            "apiServerPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBb0Z0SE84VjhPVzFhbDJBSjA2eGRaUEkyVU16NGdYL1RNVW9QR3c5YjJ1VlNsOFNiCjBTR3FCMWVRU084Rlo2SHNjWUdsemJ3MXlDSTJqZFB1ZXdSc3JmMC9zVTkzYkVMU29zNjlHVnJpclBrcWFFWU8KOWdsUWlJaVZaMldmbGVsNFZMZ2NPc21wRGdibDRFMHl4aGlUV0Y2REMvQ3dkN3NBYmV0THlQei8yZHNQeWpJRQphMVJTc0JrTlFGNW9zRXZGbmlkKzlhb08rVzVsUEs4SEZwZmYyYWp2N1laanRzaGRjSWJZSEhIdXJXOGlFU0NPCmFuRXVHTlhJUk5PY1o1NE1qcUhxOXdNRVRZaVU4djZBamU1ay9JeGlmV3pBL0RtWlR5T3dRMmZ6aTBZV2hzTjAKeHNQb1g4WHNaK0hMRk9JNFgrcW1EQVBWUjgrdHFUMlpHdnhUQ0RLK3pwZFA4RytnSDhEclVsYysxQjZ5ejZtVgpGdzYwZUVhM1dzalVvK1JtTUtKUnVrWUZkb0JEM1l6aEtiSGZRcHpNRi96UGd3OGJ0V2xRTnVsc1RKZUczWG00CkJnYXBVTk5ERlpJV0RQVDBSLy9rQW9hN1MwaHIyYldxTXRYQXdrSGRYVGR5LzhtZXAzY3FmbkVPMFRxQTlKQ0gKMmRmM3B2Y29RcjE0VXBqWWQwaW94NzRSZ2VaSHlMYVhHcDlHbWlwaUZuMWl1UGtRTG5VdVAvU0g5NUcxMmhnQwptb1FBak51T05HVmhvdmZCd0sxUXczTUJ1OUFwSVpCNmx6WTJTQjRZbm9RZjFJNk9PZlo2WEh6cVJka0RIQUlECkFhWHYvb2Y5VVZhckxZTVN6LzJPaDZrQ2YyUXh3TXA4S21LdGNQYlY5WHZuZFQzYnFCUFIrVUhxejQ4Q0F3RUEKQVFLQ0FnQVZQNE1VM0hvMWNkUUxNdUthZGNCNlc4M3VydnBPem8xQmZycTVyek5Rc2dwYnFlV3J0SFkvT3M4WAptdlJ3WXZoZG9meENZcW9OdHRyYnVEVmxmNVNYQ1hPakh4Q0grK0xGUi9ldW9HaGcyek5QVmRrdHFOWlBBU29xCjVVQmNNTytNNmtoelViMWc2bkVUWTZkU3NIYjF3ckJDcU1YNVY0SWJEbzZnTjBYL3JCTlBpNGtpWDY0RlA0eU4KOXZTUVI3b0wxdGZ2M1hUV2dGWlIwQzkwUXZPYWQ5UXkrUmZGWkk5ZEZjRVZJOU9vajQxSUQ3UlBUbWY1U25xYgpCQjg1YTZ2bVNuWkQvTlpaSDd2ODV0Ukora2pQWGhxKzIrWkdoYXRXM1RmQjlzaENzQ3JUK0pwRXJEamlWK3VYCmFFZnNvSDB2Mkh2Z0k3SGpMaFdvMDB5eVVyVDlyMXRjYjNZblgxeVIzRGg4ZmZnOWh6TUsyRUdDMkFGTU10Z0IKdjBNS1hBbHRRQUJnNmpXU3FheDBxSlNSa3lEYVhUYnczZng2ZU5VcjI5R2NsSTBSUkYzSnE3N2ljeXdTUFJONgpUQjRaQlFBeEU2OVd1aWZhM3EvTkVPNld5RHc0T2M0WmNFNTZodEErUVA1TEJkb0xRcWpRdkNielgvWDV6WUFyClFxb095UHBNSWRabXdGSHIyTnNkY0Y2OGc0cnZLU2tTM29SeExhUWR0Y3YvQmtyNW1IZjR3MXk2UndYb1AzRDEKUFRDdTh5WFVrMUR3eDlhNnBOSDVBVDgyMTJCbFRFZ0paT2NTdGExN1VpVVFQdWVGclpZcWpYdXp0NWhQQkJBRApIMnZNZGlOUUxZOTlUTnVRelRaWlpXR1hoR0pZU1dTS2V2clU2dW9FY2kwZkhwS1ZBUUtDQVFFQTFCdytPaExpCk81djV1ZmsrZy9XZW9zbXNrMVREYXQ1RXJIUkFvbW0yMHNNY3pOUjNURmU2ZENQWFF5OTdXa1pYZFh6eFZIOE4KK1NOcSthdll6dnNldU5OQkJGMnh3OGtOYkxGWVMrN2g0d3cxQmtKNHorMzBnVGtRQkptNHcwQzdTaHVHOWptUgpIRUZSTC9XOCt3dGI2YVM2ejZ6ZStueEpDUVcrQTFLN0MxYmhoVmkrbDEraHRBemJiMXNzOVEyTFB3YytNZnp6CmtPTFdBc001VzUzYWtWUS9BMlFHNWtCRUpiVFJVYmpoR1Foc3ZNcmpOQzkvTCtPQTJwRkdySkd4dVFxWWdGankKYUJKQndCcCtkUmhJVm9CcHhEYVFHRjNuT1A3Z0w4eWpMTnd3Nmh2OERmWVlJMEFGamVGN3FnS2ZyanRPNVBCVQpZeEF1MTNHbGdHcDlJUUtDQVFFQXdZbVNTUjI1UWU2bXhUSTBMaTNkNHpDbkxQKzc4K1lkVDltTVVQWitRTTkrCm9DUnhQYVRkY0x3eWVnRVlINkgwU2tyWU52U1Y4a0JSZTJQNCs5cE85bTVWVHdOYjNZS1lSSTd0ZzdIT2FiaEIKam01b2lQbEt5eUQ5VVhGcDg4REFLRVZXZW9qeGh6SUhseU5yMlNhdTF0QVpEOEIyVzM4V212SEx2NGcvSkliNQovVURzeFVaVVlhbndINXZGQ0xFRTVMNmFTQjI3Y0w4NnJOcm4zd1JMWEJORm5CQXpoVGYrQjB1QytDQ3RBT1dzCldDRFJQekIvZjdWY09TWE56dUllN0lEVGhLWENock1nTXBiN2d0RExQbm4zV2doUGZ0U0ZGRXlsU2M0SkNxSnkKdG9tdzI0WXA2ZFB3YlByK3Vyd2h0aUFqUGtDWUl0L0dPd2h3cDZDR3J3S0NBUUVBcjlEMVY0ZmRsSkYyVDB3bApJSmFRdHRpNlBxbE5EaUZOQlRHYmZjUm9zWXpmSzMyVm9XYzZleGhXVHk5bGJPL1BnT2hlMWE0M00rTEN3azlLCmVFNjVLWFNhZVBiODZZK1duQmpvV3BDWkZtMUE2bjVneStHdkFRbittQUdmbitEaEhjMXhjbGxIU2dkdU4zWFcKL3JSc3JGOUtKZWhpTDNpanhXSElIZE1PalppbmVMT1Z6NzJLT01kTGdLTXZ3YlJIVHFnL1Nvb2tqbDBvRGNRcQpvQ0ZaVVl0bWEvWVdyZlpwUm1QNStXWm8xeW9maitJUXNHb0tYL1NSRXhyR1hUYXEvUG1tYlFUTmNheG9hY2JNCk9WMDJZTlV5Vmx6djFmTElQWHN1OHhBSjFaNXl3U3NQSTdkd1RJKzl5dHd6ZURtU2lJWktvQVFCdnRka0xGcmMKVjNSdFlRS0NBUUVBajZtWE5UOGpMWllCcFkvR3ZDQy8vTTA0eTJacUZucFNkOXQ5RlB4a2E2ZWF6elU5K2d4UApkRWUvRUdHUGpxdWhzeVFycTErVGp1ZS9sR0I1aWpwYk13Smp3T3MxWGhCN0J5a3hsZmgreUd0Ri9ueG1qSWJBCnhsZ09zazRGNERMTWNSaEhRVjQySzYwdmhUbDk3UXVSN1ZNN3h6Mk9uZ3lRc3lPWm91dDRNNTBlSktmMUdkdEMKOTl3MXFzRHVXYTFOZko4ZjF6aDYwdzZnZDM5bmIxeTRzL2g2UzRhYk4rQ0FhTm5jdG1OTENNZDBUMWJNL0tMNwpnY2tXVkRXRHVIYVJqZTF6Rlp3VjhmYzFoMWdjQ3RjQ2g3WHhycHRNcDFFS0dDOXM0b1JXb2RaRVlNdUV4TytxClhUQTk0Q2ZRdnJ5NEtZRmhwK3c3QW1ncHRkaG1CNGhaY1FLQ0FRQmp2Y0JTY1piQjk0UDZRbHNBbTJrNFRSengKNE1RbU1Kb2xXZTJjS2hucEg2Qk9XU2N1VjZCd0l1UG84ampUMzV1aVNuUDEyQVNITFJYTXZiNkpsSlpRSVJ0Ngp1WmZUSnJBSkllZGxKQkNCdjZRMTJiUUFUc0U1MndtRUN3clZYRS9TeFN2RWdaUGUrZWIxdnh3alFKNURTWGlFClVkMWJhS1Uyd1B3MHJQT1B6bVpLdzAzaUdMUHY5S2NCL1lWdkppNmxoMFZXcFBENGVCeWh5Sit2SG9yUlpmUXMKY3Q5L21iVlRQcFV2aFZzUHBGVGcxNEhWenQ4TitGc3RTSjh5TjNZOHQwL1VmYUo5ZWs0YkEyQUdxUDA1c0YvKwpVWHB1KzVyUkNlc3h2WENmazNQcWxzRDNMWGNwVzdndmxaSC9HRmJMdW5SbGRVYTZRUSt5TTRhSmRGTnIKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "caCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQUxwdnpCWTNpTWF1MG4zTVIvOFJXSDR3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRrd016STNNVGt4TVRFM1doY05ORGt3TXpFNU1Ua3hNVEUzV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTU9nCjh4M2c3ZUFmcFhOWWxkVlBYRnlXZ2Y0anJ3ZmNWczBUMnVSbWRTb0NqSkwraVVrVDZXVCtzV084d2IyWHExeVcKcjgrR01RclY5ejYrTk13V2NKQjZiZUJSRjNmM0lZMjVVWjBQdEVTNFo0a2xpOTE1L0tRZ29hOFVEeWJDU1dwTApoU093MlpGdDQyczlCZk9tVk5QT3Q3a1BvcU9iWDM1VlBsaEhpZnZ0RzdkblJwM21nQ3ZqcFQ0cnpSNTdzcW5LCjJHNHBGWCtScjQwb1hXQjhrTWc1SjdVZlA4N25IaCtRTVhUV09aOUJjR2JqbFp6aCs3UTZybDRmMWF2aGtXN2oKeHFUNUJZTUNPRFBjZmNmQmRabEJoYjAzajQvbS9Jem55Q1FXRFZieUlMY3FDOG85SU5aREZIZENKam0xQWViNQppaFJ2UWNvWWw2elpRTzMwVFkrd2hmYkVjWkxDaVE0M1JnSTBJZFBLSjBGY2krd29SKzk1RkRoalhjUktLOFd0ClcxNkFDZEJ0cTUreFdhTTZQLzBZMDdVVENXbW11MzNsQzBEeklybGh5WC9xamVaWkl1Uk1FZEgxMUhGbkNxcW4KaEVDcUdFN2JMYkFGQ3Z6T3dpRjk4eTdnRVA5eVJpeUdKRjRXSHhzT3NuS0JXdDdXT29zUzhjUzRnM0NYK0M0bQpiS1JTbkdiSzYyazRJdXBaUFRNSmtBZyt6SlBUK1Z0OFdQNVhTUHVzRFJnb1krUFZ2NDNzeUdiY1lOeGZxdld2Cnl4TXl5RzRJSndDZkc2eDZySEdaS0g4NmlDd2Urek9JL2VrWktrRGlzUVRLcXh5ZnNheElwYVJvbXhOaUtKdUcKMXUwVDdWWGw1WmU3cENwQ1VDV2xUWEFBZmZTNjZaS1VtQzJ0NkkwYkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0pLSjZYCjJCbkhyR202THBTUkVWVzZzMDhkWDdhb3V6cU9uU0hER2tDaS80cUVJZXZjS1AxaUxERVRUZFEzUVl2cE52NGkKTUpzM3V2cGcwanROakxRQnczR0RMNXo3SFpCL0F0WlpIUEF3eDhzbGhVMGREbVN0VjdjaWhhdXk0QlNESnVvWAp5VFVPeTZHQU9nWm1PN0ZIMzIwRG9pRE5hQk5CVitVQ3lzRDFLUFEvcnJ5clJSQVc1QzY3dW9td1l5MTE1REVJCjB0c3cwdW5TVE1aL1BiQTc0MXY0ZWNwSUEydHFQSHNZSDdaOXhLc3VmaEt0REpBS0xiR3Y5cXhMSk4ybXBncW0KVEpiaUFCNWkvZ0hteXMrb2dkb2t1K3VQeWMyN2NNa2R1QXpiY0FrcytKdkU2Qno3RUxMa3pGb05hTnhsYTV2bApVV1h2SWtHVGp2Q1hwTjRoMXZyckFGSFZ3elFWN1Nsc0NpZFZuOUFRZ25uOWdjVStQYm14UEcrYzFnWTB0ci9UCnNQVjVxeEczeVB1N0JSWTNOOW1HM09VNkJPUVRtak9sSGRzSWlyNjF1Z25sZU12UUVkTHByaWNGYjNWQzRCUnIKYklNVVBEaEFMRFpxb0xOcm5yQUxMTHhSUTA3a3FMVnoxRk91bXFxSkhzSTJPWHpENVUzYk5wejZ6dHN5bkVLWgp4elZBR1BlQklTa2o4dHZYdVBwSzRkQ0MyZnU4SEdoOGNmYi9uc2d0NkZtRlRReTRPcHc0NUNURTNOcnNhTGtYClF6QUJtTXBuMjVpSjBrWExzK1YwcmMwUkJMWWxHa04wRkdMYWV6TUwrc2lqa3Fjamd3M0xHM1RtOGNtQ3RvblgKWGRNaTBESnlmbmJTQ1E5cnZTbGFQOWwwcWJhVDgrUEEvTDVqa0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            },
            "caPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdzZEekhlRHQ0QitsYzFpVjFVOWNYSmFCL2lPdkI5eFd6UlBhNUdaMUtnS01rdjZKClNSUHBaUDZ4WTd6QnZaZXJYSmF2ejRZeEN0WDNQcjQwekJad2tIcHQ0RkVYZC9jaGpibFJuUSswUkxobmlTV0wKM1huOHBDQ2hyeFFQSnNKSmFrdUZJN0Raa1czamF6MEY4NlpVMDg2M3VRK2lvNXRmZmxVK1dFZUorKzBidDJkRwpuZWFBSytPbFBpdk5IbnV5cWNyWWJpa1ZmNUd2alNoZFlIeVF5RGtudFI4L3p1Y2VINUF4ZE5ZNW4wRndadU9WCm5PSDd0RHF1WGgvVnErR1JidVBHcFBrRmd3STRNOXg5eDhGMW1VR0Z2VGVQaitiOGpPZklKQllOVnZJZ3R5b0wKeWowZzFrTVVkMEltT2JVQjV2bUtGRzlCeWhpWHJObEE3ZlJOajdDRjlzUnhrc0tKRGpkR0FqUWgwOG9uUVZ5TAo3Q2hINzNrVU9HTmR4RW9yeGExYlhvQUowRzJybjdGWm96by8vUmpUdFJNSmFhYTdmZVVMUVBNaXVXSEpmK3FOCjVsa2k1RXdSMGZYVWNXY0txcWVFUUtvWVR0c3RzQVVLL003Q0lYM3pMdUFRLzNKR0xJWWtYaFlmR3c2eWNvRmEKM3RZNml4THh4TGlEY0pmNExpWnNwRktjWnNycmFUZ2k2bGs5TXdtUUNEN01rOVA1VzN4WS9sZEkrNndOR0Noago0OVcvamV6SVp0eGczRitxOWEvTEV6TEliZ2duQUo4YnJIcXNjWmtvZnpxSUxCNzdNNGo5NlJrcVFPS3hCTXFyCkhKK3hyRWlscEdpYkUySW9tNGJXN1JQdFZlWGxsN3VrS2tKUUphVk5jQUI5OUxycGtwU1lMYTNvalJzQ0F3RUEKQVFLQ0FnRUFzY21NS1JOS0crMm14M1V5ZG5GeFZ4UFJmODJlUEY2YTVEV3ZNUE9NZDJscHFBMTdadGFadmhkWgp6M0swQUVIZWtuNi91TElUeiswMGplait3cHVDSVV1aW44SVN1Z3YyaW41cEZYdzRNRndHZkRXTEx2UzJEZE02CkhZcjFXaHduN0ZwRjNYSFR5TDg5ZHpBMlFJQmhoenpPNjNpeUxrMytNeW4xUnZWOUNWOHJXVHFhaXRYNGxlcUYKT2tORVh2ZThIMk1oM3J1bnRoQUlveGlVQkNRdzBFWmhOOUgyZzJxM2phZlZ5b0VHVFIyRHNYNFRja2hPSURWVQpVbVpNSWJFV0l0a09wczlKbXc1aFZZQ0ZMdzA2ZXRWNVhjVW95M2I0L25XSEJvU2tDdWh4b3dTclFsamJodDNmCnM2S0NhdDk5b3hRVjBReHJsZWRUc05xZ2o2RCsrb2g1VkNsRER1M1VZNXZkWUZ6dlBrVFFXQ1VRb0J4Rzc0bFUKMS90dkhCYkhIclJWWXRROVduelNzYVFCYk1BSmRyQUd3M1diUDRNeldPbXVWSDExS0hmb1FxTElXaG1rdnVFSgppMzl4SEdtUUh3V2FZdGI2cVlnYUNaQTFkRDkxNGxDSTJ3cjE2dmhJMkt5TEEyTThpbzQveFVBRUVQc2NMd05tCjdvVVF4TlFWVERPdDJuZFovZFBnQ1lGNTh5U0IwNjVPK01VMmo1L2pQN29WUisxRlNMZ2J6ay9Ea2x2dFZQQ28KbTJGQXNydlgyNXl2Z0p6bU8xMk9vL0dBeDAwTDhodVppNmp6QTNyRHRLTWEwaXpGSkZJR0NlZytlODE5djE2bQo0bUdYV2V4c2pUbklGY0ViQUdySXBaS2wzWC9ydjd2Snd1ZlRUeWo1OTlYVGUrQkMvUUVDZ2dFQkFPT0NKcmwxCnN1bUo0bXJObm05MlpUZXI2Y0pQeHZJZVYwWCtpTXZrbHJ3Vk0rOWlXb2VNOVFmZDhUdGVmWWwrQTNDRDNzK0QKdEd3V2lvNnFTQmdpOFh3Nmpld1J2MnBaUGJiT1FmTjVoaWFTbExPVG00NGV2TjhOa3JxMjhMODJtNzJ5YjBwVwppK29zRlJFRDh4VU5sbi9zNW80N2ZsR2t2RytMbCtnNUhDc0NKdDZYeHpXRW8wT0dPeHZ3cSsxQmFVNEhZaVNZClpvLzhjTWpRNnlWY2RQdkZuMWcrYkVXdFhNdEVmSGFYaWVsbFNHSUlLUExCSGEyQzhaL1BRRWJvYnN1M00rdEMKZUdFd2xVWEZPVW5nZG1IWmQ0TDFFbHJTd2QrWHVYTUh5WW9CeXV0MUVJbzdOalBVZU9pbW1KRVdBY0VFTTY1UQpWWjY1Qms0RzBPeTNDbEVDZ2dFQkFOd2d2czM4eElIaVVNTVVMQmFUM1RVUCtDalVDY2tHNnVWQVl4VXd6R3pTCjF6aG00WG1hdmxVamV0cVViendZYlFPdllSZjJJR0dGcEYzZ3luUUI2L0lBdDBqemU2ODJ3TzZQckNxclpobUcKZE5VT1NJbWtGZkhMWWFPWTV2QUo2bmtQc3dTTWM5Q0FXWmVRcHd4OEZvTWE0RjN6NEFYYU9hWFFuOURnd2hneApFUzN1TGU1N09BQncvRkE5dFcvSGF3akpYY1dNc3R3aHBHVDVPcC9NTFpLVnhrU3JzdW9QS1lwVk0rZmlNemh2Cm1HQzZraXVCWVpscmpvaE43cUsvZ3BTNXBQbnU1T05HY1dVR1V0NFRzcTEvcFVuZ0xlamlCaHN0d1J3dXpJY0MKSnlER2NPZjZRZzVqS2FRMklmTHVzeTJXNndiaHMrVVpaeXl5RndvRzJhc0NnZ0VBQWptbXFVKzJaVVJjKzVCeApTVVBPTDZJMTBobTNwMnlXaSsrMlpOQWlqVXBqekthWW5oVEozTDdWK2krdGFLZmIzc0RiY0Fvb3ZKbm4xd2RoClZ5TVlXNCt6RGFrS3h6NkNOUVNGYnAwMHE3SHBWR3hRTEM2dXlEdTR3S3pEWkF0anNKSkxObDNzVm1rQjk3MmoKSmdTUkFVVk81L3M2L0E5eGJHSGdKWHhSZ3pZdExTWXM0NkFkZks2V2EycUtNL0xjMWMrS3JUTDBaZG9oUEVXVwoxekcxVHpVYW51RlZhOFVMVUUybUxmN0RjWTMxREVocUpoMnZiYUFIUHZubTlncVY4dFlpNHQwdWtqeklhUHRKCjJTZ2g0RWtoT3gyc2hVamtib3hzV3V5cmt2YjdoaHdLQW1BYjRwdmtadG9pU2VEK09XWVNIMVZYMFFxY1BpMGcKNC8vU1VRS0NBUUVBdFZxQStDSGNING05c2NwbnZENGJ5OENaV2NHL1FoQmg2M2VOYWdMbkdHem9CVDYxV2tORAp0YzdpUXp4eEhCaWZqNTZvcGw0UE5Xa3VEbTNKUGFQcnFGZ3dxSGg0bU5US1JJQzNmZnZ4eE92Q1MxbFdKNWU0CndKa25tdW00c1YvcC9jMFNWcGdFUG0zUDRnKzVvSTZHMllLR0FNR1AraUpjeGlCSDJvV2hRdDhCNFU1T0p5RDYKOVZvZ2RWY3hxS0twcXZhRE8rTDc1R0lQRjJWQmlDOW1DRk0rb29xMmZ5RDR2MUFNMEdqS2ZCOXNjWnlrR2hXZwp2QTRod21nNlIzang4dWV6WkhvTnRyVHRiU2ExbE9Lem5UOEJoUWlkcWpTMGhTVy82Q0VpUGNSblNoaFRJcnRLCk9xSTF4MlVWdVJneEpFa20zbWVLbHgvRG9jNGpMdzZQdXdLQ0FRQUxlNzJoOXJWK2ZMZWJ2aXF0dXhFZ1YrQXgKd0pxenpOVHpLWDRycnZ3VGprMlAvZ25lWjIwYkZGbjlKdjRYTkFmaTVNdFVZSytxclBwUDVaTXpwY3p6Z2lOYgp0MnFhcDhML2JQTHNncDJyaW1RdHhqazMvKyt0cVJEc24yQzB4aGloTExkUUtZSHVVM1pZRUEyTDNMR3FMTEM2CjlTTHAvb0dYYjV2THZtVzBtWnpoakE1d0dPVjRHMmw2Z2NEMFVYMnpybmFaNm5MRkdSME1zZUxjL0dxRFhMb2QKUUtwSVdCN1JyaGxWRC8xZGo1UitlNkF2SU04NkxtdDEycnpwSjNQWHVVNHdLYlNJL2V6ZlowNE1FeXVGOUU4RAp2aU9XM3JlcFJaWFNhSnVKR3NrYStoRGozb0V2UnlJOFRmd2hzMHJRSFZEYm9sM2JoNEVBMUwyUXhKQ3EKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "clientCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRYkh5TEFjMmhxSDR4SGN3WlliZ0MxakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBek1qY3hPVEV4TVRoYUZ3MDBPVEF6TVRreE9URXhNVGhhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEUU9BM1ROZlNRcXZWeGgxSVdBNUhqSk85b0JMK0oKaXZObUpuNmJTSXY0Y2ZFalNMbHZvMmJ0WDNyNVhXVHdMclE2N3l3cTdpRGlUaDJaZktpRTM2Q1pZL0IycEJRRApva0ZLQk5VNmRHbDlGTzF6U1N5ekNIdEVRcXUzdXBpZDJBZFVRaVVJd0tlNnZLekJtUTZkZC9MRXJ1c3RvTEs2Cml5eUo5eSs5TVFlei9sbWI4UVFQSGZmT09MMHFoNTJpS1pGZVllV1FkejE1RlJ6blpCNFJCcUFYR1pKd0ZWekkKU0VIUE93ZzV6akUxU1cranBBSll2MVE3MitYQkFac0ZjeDhlSEd1d3FKYXlrUFFPSHduSExCdWt4cE4zMkU1eQoyYm9ZN3BkZEMzQ2o5dWtiYWVkT1RHWjJXMDlaWm9Rb3Fzc0tXcmxGcWFnSGpsZkw5d3hVQjFnMDk5MFVQdWd3Cm1XQW5qRkRNTmt6MVY0MzlzQ3pnTFZrZktIeW5PZzFCNjlUamFHemM0RDFlUlhyUEFaNFM2dmtQY0tsK1kveUEKWDVtRjF6Qm1DOE1YM29oLzhoNWJvak5VdWRLbjdiZUkwaTdEU1N1RTRNTUdXV25QdlZzYlY5R0FUemM0dEJJMwp2eG9hcFFrNVFEdUhMdjdWRjkxWjV3eTZ2OHUxMmdXNkNmTDNjRE5EUWc0dVlVb09uUGtPaVNURGZqV2ZUaGtxCjJycGlwN1hrUFB0LzduZUdDVDJZR250OUZ5Tm16NVo3TEtQbFhUc250Yis0TUd0K2lpb0ZvaC91eitxc2xsVkEKOWMvbE5VMm1IS3NkanNaOFVrTy9SZHlsVjJ0T09STWZmSXpjRnRQNy9kUkY0cGtkemVUeTA3WjB6dXZQTjBCRgpTcHdRMElNT1kwVERSUUlEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBVDJ6MEczVUUKYkVUQWp6UzBaMlMzeTNlUUtNTi90L1VQR3pNdk9DRE9GQkxJOHE3TVVDcFJqWlZaWFloSGxtWXMvRy96eGNXYwp4UmsyNUdKOHdTQnFWQjNBTVVlZDBvdXQrTWJEYmN0UGhNbldFczl3ZS90TnlhTGRidFNFcnpVSXFaS1BVRFN2Ck1kU0w0VWt0dnJybk4yMGFMV2E5bnkzUG1tczBpWktMQ1ZnZEVrcjFFQmtPUTluSjNheWJZRThDUGFKS3J2QjYKTHRxbHBHYVlQdFpCR0NaODNYZjJZdm4zMW9PTm9BbHZYNENTdXF1b3N1aytrWm9JbVI2TFZhVzd1V1dadXRFNQpTMnBQR05tZW5HUUIwRjh3TU1BK1VGME5xZzc1cWQ1aUlLQllpNWxCZGhNQWpsRmkyeFAyY0V6RkVLTnZzUnVsCnZ1eE1lVW0vLzNpNitPdEs2T1N4Z2tKa1k2Y2liNjFTUGlRM3V6ejU5cGg0MlF0OUtNaGU3ZE5XVFE2NGhXeWMKWVk1NkJFK2N1aVJaRmg2REY3WmJEaUhuZmJjMS9NVHVwbkNMZ0ltTkNscmdBRDNNM3J1QUZRTTZMVXF1VkRObQpWVWtjcVA3b3V4ZE5qRmhWSXEyRzhXSTVPQ2ZnUHFBNW0wU05reVNRaE04am5pbjV6K1FjSmt1cUpPUUZIbFpBCkljTTUrZGlwbWhGU0JHUEM4SGxFVzBqclBYQmZwMFpnYlJxVU5RSE9nTGhKcUo1UjRPU2Mzblk0Mm1sd3JvREcKeUJIalkzMVVkRVJrTVoxaUxaMHoyaXZzQ3Q5SG02NHlhTjNHdWVJRUlDWmxZdlBJQVlGWW8yd0xvbnpSRGZNcgp3WU5iQ29VSDdqczNsQWdWR0M3Tkx3SXN0MjUvNWN6R3Zzaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "clientPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBMERnTjB6WDBrS3IxY1lkU0ZnT1I0eVR2YUFTL2lZcnpaaVorbTBpTCtISHhJMGk1CmI2Tm03Vjk2K1YxazhDNjBPdThzS3U0ZzRrNGRtWHlvaE4rZ21XUHdkcVFVQTZKQlNnVFZPblJwZlJUdGMwa3MKc3doN1JFS3J0N3FZbmRnSFZFSWxDTUNudXJ5c3daa09uWGZ5eEs3ckxhQ3l1b3NzaWZjdnZURUhzLzVabS9FRQpEeDMzemppOUtvZWRvaW1SWG1IbGtIYzllUlVjNTJRZUVRYWdGeG1TY0JWY3lFaEJ6enNJT2M0eE5VbHZvNlFDCldMOVVPOXZsd1FHYkJYTWZIaHhyc0tpV3NwRDBEaDhKeHl3YnBNYVRkOWhPY3RtNkdPNlhYUXR3by9icEcybm4KVGt4bWRsdFBXV2FFS0tyTENscTVSYW1vQjQ1WHkvY01WQWRZTlBmZEZEN29NSmxnSjR4UXpEWk05VmVOL2JBcwo0QzFaSHloOHB6b05RZXZVNDJoczNPQTlYa1Y2endHZUV1cjVEM0NwZm1QOGdGK1poZGN3Wmd2REY5NklmL0llClc2SXpWTG5TcCsyM2lOSXV3MGtyaE9EREJsbHB6NzFiRzFmUmdFODNPTFFTTjc4YUdxVUpPVUE3aHk3KzFSZmQKV2VjTXVyL0x0ZG9GdWdueTkzQXpRMElPTG1GS0RwejVEb2trdzM0MW4wNFpLdHE2WXFlMTVEejdmKzUzaGdrOQptQnA3ZlJjalpzK1dleXlqNVYwN0o3Vy91REJyZm9vcUJhSWY3cy9xckpaVlFQWFA1VFZOcGh5ckhZN0dmRkpECnYwWGNwVmRyVGprVEgzeU0zQmJUKy8zVVJlS1pIYzNrOHRPMmRNN3J6emRBUlVxY0VOQ0REbU5FdzBVQ0F3RUEKQVFLQ0FnRUFxV3F5ZFFRVnRoQWtIUGVKNXJlSTRGU1JKd1dXQXdlMys0bWV3aUpKSVNFMG53enhOTkN6VXJpNQppbVJmV0wzbmozeERaN3JScnRENGJJWnRaNCs5VUpGc2Vsd09uTlpNWVRtRmRVWjYvbmNrclFVQkJic0U4UWwrClJzUGdvYTNBYU9KWTE4Skp0enNGSlpDdnY1aDFRMnMvbDZTRlNCc3RaaVJtQjMzNVVvN0Z3b2hjVVNDRkhKbzEKOElEZjFhNFV4Y0xKMHIzeW1xNS9FaGI0RDhwZ1ArdGlweWY2a2t1WW9GRGI1SXpNcFJyWFowSnZWbDUyM3kyUQp4M1hTK0tBdTFZVXlhazhDTHRDYWcxTGwxZFVodVBTSjBKMkRWeGVvdjlpQitBYnk0N1ptL1JNeVRSY0UxNUI4CkE3WFNHblM5Ti9PUmhBa0Myd01LbEw2eW5UeE1tM1AwTExXOG9HTys0akZCUGFsSW9ZU2JacjNEa3FqQkZQa3QKNFUzWXYyZUNLRTdkLzJ0Qmw4bTYwNkN1U1pVN1F5d2IrVStwdUZQamVMT2s2TkZ6Njg3KzBHY1I4ajFCcWZrTgo1OFZSd25lUm1pOWdIQlVWalBVdGZTQWtwYjZraGY3MGRoVHZmd2hyZFNVNCt1ZWYxSUxsMFZ2NkxMdFpnNFhHCncrMlc2QVZWQU1nZ1djNSs2VlZseWV4TFJCKzQ2dzNqYmZBOHpORzYrK1NOd25seGd0MXVZY1JmMFkyVGY0R1MKS0Z0WnhlbmdsZXZWWGdCdjc4MG9SNFYxVTFabXVrZG5qVG9tTER0d21IQVMwKzBkNU85SlVTZXVXN0gzdUpucQpNWFhPd0o0QWRBRHltb1IvdHJLMm0wOEg0cVAvTElDQ3JjNlh0WS9ueXhIM3JscTBJWkVDZ2dFQkFQYmViOGR5CjZtbnovKzJqYXkrTGRrUVUzOHNBSnhRQ3h3Zi9tY3R1K1dlUmRSU2lYSGpXbjFIRW5lZ3AwSTNML09WaENwMEQKaEN5L3cyQnBXNVJsWll6Rzk3ZkhSMkN0UTlXcjZsdWc4SUhwT0JaTE1SSUJGeHQ5UUtaUndHeVE1WXg4SlAzMApyakdFMDZFN3JKZmZYa2IrcWxUQ1VPWlduWUsrdzdtaVZELzZqZ2lRYWtacG1ub0Jud1Y5ay9TNUh4QnA5elU2CjBxSFg2dWVqZDdic3JITmczR0I0NUU0TUtCOEtmYXp1dU1OUGFoQ0pjZ05FQjdoMGdLRlpHME5pMUJPUEE5ZlMKbWM5bVlDaUwrTXlaWTFPeXd0bFBVUFBqZU9ZOGM0cEcwTXpFUklWeHYxKzIwTHlwRE5JR2tlb3QxWU96R2IrbQo2NGlyYTcyMEVKUnlQUDhDZ2dFQkFOZnJwYXJTRjg2dDc2a2Jmd3hmRmIxY1gxcVhsblJjeWN6SldzM0MxeWh4CjA4RXBqQmU5cnlHMTI5dXE4SVdFclIxc3VIZ3FxZzdpT2JpWlVNSW8xOFZudlhoQ2ZLRktrK0lzaVRUeDBsSU8KcHZGaHZjM3hjL3RMdlN1VFhGTC9TblJvWFBjck5kT3AxakVjMXVvRnVZMVVsWEtIMFp6cmdVV3VYRzlERnY4VQorZWVhRk9KQXFkbjF4TWw3Y0R2b1BWVHZPTnFLWFAzZnFBS3pIMCtQRUkxMXpNNnYrUUF6dlJxVUhEV0ZvUVM3CkZnNjFpcWRmMHZqSDB6c3h4Z0FPWTVWRk9nSnFsR1phKzc0YVpZTDg0Y2kxMFdVanA2M1lVdEpnaEdJRm94QUcKa2lWVlJ1OGtmV25HNTJHclo2Sk11WDBkbytQWFViR3JFM0lvdy82TXk3c0NnZ0VCQU1NZXBxeTJ5RTU4TzJGQgpVOXVkV0JtUmdoeTUveWtTMU9zZWZCbE5talRndy9CT0w5YVdsQkFWM2xUOGo4a3pYS3lUMmNhbVc5YmVybmJLCmIwYklLYzV1Q0tjcUMrRitzT24yV21LWHZ1Qi9UQVJhNCtyK0Q1eDdrQmlrN3ZrZ1FUNmJkTVdBbWhtcmlYV2IKYTl3U0FUc04xK1RzUFBNQnJMY0ZQaisvN09Vd2pRaDUxSFhZeSs3NHp3NlE1ZHQ4WWZBZ1FQTENqbTY2OFFDcQp0RmxSa1RBVWM3cVFjcXE1Y3hDdHd3MW5GWVBSaGR5U05ob2NzQmw3ZzV1RGlVZm1tZ2JuZDdzaXlzMGhkb2sxCnNLMU40ekxwVEpaajJYRWE3cGpUV09NRys4dU1xVGZyNHIydENpakRXTTI3d2FLZEhYQmRvOUZXQmozY2QyalcKSkhDZ0psTUNnZ0VCQUthTTVtVTFXWmZiSXhwV1UxRy9wbzFDUzJzZHNyaGZPbW4waDA1Z0ZJYm1CbWpoRzJiVQpzZHBXNVJnMGF3TVNyRlllSHN6U1hBclBCYWNXMit4b2hNZUlsZVhGbzB6bXNkdXNic21nSHBPZEtialhwQWpQClRwOXdkS0xBTUY3MC9RRjkzdmZwSk1QNEpYZ012dG9WUUdONzh5czlDTHI2RGVVcDhiTUJGU1A5a2liTCszL3EKVVJvSE1ad1kweUhpcWl4eHVuRVllVko2eXFZS2RRUnhYbHMvbXBOenVhWW1RcC9WejB5Wm52Si9QU3hyYkdCZQowZVdFZmJNVFdaK0JlZDhTWHdTdUlYb3loQ3pIUDdZaVNpYi8yRjBqZTV2bFdUMWRwYi9XaVVrN1NFL3p6NXQzCmtpV2RmNjBmQWZsM0pUMFZOKzN2a054ekViVGxMUW1Vb1RFQ2dnRUFGMkJVUW9lTGxkbldFQnloRjQzTEJIUmUKdWZWVmlCemFxVENjSlNERktQZnBrbUFOTWVYaTZjdGI4Wis5Y2k2UlZISmhmUEV4L1hwNWx4N2dzVVY3T3RZeQovVW44aElRbUhnay9kTFZhVjAzZnFQVWZ0NkZ3Z1NjQlRwQXEzcjRwY202VmI1SjJxT1dsVWtoNFVzSzFqay92Cm4vaDN4TXEyZGVZVkV2NUoraWdBN0FCU1YwMXVmb0lvTUl6OHlzSkc2ODlGRytsZ1ZBYnVRcHBhdERUeHNJNVcKMXE0V0E2Y014MC82Zm5IZThSNy9nREdSOUhsSnlTWE1GcnpvTk9PSUNFaXVBR3oyeFkzWTVPYXQzRTBkdnY4Wgo0M3VXUkd1V3FxWDJyYytNSHBzcmRjOVFYei91NDF5LzRyTUJ6MWNnbmJqVm5LZGlQcWkxVEpqUzZDODl3Zz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            "cloudproviderConfig": {
                "value": {
                    "cloudProviderBackoff": true,
                    "cloudProviderBackoffDuration": 5,
                    "cloudProviderBackoffExponent": "1.5",
                    "cloudProviderBackoffJitter": "1",
                    "cloudProviderBackoffRetries": 6,
                    "cloudProviderRateLimit": true,
                    "cloudProviderRateLimitBucket": 10,
                    "cloudProviderRateLimitQPS": "3"
                }
            },
            "cniPluginsURL": {
                "value": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.1.tgz"
            },
            "containerRuntime": {
                "value": "docker"
            },
            "containerdDownloadURLBase": {
                "value": "https://storage.googleapis.com/cri-containerd-release/"
            },
            "dockerBridgeCidr": {
                "value": "172.17.0.1/16"
            },
            "dockerEngineDownloadRepo": {
                "value": ""
            },
            "enableAggregatedAPIs": {
                "value": true
            },
            "etcdClientCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEakNDQXZhZ0F3SUJBZ0lRSm1WMjBWc0pSMjFVVW1IWEZ6T2lSVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBek1qY3hPVEV4TVRoYUZ3MDBPVEF6TVRreE9URXhNVGhhTUJVeApFekFSQmdOVkJBTVRDbVYwWTJSamJHbGxiblF3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUURQRUJDcDZzalA5aU92dmNoaEFXZ2dCRHc3TU5VcmIvWXZpa0t5V25xT1RaTFVERzFPU1R5K0Zoa3YKR3lXOHBhd1FxbGEzbHRWenJzbW1URVBnNFlEalRRdTkvTXdRWVI4QzNyaGp5M3VHYmc4S2RIWEZjSWdVZFhyTgpmWXZjR25pbXl4MTJZS29GS1p5V0pQRjM4MkNOVTV5NWxRdUlDa1pRMEp4OWx4ZnhlVTFLSjVUbS9lcDdjckZWCmZYenBpODZSNzhVUytXRzVuL2w2MVZ4aE10STlmZ1FiaHZURGtuRmlZMjNRaGFXMVFtaUp1ZXh2TnJtRkZlTmIKbWQyRGx3R0h2ajJBRWR4WTA1RUs4bjVpNzNUZk9GZFVRQytLUldFL0V5Y2wzazlRRVpTNFI4M3ltRTA0YVRPQQoxYjFCcGc5TmQ4cW1zU05OQXluZmR4RmMwZDNVSTBRblJ6aHBQd0JaVEVEZ2hBVUJZT3BjaGRtRVhUTlgxanM0CmdYWUdOdGNNRDg1Si93eVl2ZTQ4NG40aWdYRktDU0hxT3E0RTU3S09idTR2RUN1bzh5TEd5NUJlcGQwZzJUalAKRjQwNXdyNzJjSFFEbjlza0lNaE5yWlBkdy8yUUNPQXZPanhMODJ1NmRXZFNIdFF0aE5JbjdGMG1HdE15RWhINwpsbUQvMHpBZWc3c2VDWVp6VDJtRW1rOENRaTFOV3MzQzBMNHZrYm1EYW4zT2lRaVowbXF3M04xRHVCYnFKZitFCjREVkphdTJhTFVSWHlYQ3VLcFMxNjNvTWFocGdnV1BSL2t1OVFtMTJXV01wOGgyWC8rYklQbXpiNi9zL1hMY2cKck5XcVd2eElXR2gvRXdTaURTek1leXBGVHBjOW9zdUpnNk9WOFg5TS9LUzdjV0JWa3dJREFRQUJvMkl3WURBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHCkExVWRFd0VCL3dRQ01BQXdJUVlEVlIwUkJCb3dHSWNFQ3ZEL0JZY0Vmd0FBQVljRUN2RC9ENGNFQ2dBQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBWmk0b2ZMdSt2RHUrMGZ1REs4dysrbDJxdzVyLzJ5VG5uRDRKM055Vwovd2xPcmtZMnBRSW51anppQXM4cWJYR0R5eFJ3Vy84UWoxNkZWc1hHRjNCOW1RS0VLY0VoUWU3a1MrNng1NERQCjRxc1ZNSCs5OGI1V1o0WHlUM1N6K2JZZHoycHhpKzB2ZnFZbEJuWmprRDR4M1NYdWFSWnROVWRSZVVrKzdhY3gKMnlGaHcwZWlrNWNLUFFaRlIrbGord3FPSGxFVi9wQ0tTWk1TUGlFeFRWN1NDUlowMGtRaXF6TWs0bGVPVmZaSApvSVhmalZtK3lURGxOK3Qxejh0TkZzaW9LRTJ2Vm1FUWRqMlN2b0t6dWdtTUxFblR0Q1RjMU8vbFRMVWZKODVUCjdQU1pJUkRFMzlHa3hjV2w2Ym1OTWpCdDNGL0ZRcG9yOExRV1lCTWJTTVhWTkpsMlVCKzBQaDNNLzErYkpUTjEKYS90OFBPazhBeXZZU1dTL0JJL0JuL2tDUzRHMUtjU2ZCYUU1K0F5Z2J0UzJEQWhqd3Z6a2VLR0QwdmVuS1NFSApJVFRVUXlKMHFRZnlwbWtSTTJnMXp3OTI3b1RGS1NiV2ovOGIyM3dKeUtxQ21velZUS0x3K2VuRS84VFZiQ0FFClR3L2Q2bG4xcCtLSnFZWWhqZUJ4TmtCUVpKeXdNdTQxTVlzZFVIaDI3ZjhwZk9uQkkxeUpwdzZ4VS9DQzJFZ00KdHRTaWJkVTVUYWpxZjBoZHp5blJTUUhkb0pNS0RSblkreHB4TTBZNTFzd0hGY09HWmpCcThnU0ozSUlENDhQRgpud1RnWXA5NXlXUk52MC9PRGVPVXlMeFVuMmV6S2cxVjVSWVJDRE9mT0o1Z0J6YkYrMWFWb0VpbzlTSVdUSExwCjhEYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "etcdClientPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBenhBUXFlckl6L1lqcjczSVlRRm9JQVE4T3pEVksyLzJMNHBDc2xwNmprMlMxQXh0ClRrazh2aFlaTHhzbHZLV3NFS3BXdDViVmM2N0pwa3hENE9HQTQwMEx2ZnpNRUdFZkF0NjRZOHQ3aG00UENuUjEKeFhDSUZIVjZ6WDJMM0JwNHBzc2RkbUNxQlNtY2xpVHhkL05nalZPY3VaVUxpQXBHVU5DY2ZaY1g4WGxOU2llVQo1djNxZTNLeFZYMTg2WXZPa2UvRkV2bGh1Wi81ZXRWY1lUTFNQWDRFRzRiMHc1SnhZbU50MElXbHRVSm9pYm5zCmJ6YTVoUlhqVzVuZGc1Y0JoNzQ5Z0JIY1dOT1JDdkorWXU5MDN6aFhWRUF2aWtWaFB4TW5KZDVQVUJHVXVFZk4KOHBoTk9Ha3pnTlc5UWFZUFRYZktwckVqVFFNcDMzY1JYTkhkMUNORUowYzRhVDhBV1V4QTRJUUZBV0RxWElYWgpoRjB6VjlZN09JRjJCamJYREEvT1NmOE1tTDN1UE9KK0lvRnhTZ2toNmpxdUJPZXlqbTd1THhBcnFQTWl4c3VRClhxWGRJTms0enhlTk9jSys5bkIwQTUvYkpDRElUYTJUM2NQOWtBamdMem84Uy9OcnVuVm5VaDdVTFlUU0oreGQKSmhyVE1oSVIrNVpnLzlNd0hvTzdIZ21HYzA5cGhKcFBBa0l0VFZyTnd0QytMNUc1ZzJwOXpva0ltZEpxc056ZApRN2dXNmlYL2hPQTFTV3J0bWkxRVY4bHdyaXFVdGV0NkRHb2FZSUZqMGY1THZVSnRkbGxqS2ZJZGwvL215RDVzCjIrdjdQMXkzSUt6VnFscjhTRmhvZnhNRW9nMHN6SHNxUlU2WFBhTExpWU9qbGZGL1RQeWt1M0ZnVlpNQ0F3RUEKQVFLQ0FnQlFWdGRnVml4Y0pCQnNtNklub1RnWlZBdGFtL1BaeXJNbWR1cXg4TkVrYll6T29aTzNrRXIxSmZYWApoUno3T1B5dDZxbUN5ZzgvdDAyZUxIRVp5K1VLVEZhRi9KUGd0dzRsT3Uwb0swZGVQVTJ3ck1jVk9EaFVWOUN4CjhraFZ1aCtkOTZrU3lTYXVvaHFUVnZvcHBGQ09CU2NHQ29KUzRrbXVDWUx1WjdWdWg3WXBVM28rdGI1STc1TkcKckUzTy8rUENVOW1QSnh0M3ZrNDZEcGF0VDk2cTVUNEt3QzR2dzU0aW9wbDFFcVhjMGt0bFJMSXI1SHZPMjFNLwpzMDl6UXgvZzN6dFZlWmlaRGwxMGRlbjcwUlR6bHhTcko4eEtSZWtaWkFFSWZGMGhuL0NvSDVRVTBHc0Z2Q3V6CmpUckZRZjBsL1ppdlhJTnAyaFJoRS8yMG1la0xOcUp4Y0N4cWJIUkozeGRwRDVkakx4QmpNWVhlNTk4Rnd1NTcKZlBBOWdPVFBMM2wrRGs3WS94K0NEVWVsZmFYQU5NZnZYc2ZiMW9hWG1JNVc3LzUvQ3lBbnluMDhhbzFLZzg1NApYMGx2SW0zMyttTDJLSHRwZlp1b1grblNOcEF4dkJySExJNFJ2aVhKOERzeVVwVE1tSFA3aGN6YStKVjRvRWZLCnNIc1VEeEUyOWcrd1VTMkNvWlNadUpjdWJVZDRlb2prQXZYKzR5b1ZxdUE2aUdSSFB4elBWVS9Vb1AyQVFlTGUKY0FVdVQ1bEVVYTZFY1VIY1RXMlBMNG5KMmlyWVJ3aHpNNmtOQmJncTFmVHV6aVRacEFVNE9MaGgvc3YyYjNKRwowQk8wNk4yOUZ0MnYwNmR4c0NJcE02WjZhZnlpRk9DZjRnUFhJV2tJS0JWWUx2bUhnUUtDQVFFQTBES2RwekdVCnlVZlc5bWd4Vk1DbFlTVjhwNnFKUDh1clI4Q2pqZ3luT3dWYk04TmhtRDNxSDlmS0JHazZaUVB6OXpkbitxUE0KOEt6alhxNHRXNzhrcEJOZFgxK3dnRE1DTlA2UlpDM2lzV0ZMUDhOUTVpVmZqZWZzMXhpeEFGelhRdHpCSzh5SQpmb1JqUmQ0eVl1TENFKzFIb1lLZGNXN3Q2THNuaXBXOVE3MldubkdZVzNYUGxPVm1UWm9vRzVtYWV2NVhSTXcyCmdVYVF2ZFk2S2tINEhSb0xEalFEc28rQVlmS2FPenZPT3kvVnZBUVdaSmc2WTJpT0FQaVVnZEgvY3Q3aGhMc2UKbm5WblBiTFlxVVczZjg3UnVZMVJ6MmpORys0OTNIR24rNTMxUVpWTnltUUlZdTBqQXFMNEJOLzVnMFVyWHRrbwpDcHppNXk0cmtOWFdBd0tDQVFFQS9wcTlHdFZQcmRTaWhJd2c0T1ZmbVVqbUlZRlVkU3puSVd4MmVNcGJ0ZGlKCk92NW9sYmFseDBlRzFYSll4bXF6TUxpN203NW5MYVVUK2hUc0dLU1ZTV1BldnBMS1ZySm5tY21hT1lrb0oyeE4KanJ1UTByNFZnZDdvbUI3RjFDZWdDMXFweU12VzB4bnJacnd6bkNOZERVSkRpcGtnYlUyejJyb1F1eWVPQVhzVwppcEk2RlZjeURjMm8wWUo3eXNmK0ZGbDdkSHpPcGMyQ0VYa1gyTzJ5b01iRzQyaXRSSE5PT2hlZ0V4UCsrL1VqCjVPdDI2bkNveC8vYUpIeE12TjB4ek9sRlo0VnE1N3Q4aXN3dFZReDQ5THFJWmxlUENHckVjNFM1dHQvQU04VGYKdjRmY0JIVGtwekNNRGhpOUNMcVJUbjVPVk1GNlN1bzJDd1NYOStGMU1RS0NBUUVBb0NPZW9lQ0FLZ1lJOFVVWgpWTEJOUkpqWjlmazFVbzJzOUNiWFpzYVN4dElLNFpqUjg1RUVDWFFvbmhYMlpZYVIyOENSU1BjL0JveGs0d21rCk4rS2hJMWNGeGZ0TFBvQjluUmVGNjRGajBiNGRiREVtZzYrUmZRdzhYd0pOK3hKdVBLNmlJcmRTOGNXUXVrZjcKaDVZVlk5QnAvWEFDL0NJditvZ2lGUFd5TzIyVGNkRzhOL1U1TXJUMGFKSS9jV05Ic0h6NzBSNG1lbTgxbTk4dwpwQnBUNXNhR1pHbGJ3cmVnTHphMHJRVUdUdjR2TDB3UmtWU0o3TGFhSzJNSWo0WmdMeElDY3Q2ZTRaRTZWUG5BCnJ3ckI1eHZFc3kxaEZPRHVpeUpJRU15WFFmR3dtTDVudEZvWEhVaDdXbWJSMEtZYVBIOHlxZVRzYUtWZDNpWGsKT3FaUDB3S0NBUUI0VHJZOUQ3N3U3U00rYnRpNmJLaVh6aEt3a21ST1drRjlVYnRKcUpWZGdFeVlTODh2cjNiMgppNTN6RG0xVWxPYkhod05mdk1FVW1JU3dEMkxnNGlTSTRXQkh2U1ZQZ2szaUpabHl4cFRxekFwNS83ZVhYYXJjCkMzRHRNTjFhT3I4dG5sSE1TRVhpeXNTcGJ4VVVHc0hGbWlKQVE4dEcyd2k1dW1KZGpYdFV4ODBHL2NIa2c2ZHIKVGxzUFpSRUo2U2J1aHJvSGVWSk1scWQzaWpqeWtKOXZ5WDRCeDF6WWs0UExmNDVzZFc1dnNJNmRoWVpUa1ppdgpxUDV6YnlqenRiSHFtZS9wMHVtSlJ0YTYzM0FzV0JCdjFCVFFCMS9YSWx4aUdiMkg1SUwxODNtbkQ1T3ZwMnpFCmMvUTZWUVkrTWFxbjVKY3ZCWjI3K0tCQTVKTEsxd2FCQW9JQkFRQ1RBdWpCVmw2azZYNURBUXkxZUxFMEkrU1cKK2llOUJTZkwxOTNJTEZkOWlCOFBZUlJmejUxRzFHdzdoam1uY2pLWGo1RTlveDlpS3VmMmtkeDNhaEhtbVBPNAp2eGthWUpWL1hLa3RTUXRjYTJBMnFqaEtoaUdUaHBjaG05TlVFbGpFdnM1b0lXeUJsQWJwM0hDL1kvTUdqWklsCkJXTU1OWkxyVWJPcnFPZlVJNjBVZEM1dk05K29SdTlzU0wvYnU2RmJ6VG1uOGNvSmdDSHdVdE5sUUI5bkQzWmYKd25ZN0VDTEp2dzAwTUZLMlorM3YwdW5rL1lZQTFLTDdZSW12R3ZBVFVIV0RFZ05mUEZRSE1IV0hycXRaN2drTgpzOURlZTZWTWVTbnNvZXZMT1B0enR4QS84WXNFck50elNVR0t0ZytRQVlrQW4yM0oxNEkwNGtCcGdPRlUKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "etcdDiskSizeGB": {
                "value": "512"
            },
            "etcdDownloadURLBase": {
                "value": "https://acs-mirror.azureedge.net/github-coreos"
            },
            "etcdEncryptionKey": {
                "value": ""
            },
            "etcdPeerCertificate0": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEVENDQXZXZ0F3SUJBZ0lSQUlKdnBpUTdqNEYyMEh1NDlidEppRkF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRrd016STNNVGt4TVRFNFdoY05ORGt3TXpFNU1Ua3hNVEU0V2pBVApNUkV3RHdZRFZRUURFd2hsZEdOa2NHVmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTWpwRkpBMXl1MnZiOSt4Tm5xYjYwN2xDV0tTS1pIRDhHT2tFU2ZtU3ZSV0hqd3hPTTQ3dWRUandDK3gKSnZQMXp0aTIzNnl2SUZidjBqZW51bDJvMEcwMkRzZzBaNVhRekNQNytEOWpFeW4vQUU0dmRnTW9GVHIvN2tHbgpRWnpKUVhDYjM0QVRnMjluSHBJc0g2NWxTeU5vbHQ5RjVJbDRqczY5Vmp3RHpGRFFPeHNUeHUzSlluTGRIVlhBCkhuWklsMXA1YlZWcmtQZFM3dU9GeFYrMG5mcFhiaGN5THFRZW9sNXNXOHR1U2l0c3crTDRXUmhCd0NMcGl4d3QKV05VMUpHbFhjRHF1a09EMFE2SzRKVkRnS2JxaFpyKzZZenJxeTVyQ3p2ODlJd08zVkM4UWdRU1pqNjc2NHFiOQpCenZZdmF2V1M1THZ4cW11YS9lNEFWM0RFc1JxQmkvUitnNGxvbEdPUHFieTd1Zjk5TWF4YnpLSlNiSzI4c3d1CnYyZzhpeWMwbktGNVptdnRRMlpDeTd2TkdHTzU4c1NySExaMUlnNmJJbDBLV0hrQk1lZ21rK2RtQ3JxbnMzemMKS2Nlckg1SWJNMytiVkw3amZRYmJhWEh6OWRvK3o2VW4vNDVNd29TRDVYOHpjRDZydkdGcDZwakZWVTB5UGFoSgp3a2Q0SWszUGFKZjFrZ0NscTdjNVVtWVFCRm4zcnpuc1lmZi83Y05uWjZsRHpFMFIyMkJtS3J3YVducXVTNXF5CmVlUzhnSHVwZDErMWVndS9GMW85THNZc0RNWWtXNFdoSk90TktKRUtSaEgzNEZxcDd4T09CTVdrZW1HVjY5UG0KR3JnSHhtTUJyVklpN3F1cjlBSXNHOTZQSEMycStYSE9YdnJtVGpEQ1plL0Rsc2J0QWdNQkFBR2pZakJnTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWhCZ05WSFJFRUdqQVlod1FLOFA4Rmh3Ui9BQUFCaHdRSzhQOFBod1FLQUFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUJUblpJTkdBQ1BHaGNBQW1RTlZaUTZlM1J0bmJqU2xyZjgrM0JIR2Y4UgpsWXJMWjhBclJOcHdZR2lRR2JhdUxXQ0VnVU5obXE1WnVBZk5HdGg1VENnSW8wTktiV1Z0L0NSYk91OHdaSHpzClRINjRGN1JMMDhrQTNqYWg5dlk3ZmxqQ3BZd0Q0L0VzdFZ1d3hGYThZTU4zcjJLNjB5YitxbVBOaC81QjdpZDkKekdNR0R3aDYzU0tSc0lCYjRveWRCVTFZNjRyL0QxTzZkcW1CTU1MVXo4Z0EyVFpobGM5ZmdsZTV6dFF2N3M4RwoxMW1zWFhQU2tMY3BrbG1BcE8yWHJMLzhPZFBSNmp2NnRVL1VRaERwcGpLTmcvSG8ySzI3SlJMZFczbGtJMVowCmZ1SG1LRWIrODlUYllBUEJZUGhZcXJtZzZleElJVUV3YTZhWVNPN25Da1FWQ3p5K0w1Nmh1T3d1WGpjQWlHZisKczFoZm82MEc4RmpWVG9jcXMxNXBIcStkbEV2V0JXR1lDSExsdmp1YURvTnF4aGRTV3RWWWc4djR6bGx1MFdHZAovMWt4K092eFB5T2VML05HVGtuVUhYQXNJaWc1NDFBNnJZclNFdFR5NDBqWWFpdUFJQUV2M0wrY2MzTXg0UmRhCmt4ZEE3blplR0J3K1o1UnNScTVtcVFYanBjL1N0WnNyMVJBeHJLQ3l1c0piOHVFK0N4Z2lJUnE5cGR0K2dYMHMKZmVYbWRqajRIRUpxbFNqMGE3UUFkeEhBNXo5Slo2Y0UvOENkNm0zTTBQRlBBUkhZck95NHNQaDhhZi9KMU5zVQp6V1dMWHpRb2xXbUVnaU5kUDA2dnVXd3lpU3JoeHVxYjFZT2pOYWNqeG5zd3F4VXlGb3o0MkpVNFdWd3FaZCtPCnRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "etcdPeerPrivateKey0": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeU9rVWtEWEs3YTl2MzdFMmVwdnJUdVVKWXBJcGtjUHdZNlFSSitaSzlGWWVQREU0CnpqdTUxT1BBTDdFbTgvWE8yTGJmcks4Z1Z1L1NONmU2WGFqUWJUWU95RFJubGRETUkvdjRQMk1US2Y4QVRpOTIKQXlnVk92L3VRYWRCbk1sQmNKdmZnQk9EYjJjZWtpd2ZybVZMSTJpVzMwWGtpWGlPenIxV1BBUE1VTkE3R3hQRwo3Y2xpY3QwZFZjQWVka2lYV25sdFZXdVE5MUx1NDRYRlg3U2QrbGR1RnpJdXBCNmlYbXhieTI1S0syekQ0dmhaCkdFSEFJdW1MSEMxWTFUVWthVmR3T3E2UTRQUkRvcmdsVU9BcHVxRm12N3BqT3VyTG1zTE8vejBqQTdkVUx4Q0IKQkptUHJ2cmlwdjBITzlpOXE5WkxrdS9HcWE1cjk3Z0JYY01TeEdvR0w5SDZEaVdpVVk0K3B2THU1LzMweHJGdgpNb2xKc3JieXpDNi9hRHlMSnpTY29YbG1hKzFEWmtMTHU4MFlZN255eEtzY3RuVWlEcHNpWFFwWWVRRXg2Q2FUCjUyWUt1cWV6Zk53cHg2c2ZraHN6ZjV0VXZ1TjlCdHRwY2ZQMTJqN1BwU2Yvamt6Q2hJUGxmek53UHF1OFlXbnEKbU1WVlRUSTlxRW5DUjNnaVRjOW9sL1dTQUtXcnR6bFNaaEFFV2Zldk9leGg5Ly90dzJkbnFVUE1UUkhiWUdZcQp2QnBhZXE1TG1ySjU1THlBZTZsM1g3VjZDNzhYV2owdXhpd014aVJiaGFFazYwMG9rUXBHRWZmZ1dxbnZFNDRFCnhhUjZZWlhyMCtZYXVBZkdZd0d0VWlMdXE2djBBaXdiM284Y0xhcjVjYzVlK3VaT01NSmw3OE9XeHUwQ0F3RUEKQVFLQ0FnQUs2ZDVjRncvMjZWakNaZlgzb3hDZE1JUFovdWFUTEhtYWNBY2VpN3YybWRiNm5oSGY0ZzZ1S2REKwp4amkvZDlMTW91SnpsdS9DeVRRNklicFY3QjJtVVJGc2ZxeEJ6eDNIdHFBOWtUd3hROURZYm11U3NGSzI2Y0FmCmdONW5qZWNvSHM5OVBaSWVNeFBPRE9lTHFhVHpQM015bmJGVVptQWJpdDFzVlNoOEcxT2FuUEJwYWs4V3Zqd2gKdEZYelJ1NHgwL2JFZFJ0aTAvWjJGWVlyTkx5QUpNK3VJdU8xdHBSTFhNZC92WFg1OWVhT0piOXhPZUVlQkdHeQpIaVI5TUczUjZ4WUZtZ1gwc2xBYVByYUlOaVVPSmtaV2srRmdDZkVWYncrZmZjcXhJUHhKc2pQUDlDZUI4Yzd1CkUwQ1pWNlMxK09ZU0RVUlZZMHdxSUt5eVV5NXB0RWlwR3N0dDk2UFVtUlQ5VEJXQXFzbWJZOEZZcS9wUk1jYWEKV0lwdmhueXdwdzJLb2ZVWWowRi8xZ0cwL3A4WXpjWmdzaTNES1FOVk1IcTd0bCt3T05NSmlhRTI1YnFqY29jTApYcC9HcFl0ci8xNjBmZmNCVG5LQ3BMbnF3ai9kdi96QzJPOUNZa2RYMVJlOWg4TGJ5YkJLNDRjVkh4NElpQ2ltCkRsQmpOZkZORnZvL3VpT0lJV3VjMVEzT0h5RnM4TEI3a2RSdURQaVdXUFJ3Sm9xd3BTSTQ1d0hoRDhwaWZnejYKR2g1cTZVYkEvMU1VSTdaSjd6SnU2cEJqdFFYZ0hyeVhmOXJzNnhhNWxiWFhPNVNGeG1ZdzViZ0Zhc2JoV2VvMApKS1pzY2JkYVRtTUNZSVd0ZkdycGgydDQvS08wNy9FYkdydUJ4YnIyQXZnV205YnZBUUtDQVFFQThZSC9ISU1MCndxclMzNkdDM21TUmZ4R01HYVBQN0pacER3UC9WTXBKL3hLdHJFcWhNN29YdXU1VDMwTStST01ycG96NFBqYVgKY045NVk4Q052YnlkVnJUTFA3ekpXNlp6bmgwZkFmK1FFSXBqbWJKenZ6MlBTTXBJazhZVW51MzRaWThMZW9LeQp4TVJkL3VKQnNZa01ycjRFWkQxa3A5UmpjUCt5ZURkYkoxRDlxc0hMRUJ1Mmw3elA3MEJpdmF6dklCZ1JRdHZOCjRUeEZFYTF4ZG5vbXgvdmx3RldOOWJWM2RaR1ZJQ29HenUyQUY1WlQwVWVyYWgrMGZFaEZ4eXgxcHhBeCtHM2UKREFZaCtMcnN2dFhkRmROaHUwUE91eHhSa1orQ1RwU1RpdjRLVndNUzA2NWM1VGlKS3o5VldUTTJDdHBQTWxqOApaSXJTbEp6WUJkOVArUUtDQVFFQTFQZHZLbjhDS25YQWZITkRFWFp2eVlLMmQ5QStqOVJJTmdxeFRLdDZOLzF0CkxyVFVBdlhJcW1yL2NLZFc5dkZna2dTdm53OG9UeWVzaDFvSG1PQnEzOEZteHdCLzZoREc5Qjl2UnozNUYwVWIKVWlML2NXbUE1dStsQmJwcHNFL0syUkpmdlhHd1JrbGNSdW05UVhHVkwxTXMvOGd4OFk0cmQ0VnNacWNBa2hOQQpseTRWcERpU0x3ZkVKamFhUS8zMHdlcEVyMGJrYVFDa3hJNXF5YW81M0YwSUZCWXVtUzNENk16K3U3SGcwNUVYCjVaTzFyNnZ1Q0NRVWJHSlBybVg4S3JDei9JZ2NXc0taNVVuSWdCc1RoRXBYekZ3UW1SZ29IeFNuOTJsTXZ6MzkKWEF0cU02SS9xeGNYQ2JUUDlrcW0wdU1XUUtkUysvVWw4ejVXS2d2VGxRS0NBUUVBd1BNalp4d3I0VE9wbHBIcgpoTkxFaThqeExlcjZ6QUsvblFlTWo2bXV4T09mYmUrU0swbWFlL2E5ZTdxMW5VUUNNK2FjenRlKzFxYzB6TVdpCmVOeWd1QTFwOVZwWFphbnU1WHhPc2NJRXo3SkJNU0twNXppL3FXQXo3Qnh0alN5RE1HREF3dmg0NjB3WDdQUEgKbUpmdVVnM3VaRWZJaTIzY3BRTWxDM2J1bE5MWVYvek14K25jVUE3QjhseDJoeVFMU0pEeCtZQ3pWQ2hhNW15MApJZndsejlFcEZpbEVhZks1cG16UndBalR0Njk0ajEvRFI0a0RJcDZDREdtUmxqZW5KL3FBY2dNVlRIWDUza2M1CnJwNGZMTGpkZEVnUWV0MTlMZU5Lc0kxejg3QlRnb0VxSVlWRklyMndtYVRZQTVRdXNTMEo2U2UvUG5UTEdZRFYKOXBzYndRS0NBUUJwYlBBSUxvV285VS9MaTllb3ZtUEtjcjNYaEN4a1VTZEtNWExoeklXZFVBU0x1Wksyd0d1TgpDWmpZY002WlFwYVcwbUVLTVp1M3k2RWFCQlI4dHFQUmp0Rk5ORThlVlIzWVhmTmRaaTE0T29xeTE0Wnk0MUtmCmdBVEdXQ2pYMGpoTnkwMi8zNWJ1eElROHlwc1kyWnlMcC9ZL3pTQUVQMmYvSy9xa3VvbUt4cU1UOUFsY21YQ3MKZllDNWxoQTZGbTdpekJFaVg4clV2Qy9VNmRldGEycG5UMXFmYnZlMGRyWmorWThrNVlLeDJVTG1NSUFocmRBUgpFYU5Xb0RobjBpN0tCMTJpWnRMNmp4bFdLM2RwQzM1VzMrS2sxUEtXaHlIZGVRRkpka1E2Ni9vUFpjczJNbHlvCldxN1o3RHVDNWlPOWhCTlJBRVFSWEtOanpma2pxV1VkQW9JQkFGSEt3end5SzFadDAwMm50UG9LV1AvZ1VkZE8Kc1pWV05UTlIyRFJac0pka3grWUhYbk5QV2hUNVZzZTcrY3FjeFRnQlNYKzJIQUhlM0xSOCtQTHhoOUJ5T3NIQQp1eDh5UnBjcC9oTUVnN3ZzY2hCZHdFTDM1emNoWWpHVlZvT1IraHA5OVJES3lUdTB5SjRlQnZmMWtvWnI5a0lqCmxpRURubEtUTUh5a1cxc3cvSmJEQmNLQnQvNDNHM2tQNEM3ZE5rMnMvZzZvd1hzMURFQUJYa2FEQXVUUUNWT2YKWXJMZmphT0EyQkozWlFwL3pFejdwSnltajltNGdkMnRxY2VmL0hOUUN3YTZmNFV3eC93MWFPRkwzSTZaZ1RIawpwNWZsaHliRzlmcytTcVVQQTA2dFZ4aUVxRGNFNmNrakdEQ2Fmb005SmlYeU45TjhGLzVZS1hJMkZ1dz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "etcdServerCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEakNDQXZhZ0F3SUJBZ0lRQm9aZzJuTElTRGd5R2kwb0MxU2puekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBek1qY3hPVEV4TVRoYUZ3MDBPVEF6TVRreE9URXhNVGhhTUJVeApFekFSQmdOVkJBTVRDbVYwWTJSelpYSjJaWEl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUUMwekh2S01SZ0w2RnRjQjRVVXVQT3BqNFBua3M5NVVQSDcxN1JReU1yVXV6eHloRU5ENm5EeEVHQUoKa05WT1U3YXJZVDJyb043VFh4eDE1RUFnbkxxb01ybm1QeUpQbHFyQmlqRG40TSswMDBlWWdqSXQ5eXYyYnE0SAordWhQYVI2YVhkeGM1SHpCVTBWRDdIR0FKREJXemZpdFJIZW9KQ1VRc2x4NGw0WXQxelBOd0xmeVhkZVI3Tjh3CmRSZVd4S0pIZ0Mxd3ZTZzg3eEFobm9EcUlpMTZ0WE54WnFxTjF3WHpYNDl2S3hyZ3dqMWp6aEZ6STVTLzlSQjMKdm42VmlWSG1maFJYeHZrL01iTnlrN1NNTzJBTkZtU1A1TEkwQTZTTXZVNmVTT0RWUUx0M1lYcTJPQUowc3hScQpWWXhxYnViZ1E4TGhGb0J3K0ZwaTNzemJpSEJmeWNnT1dZa3lGTzJ0SVh1MklidUdVVlU4ZGpjK0grMEdFMlFBCmhMOWk3Tjl2OGNScjJ2SEJwUmNFemVDN1JkSUVLamhlcEliaE5mTnIzcm5mcFNGa0lPbm8raGVXNlNXT1pXMncKNzNLVTQ3Y1JoRFdQZFd4dEl5TXFTMUQ0Wmovdmhvc01GdlZwM2VkT0NqZ1AyNjJ2bkJ0bWplSFBkcVdQQXZXTwpUTEVOZmNmVWJHL05NOEhzNU1TR21sTHBnZlM5TnB0eU5NMTh0dnMvcGxZV1MyNWxVMHB4bEZPaDBzSDJsL3huCndIYzZUbldPaFJEYzNBQVVBOHZYOVBzVEV0Q200bU5WclI2QkttdGFJQUI1QmZzTEJ4MitBU2Njb2JlZ2lhTDQKSkxCcWdHNGRBK0Z0QkRmTlBISTg5bkE3cnBaeUFmZ29ZdzJyVUsvNEZ5VStacklpUlFJREFRQUJvMkl3WURBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHCkExVWRFd0VCL3dRQ01BQXdJUVlEVlIwUkJCb3dHSWNFQ3ZEL0JZY0Vmd0FBQVljRUN2RC9ENGNFQ2dBQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBZ3hxSnZiMDdRMUhvQ2p5TktVelV0MmlkR0tLREtHd09rdHNkdFZjUgo4Vkp3VTFTQTNrR0JkY09HMmR0Ky92TjlleEJ6UEZpUnlERHBpdWxIRmYwbmRoMEcrRGVVY2RlZWZsTE02UXNqCnBzUUVKQWVNdUhxV000OVd0VmdYS2U3OGtmb1Qxb0hiQWU4Z0RHYXRjQURSUjJPQlp0VHNFWFhaLzVrTXFDTUIKdWJHODRrSFNDWm4zVDZ6R2ZmZTYxSGlzNzJlbm9nY3BrNk00alNnVHo1d3hDRm92eThibUF6ZDJBTDhaamdNawpxTUxuaWdFcVdoTmFaTzlvWEU5WFZ3QjludWk4N1hqODhJb084eG5OeWpmaWtzUTVqcmxrSUdtVHRSVHp5STdVCmlTZ1NXb2V4T0JpZktEWXp4MWY4RlNxR052Q1l0YTFNeWhSSTJ5c3orQTROa2cwRzRhZW9WYnRlV25KTzl1a2IKVWJPZDZ5V2JMaXVlS3RrMHZYcmhKNnNCVGNZL2hERlh4QmR0SkJFTzNvRWNwbGh5cUJ4YU42OEtCY0VTRzJFMApxNGJFSmVBQkJ2QzJZYWNQcFppeG9lUDlBU2t4akc1dkVSSTBvNzkzditCQ1RVanpFd2loY1p5WFVxMlpwQVVKCmVzY1Iyam1sYjdza3h4Yk1zdk5oYVNvbXhLckFTVHVVVlJrTWxBckVpWE4weVM4MzNCd3JWUEJkaG82SGcreE4KSGpaNnFqQnhzWTBVcWt2NitwL3dKa3h3V0o3SUdXWDRTSU9xb0tYb2ZneGZXR1RZc0srQ2llVUQ4ZEErd2JXZwprdzl5ckk1QUs3U3dBVzRSbWxiUXB2Sk1yZDE5aFFKUnRFR0ZwaHFQV1BUZG1DOFFkUlRmVjBvU0pBSnVHMEh1Cm90RT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "etcdServerPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdE14N3lqRVlDK2hiWEFlRkZManpxWStENTVMUGVWRHgrOWUwVU1qSzFMczhjb1JEClErcHc4UkJnQ1pEVlRsTzJxMkU5cTZEZTAxOGNkZVJBSUp5NnFESzU1ajhpVDVhcXdZb3c1K0RQdE5OSG1JSXkKTGZjcjltNnVCL3JvVDJrZW1sM2NYT1I4d1ZORlEreHhnQ1F3VnMzNHJVUjNxQ1FsRUxKY2VKZUdMZGN6emNDMwo4bDNYa2V6Zk1IVVhsc1NpUjRBdGNMMG9QTzhRSVo2QTZpSXRlclZ6Y1dhcWpkY0Y4MStQYnlzYTRNSTlZODRSCmN5T1V2L1VRZDc1K2xZbFI1bjRVVjhiNVB6R3pjcE8wakR0Z0RSWmtqK1N5TkFPa2pMMU9ua2pnMVVDN2QyRjYKdGpnQ2RMTVVhbFdNYW03bTRFUEM0UmFBY1BoYVl0N00yNGh3WDhuSURsbUpNaFR0clNGN3RpRzdobEZWUEhZMwpQaC90QmhOa0FJUy9ZdXpmYi9IRWE5cnh3YVVYQk0zZ3UwWFNCQ280WHFTRzRUWHphOTY1MzZVaFpDRHA2UG9YCmx1a2xqbVZ0c085eWxPTzNFWVExajNWc2JTTWpLa3RRK0dZLzc0YUxEQmIxYWQzblRnbzREOXV0cjV3YlpvM2gKejNhbGp3TDFqa3l4RFgzSDFHeHZ6VFBCN09URWhwcFM2WUgwdlRhYmNqVE5mTGI3UDZaV0ZrdHVaVk5LY1pSVApvZExCOXBmOFo4QjNPazUxam9VUTNOd0FGQVBMMS9UN0V4TFFwdUpqVmEwZWdTcHJXaUFBZVFYN0N3Y2R2Z0VuCkhLRzNvSW1pK0NTd2FvQnVIUVBoYlFRM3pUeHlQUFp3TzY2V2NnSDRLR01OcTFDditCY2xQbWF5SWtVQ0F3RUEKQVFLQ0FnQTdGdFdpYUZjdWxScyt3YXBwOG1TWVZ6SkovZjVXN1BDWldZOHlFOTNPbHY4VGdreWxwcnFRM3NRMApmQ1JxdkF0b2laaHBQbU4wKzVIR3FmbVhid0hHTlFYeXpWRitaNFNaU252ZlhPY2xkeVBnSVRVYk5yd2toMW5UCmU5cHZFYkVSekhsWDFzazdPZWJhWXkxWkx2cXBkQm5CTHk1WVFxL21mQlNpeVFydWNuWVkyZEtFb016eWdWTVUKZUVCa1l4R1NncjdYS01zODF2a1RzOFQ0UUlGU3FIajVhQTkzMmYyMDQ5ZHlBc2wvQ1p5Y3dOMk5IdVRmczgxVgpCV3BEbnlTb1N5NkUzWi9hV25rR2ltV29xME1pSTk1cjlOZVZEbGU2TTZpOUxKNW10QWhRNVFnQkE5OHhtdEdpClN5RmdLNnpEUVFJeEpIU0g5M002K3d4Qzk1Mlo4OU94d3VFdnBJQUdnVTc1eTBoR3g5R3dOYUJpb1VUcEVDY00KY1hFR1V1cjIyQXdsdVV4K0RIQkxLRVZIcWpNbWVrUThBd1Q3MEVndzdkUUEwQVpjc1pyV3l5OCtTZ2hCVitOSgpkbWJleDVKbTNJM0JESGNBdmVnbzdzZlE5cVc5ekVyZzJMeURydE03d1Q4NlRJUC9ETWNLSEpxYUZmVGtEaWZ1Ck5RTXBPRFJHSmFtV2xmckhMT09wNVRBdXdKWXRHOEwveTMzMTB0b0ZiNFV0Ui84L25iT3daRnF2dHY4NTJzMnYKRzNyS2pWUzZDZVJzVVNUbHFlN0ViTWJnUStxMnJRWERIVkVWV0lzcnFSbnNQaThvUkRROXVYUXJSSk5FWTdBVgpHdTR5T0hnenBYZU4rQXVxdkdEOTdBQzJ5anhGbGhRbG1tTlBTM0RhRHNnVkdVOElSUUtDQVFFQTV0MWNlRi82CllMOWZ6VFNEUFNJK0Iwd1pIZ0FiZFlMWVdzT2dqeEJoa3pmeFlQTVFwU1R0VU9STm50TmtLMmRDQ3VOYVZWMUsKTG1TN0ZKRVlCNDZrMEdQUVFTdzcwODZxd3Z0ZFdDcW1kRWZqSVUwVXVaRWNMQVBPL3dKSlZhT1JwWk9aSTk5dgpZUmFiRGxQQ0pId01KS3ZXeHR0Ti9jK3doeXZoa0VsZzRMQ1l2T01YRmw3NUxEbUhRMHErQitHanVjcW1md0JICk5HWG5TOXpNTVliYVAvYXFNUG9KYys2cWl2YmdVcXZKblhWeEVhTmE2azJzVHFhazdQVzdvY0d4OUR5Z0RRb1UKZmhqaTdRTW8zczRaT0hOS01xYTBQeW5KeGhOaU9NL3dTdUxUc05ZVUN2cDI3emwxOThwM1FrbGpBdC9Uc2pDQgpKMzZmRS82eUh5M1B6d0tDQVFFQXlIdXdoYWcybnJVRFY2R0J4ZXJJU0RhZ2hyQ0tjdmFEMjhtMXI0SC9NQVdoCm1NMUZmTytVNlpIM1JwR0VxNkxYU004YWJlby9EMEVocWdoNlQwTDRsc1YyR21NMGNIRnJESStYd2NkQkFhUVoKZUl1OGt5WEdXTmZmcExJSUwzbHpGOXFrblYrclphYzdFRkZvS3gvMGE1RCtJbk1oR0todGFzR2djQ0tFWnhqLwpjc253UkRiWTU1Qm0vVkc1SW9ETWVEWjZERlpJWllHSmg0bVlLRndzOFMwK2xiMGJWUkxBaGRhRjJXbG8wMVhSCmhqd1ZZNlVPbUhHQ05QVHhZc3pJaXk3eFdUbldtN1BpVEQvREd5dkVrNXJiR1hwUXlHY1VPTDZobGg0Y3NFOWUKb0hlT1NNalg4Y3JOcHV5VjI4LytzNkllQ2pmWkxWYWV1NVNPUHl3OXF3S0NBUUVBeTlseUtTZzJZTzhhbkl0ZAp4c0ZSbkFmcHRiL0tmenlGNWI4UEtzUUFKSW9sTE1IelZKOENuWWE1c3lCZE5xWDZmcnE1ck42dS9jQWNJTkR0Ck10OFZVSnlSNnJvd0tabzIxZXcyUS8rRTh1LzI4aFNwMUNENWl6UGh0dkpCNXNpRGRueVpvRDlPalovMFVmWkwKV3dQZGhSUG1sYmhYYVdIV01jVGhheElmNU1hS1YxNzlwOWM4bFh4R24zaUR5MW5Gdyt2WWtCT2l5L1dmQWpGNAphOUx6SzcrV0Q2RDRiOUd4N1BxSW9QYm5FNDM3eE9ORkI5YUY2dnppYkFtZkgvbDBOSUREb2ovZ1VHZVJHRTdOCjY4NTRIb3hPVytNdkRRYk5ENFZXR1d3aWRUMU1ScjBBL2FDakhDRFV0WE9sVW5hU1lwdFl4ZUptYUlVNTJlSHYKVGZDWnFRS0NBUUFmVFBCcWJiRFpabmwzSFFnZDFtSWVwQ2k3M3FRKy9xM25pcjZMQUVqUFBwSFVRWGd2NFZmbQpmNXVUc1BSOXQ1YlZEMENaR0pGdjJFTmhRS0dYN21UUlpWTGpHOG44SkRrS1pRRFVpRDlsK2pEZjJURS82QTNuCm9ReVJzaG9GRDNrZ3FFbzdKOHlpdWxGR1l1OVlqRXlrM3FaT3lwcklOc09lZjB5Rk5WNW1ta2lIcTIrUHR1QjIKaHQwTmY4emZ6aXdlT0tNbGVmTWpwZTNLODNpR0ZKNFBxWGl6K0Nwa1JlRTVCQjB4ckh0cFEyVExDR1p1Z0Q2ZgpIbG10MnZBMDlMUDZ4d0YzWk1oVTF1amw3cTZQZDIzaGZiUG5ibWxlWUhtUHduT0g5SHVXSzA0aXo0ZXZaV3dSCm5CQXZsNUJ1R1RNeTZJUzRJN0FNbkJGOFI5MU5qNkt4QW9JQkFCc2dCRW5Ec0dVNktVUDA0NmxCNDNlRUhBT1MKR3lSQnp6Nkp5VVNTQTZWUklBTUk2VE9WKzRZZElJUk1SSHRHNU1EdDAxY3hzRGN6Z3I1cDJEZXNBaFpXQzlnawpnWldoWW5pampKcnFUaE5WUFc4Vm9EZ21jdksxakw3YmwxcGlDa1B3L01LbmE4SU8rOUtBMER1bStDM1BlUTVWCkd5cHp6UFRJWmxKN1R0TkcwdTh6TzNycCsvV00rMHhodEtqVWR3WXJuNm03SVlHek9HTkliUklaRmtSRlNNYjcKU3JDR3JHWFkyWk9Qc2d6Q1YxcXFBTFZQR2tWMkRNb3AzMngrR3lKVmE5Q3V5Q2RtOHk4N0owdmpTOEh3OUZZMQo3QnhaTzJvNDAranhidzJwQXhoK1loN2EyQm8rcDNObDdRU21MQStMMVd4Zy9YNnZjOG5jY3I1bStOZz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "etcdVersion": {
                "value": "3.2.25"
            },
            "firstConsecutiveStaticIP": {
                "value": "10.240.255.5"
            },
            "fqdnEndpointSuffix": {
                "value": "cloudapp.azure.com"
            },
            "gchighthreshold": {
                "value": 85
            },
            "gclowthreshold": {
                "value": 80
            },
            "generatorCode": {
                "value": "aksengine"
            },
            "kubeClusterCidr": {
                "value": "10.244.0.0/16"
            },
            "kubeConfigCertificate": {
                "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRTjBxMGZ4SVRjU29BRlB6eWJvT3EvakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T1RBek1qY3hPVEV4TVRoYUZ3MDBPVEF6TVRreE9URXhNVGhhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEREVqNjVaOC9VWTVaWUNkNGZJSHFTczRsM21UMnUKMTdiVmJqVUJEMkg2c3VSa0l0RnBObFhIbFlHZ1ZjSzQ4WWVkUGZVZEpOcFV1WS9FTWtGTGl4KzFxSVhUNnNydgpnOHdubmFlbjZwOWZEd3gycnF1T21WZWQ0WFFqNzI5S3FvOHEwQ0Fkb0JuaHBINERrWjlWQnV1bko2TlZNK2cyCjg4Q2dWR2VtS1VlNmp1Z1RiS0Y2VlFHV3JMTDNzOGdrRDZ6VFJDUC8zVXg1LzJFNFVCS2g1NDdoemZEelpPc0QKM1JqRGlsV1JLU2crMkUxRkdLU0FwM2k2ZFcwc2ZVVE1PSzRMRHB0QUVlaHZkTThWcmVhVmw2Z0xhVFkvbUVDUwplbVBqMzhKd1Z0RWZnbk1ieG8wcytkSmpSSHhRUmhhb3RuZWRCOElHNzhoZEpEYlJMdjRWMWdidUxZcjlza3VmCkJIai9sVERnYUYzVC9SeVdzTVNRdUkrRWZXTi9PYmlabzM2WlllL1hYQWliZzV4TXdLQUdORml6Ry9SVDY2aTMKOEYwajNIYjJyYWtXcmNuQ2E5MFpOM3hNemZuQUdpSFpUVFg3TDl3c21WOEpZd3YrU0lndldNVk80K3hDRDNLaAo3YlZjYUlabk5sVmZONHFUVUpPZ1pPNmlWTXBzMUpBWHV0KzRYeklWTlVtaldjTWU2dWpJR3F0MUhpY0NkZmdCCmtPMGp5WjJkdG9NYUZvUmFsK2x0eWZSMWVkcjhmdWRoMjE5QU94VnpQTTYxeElBWEZiaUhXMmh1RUNDS1ZXZWgKUXJ6RWFueUxEelpBK1BiQm8vWW9qV1lEYmxUUGl3c0h5UE5FdTFLTDF0aDJmYldlNTY3OVZGUDJTOXYzYVdYRwozalZ2V3Rsdy9QN2RLd0lEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRnV1NnJUMUkKTkY4WjhyS1hvbjJZczAyaUJOVDE0UHYyVXJCOUNIUEF6QXJaN1g2UlZjRmJOR0pBRDB5enpIdDk1QVRQb2lQOAovVW84QXhTdlhYTjhQM2Q0ZDIrWmNvS2hCUUs1anAxL0ZuWnMwMHd1TTNqTWhHZ3JNUGR5RUoyRmtldnBleHVTCjJ5RmhJVnBWeFBIMVdDcXV0VDliNUhIazdiSjZ2Wlo5bWVGWWFYZXdsTklyaXhLNHQvOTJXV2xoME5BYjFvOTEKYzEycldMSUJXcU16S3JIdVM1RjlSYithdThCQmx1MHVIS3JXTVVFd0dheW55Q3QzODc5TWxXMVlMeXpDWWxFNwpkUTc1dlVaRnQrT0lKOWh6K1pLd1dST2llTkdDZzdtWVpiWDVTN1A2MVh3WXpaRlVQc2hQanF4UG8xVXRUN0lBCjQ2Q2JXM3laS00zY0I0YTdYM2lDd3grYUhIaWltblpUQldZYm00VlZHUWR1MjZHdkhhT1NxRHhlZVlVZ2hDNGoKdGkvMGYzdHlNdTArQ2NKS0czSTFybDk2VmJNcGpON0c3VjlvQmdneEFyYjB1V3NwNm9WTVN5d1Q5NSs4bHlQVwpkeU9pVFlxendTS3BoSmZ3Q2NEZzJuK2ludk5CSTlxZnRPV1N1RHhGVjVnUUhFMDFwdFQxWmN3SDVGM3VaYVp6CldzM1R3ZnhHaDNUYW9ORnRkUXV6dFk2N1dEMjFBL2F0VW5hbkh5VWNVM2RVbVhycG15NzdWRlltTDVSWHJCeSsKajFqZmYwdWFkOXB3VVdMVWFFR1hCZ3VoWVJVcE8zcXBiSTFudWhlV3hwaHdsU0hpZm8rYjFkNTJtVm5TajZLWQphblFiVDFwSXcvb0FaZXpRZjc4ZWhHSzV0M2dOT29vTmNiRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            },
            "kubeConfigPrivateKey": {
                "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBd3hJK3VXZlAxR09XV0FuZUh5QjZrck9KZDVrOXJ0ZTIxVzQxQVE5aCtyTGtaQ0xSCmFUWlZ4NVdCb0ZYQ3VQR0huVDMxSFNUYVZMbVB4REpCUzRzZnRhaUYwK3JLNzRQTUo1Mm5wK3FmWHc4TWRxNnIKanBsWG5lRjBJKzl2U3FxUEt0QWdIYUFaNGFSK0E1R2ZWUWJycHllalZUUG9OdlBBb0ZSbnBpbEh1bzdvRTJ5aAplbFVCbHF5eTk3UElKQStzMDBRai85MU1lZjloT0ZBU29lZU80YzN3ODJUckE5MFl3NHBWa1Nrb1B0aE5SUmlrCmdLZDR1blZ0TEgxRXpEaXVDdzZiUUJIb2IzVFBGYTNtbFplb0MyazJQNWhBa25wajQ5L0NjRmJSSDRKekc4YU4KTFBuU1kwUjhVRVlXcUxaM25RZkNCdS9JWFNRMjBTNytGZFlHN2kySy9iSkxud1I0LzVVdzRHaGQwLzBjbHJERQprTGlQaEgxamZ6bTRtYU4rbVdIdjExd0ltNE9jVE1DZ0JqUllzeHYwVSt1b3QvQmRJOXgyOXEycEZxM0p3bXZkCkdUZDhUTTM1d0JvaDJVMDEreS9jTEpsZkNXTUwva2lJTDFqRlR1UHNRZzl5b2UyMVhHaUdaelpWWHplS2sxQ1QKb0dUdW9sVEtiTlNRRjdyZnVGOHlGVFZKbzFuREh1cm95QnFyZFI0bkFuWDRBWkR0SThtZG5iYURHaGFFV3BmcApiY24wZFhuYS9IN25ZZHRmUURzVmN6ek90Y1NBRnhXNGgxdG9iaEFnaWxWbm9VSzh4R3A4aXc4MlFQajJ3YVAyCktJMW1BMjVVejRzTEI4anpSTHRTaTliWWRuMjFudWV1L1ZSVDlrdmI5MmxseHQ0MWIxclpjUHorM1NzQ0F3RUEKQVFLQ0FnQWFqYXcrSHJSNnE4ZTJXam1ETVMrZU1wUSsxSHhDQlprY3VuQzZvVFpzSXRmV0RhdEYwQ0NqRjJYYQp4bkhJTFJDUnhmSk1za3lLQmV4Yy81NUZ3ejFndy96Ym1QVmczeWIyS1k2OTI4RXY5bU55OEZub0FsV2I1eW1oCkRxR3VuMEwzeC9ibk1YajBieWk4SWFGM3VJWnhiWUxkUVVDVjRsNVJOTXdiSVRsaldycWFra24wMWdkdVZEblUKWUFPWmJRelFnVkVKTGoyUHljU1pIc1U2aHNPN1Z3WTZpMzAyUEcxM2lLZ1hKMndVQ2V1U3dVVDdRbEM3eU9wQQppUmpKVjluUkpYN2FuTlZ2L28yRjNQTXJYOFovTHlZMFIreGFSQkMrM3lHZm15SENVVWFML0Y0UlJqeHVTTTlICk9oTXhpZzBFTWg4bVJKT1lvaXBZRlRaL0VIQkcxSDBlRWZUckp2VG1MNjVYN3pXSWdMMUFLL0NyNlc0YXJRRUwKczJtWGNKQk9kMmd1QzNRT0NTdmpyQ0NvNTZpV2dlSzNvMExSNzJEZkZ4K1F2WC80YVg5SGd1TkU4WDNZNlRjQwpmUmNGYnJSdWR5czhpZ0cxTXdZV0pnU3pCWGZ2NTdDYW1WZTU1Z3ZxWTVRZ1VDSUUrSWJOQjNaK1I2bGZpc2VUCm5nOUtjVEFOKy9lWGllUm5reEgyQ2pzUWZPczdSejl2VCtLdmRQUzZiZDFxT1c0dkJ4cGs2Vlh5V0xITVFGd3QKNWVNTWtBRFJGbmJYV2xmSzl6MlpKL25ydVJJUm1CL0lzMzFCMFZJMmZUb2pBYmlOVENMYWR5Y2NCSDFMOTlqWgpGRjV5YVBmZk43MzNHQ3FOb0F1Z1FBb3doOC94ZEVMR1FIWVNLdW9PREcydlcrRTRNUUtDQVFFQStFZDZpUWVaCk1TM2E5cEY4SnJOeVlhQmo5bUtKUnF3dmpsM3lPZmgvWk4yZGduaDF1YkNROFU4aElTNUE4SU1JdGpBT2NJYlYKUStkZW1CRDJmdlR6OEVXNVdSMUNkRGNIV2E1VFRKbjJPSVZPRFBvZVV6alIyT0JDck92QVhhWGhiS3FzdDI2dgp1bUc1SVRxVXMxdWNpdHZVWkVoeDBCNnlld3psMHgyR3JFUTdmWEJ0TlE5UjlMcG41bGN0VWFmbzJrNmtyaWV6CjUwV3d0UzJkL1RERENPSS82VnNsZ1NhU2tCOGJaTU5DQWlBeWxuQUdEL2R0czJrYVI2Y3dzVytKT3l2VEdkZi8Kb2VwT2ZZOEE4aGhFNm9sYVQ4UkMrcUprTUNyYy9JRFczOXFqOW1GakRTSmdCa0xoY0lrZm5nZS9BUW5paUZnTQptN0oyaVJTMjd6SEZJd0tDQVFFQXlTTXZLamFJU0ZEU0lUUldMZkFRY2tGdVBTQy95WWF5YkZpNG9neHBDbEtkCkF0U1MrVU1pNWtUaHMxbWkwZnRzMitjdUNXVkptZ3JrV0hBNGRENUE4YkhPVEdDK2ZoYjQrZ3p1MHJYUW03WFcKTmxHcUI5OEQ4NUJ6dUhTTFlyQmtDUk9MMFhMdnhKQnV6ck1MejQ1OWxqaE0wWjZxdnZMTUQ5UmJ0cHd3eTdzTQpnYUxMRGMyRVNkQ0dPb1BQVE11a1RIMnkwOGUyblpGUVNHazVXY0JLaitjSVM1WVJkTHZ6NVkrQjRzSTZjdGpPClByQ3VRTTgxZjlBUlJ4UDFZalZzajF0QXRYNDBNVWRSUzkyNG14dFF1RERIbXR1RUV4MGtONjhMRHFkaHJyRHEKQTIvNUhwcnJGdGxnM3plRzBjM05EWFlZV0RoaGgvcWpBT1UrN2pDY1dRS0NBUUJ6TjFDQStMcTVuTXNKTTNpRwp5UzJpYW5rWkpKOEo0ZXZyeUdNWlRkMW9wSU5zd1pQNFNSenFMc3QwQjIveGJRMkU1b1k4NkFWZURxZlNMOFVFCkk0NTBpUmE3YVIybXFzYkpjbUdMb2NNbWRZNUQ3V3BYT24zL2hBck5EbFpsM3czZWpORzhDaXlZZExNaDNYcVcKUlVRL0dFYlhCdHR5Tmx5alI5ZjdnYTgya0M5L1JjWVlJblRvK2Z3dlkzTlBlbmxQbmNGRVpINVRLLzhXQlFaVgpNZVRBWWFaQkY2QXU4QVNCeHozQ0krNms1K1l4OCtpTVRrbGxRYmdGV212NVc0WTJwRjdCbG9BMTFuTDRSMzJyCjIyRlg2Y2UwVHFLNmh0T3htcUtVdHdHQVBvbHFVOFZRbWd3dnU2ZTh2cFdpazN1cThyaGloMkhLZXlZUTlVRHoKZllnN0FvSUJBUUMyUEN5VmdJY0Zqa1IwVlNqbndpUUVnUWZTVm9PdG9WNnpEOGRvK3ZtSW9zVWpOVnBjZ05sego3R0RaMEpMVzBZZ1Z6V1ZHbWdDUGt1TEV4aGhBS2M5SnJLR1BUZkFKNmVKM0c1U2VVS0RMRTNzY0IrMlg2QlY2CmJoeUt1UDA0MHp3dmhRZ2ZJcFhlY0VZVS9OL3NrOXR4YVYwZ1p6T29nZThsUUhCQUNVK2twcnAwRWYwTGFuTTcKTmJVSCt6aXRDYXk0cVFLSEl1RnY3YUxobUlTZnJydGZtaUZINnBXeVFFQ0FjdjlwWmpUeXJVQmdTRS80NUVSQwpvMCtrS0k4aEJlcHdFR3VXaE52ZzhnN1VQL1RzZzFrbEtQMFFiMmRBc2h5SVh3NFRucy9BS1FZOVN3eFpFRitECmVqeHN3YkJqRXFXQVZzbEQxUUY0NURzZnFwVFQxak14QW9JQkFEcWkvUUhlTHhqNi9HVnJ3SUJJWWYzTWxJTzMKbWs1NmtnMFY2d2MxMXBudFRTRE1QY2tzakx2QjFiVUlwS04wSm03NThaN3lYNTk0RjNlY3psOHRSNkYrL2QrNwp0NkZkcDdkbTBWZTVqVW9OR1pGdFFERWNGQ0IrR1NZSVFDd1NkbjdCTjlrWWlRYmxYOEhiQUNEdU9nR2tuSFNJCnYvYjVxR2NhQUZoVm9RUnYzeStnb1B0OVlybnlKZWpySWs0NU9pbDBKU0xPVzE5bDBvbDdwQ3lsNFhkMnZ3NVcKdGZFdTc4dTRSS2dKakVYY3RCVjlpeEdZZVpNL0FhdHZ6VTJGRXh5MjY0UVVhbVRMVUVvdHgrM1RFVGV4SGgyVgpCd0c0N0JjaHlLbk9BT2Rpd0k0QUhtdVhIL2o0Q1lqZjQwNW1sQzlhVHdXQWNLTzZudmkzUDhnKzhHaz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "kubeDNSServiceIP": {
                "value": "10.0.0.10"
            },
            "kubernetesACIConnectorEnabled": {
                "value": false
            },
            "kubernetesAddonManagerSpec": {
                "value": "k8s.gcr.io/kube-addon-manager-amd64:v8.6"
            },
            "kubernetesClusterAutoscalerEnabled": {
                "value": false
            },
            "kubernetesDNSMasqSpec": {
                "value": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.15.0"
            },
            "kubernetesDNSSidecarSpec": {
                "value": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10"
            },
            "kubernetesHyperkubeSpec": {
                "value": "k8s.gcr.io/hyperkube-amd64:v1.11.9"
            },
            "kubernetesKubeDNSSpec": {
                "value": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.15.0"
            },
            "kubernetesKubeletClusterDomain": {
                "value": "cluster.local"
            },
            "kubernetesPodInfraContainerSpec": {
                "value": "k8s.gcr.io/pause-amd64:3.1"
            },
            "linuxAdminUsername": {
                "value": "azureuser"
            },
            "linuxpoolCount": {
                "value": 1
            },
            "linuxpoolSubnet": {
                "value": "10.240.0.0/16"
            },
            "linuxpoolVMSize": {
                "value": "Standard_D2_v2"
            },
            "linuxpoolosImageOffer": {
                "value": "UbuntuServer"
            },
            "linuxpoolosImagePublisher": {
                "value": "Canonical"
            },
            "linuxpoolosImageSKU": {
                "value": "16.04-LTS"
            },
            "linuxpoolosImageVersion": {
                "value": "latest"
            },
            "location": {
                "value": "westus2"
            },
            "masterEndpointDNSNamePrefix": {
                "value": "honcaok111004"
            },
            "masterSubnet": {
                "value": "10.240.0.0/16"
            },
            "masterVMSize": {
                "value": "Standard_D2_v2"
            },
            "mobyVersion": {
                "value": "3.0.6"
            },
            "networkPlugin": {
                "value": "flannel"
            },
            "networkPolicy": {
                "value": ""
            },
            "orchestratorName": {
                "value": "k8s"
            },
            "osImageOffer": {
                "value": "UbuntuServer"
            },
            "osImagePublisher": {
                "value": "Canonical"
            },
            "osImageSKU": {
                "value": "16.04-LTS"
            },
            "osImageVersion": {
                "value": "latest"
            },
            "servicePrincipalClientId": {
                "value": "fakeClientId"
            },
            "servicePrincipalClientSecret": {
                "value": "fakeClientSecret"
            },
            "sshRSAPublicKey": {
                "value": "ssh-rsa fake public key"
            },
            "targetEnvironment": {
                "value": "AzureStackCloud"
            },
            "vnetCniLinuxPluginsURL": {
                "value": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.17.tgz"
            },
            "vnetCniWindowsPluginsURL": {
                "value": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.17.zip"
            }
        },
        "mode": "Incremental"
    }
}

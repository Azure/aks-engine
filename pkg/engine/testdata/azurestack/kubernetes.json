{
    "apiVersion": "vlabs",
    "location": "local",
    "properties": {
        "orchestratorProfile": {
            "orchestratorType": "Kubernetes",
            "orchestratorRelease": "1.11",
            "kubernetesConfig": {
                "kubernetesImageBase": "k8s.gcr.io/",
                "customHyperkubeImage": "msazurestackqa/hyperkube-amd64:v1.11.6",
                "useInstanceMetadata": false,
                "networkPolicy": "none"
            }
        },
        "customCloudProfile": {
            "identitySystem": "azure_ad",
            "authenticationMethod": "client_secret",
            "environment":{
            "name": "AzureStackCloud",
            "managementPortalURL": "",
            "publishSettingsURL": "",
            "serviceManagementEndpoint": "https://management.azurestackci15.onmicrosoft.com/36f71706-54df-4305-9847-5b038a4cf189",
            "resourceManagerEndpoint": "https://management.local.azurestack.external/",
            "activeDirectoryEndpoint": "https://login.windows.net/",
            "galleryEndpoint": "https://portal.local.azurestack.external:30015/",
            "keyVaultEndpoint": "",
            "graphEndpoint": "https://graph.windows.net/",
            "storageEndpointSuffix": "local.azurestack.external",
            "sqlDatabaseDNSSuffix": "",
            "trafficManagerDNSSuffix": "",
            "keyVaultDNSSuffix": "vault.local.azurestack.external",
            "serviceBusEndpointSuffix": "",
            "serviceManagementVMDNSSuffix": "cloudapp.net",
            "resourceManagerVMDNSSuffix": "cloudapp.azurestack.external",
            "containerRegistryDNSSuffix": ""
            },
            "azureEnvironmentSpecConfig": {
                "cloudName": "AzureStackCloud",
                "dockerSpecConfig": {
                  "dockerEngineRepo": "https://aptdocker.azureedge.net/repo1",
                  "dockerComposeDownloadURL": "https://github.com/docker/compose/releases/download"
                },
                "kubernetesSpecConfig": {
                  "kubernetesImageBase": "k8s.gcr.io/",
                  "tillerImageBase": "gcr.io/kubernetes-helm/",
                  "aciConnectorImageBase": "microsoft/",
                  "nvidiaImageBase": "nvidia/",
                  "azureCNIImageBase": "containernetworking/",
                  "etcdDownloadURLBase": "https://acs-mirror.azureedge.net/github-coreos",
                  "kubeBinariesSASURLBase": "https://acs-mirror.azureedge.net/wink8s/",
                  "windowsTelemetryGUID": "fb801154-36b9-41bc-89c2-f4d4f05472b0",
                  "cniPluginsDownloadURL": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.1.tgz",
                  "vnetCNILinuxPluginsDownloadURL": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.15.tgz",
                  "vnetCNIWindowsPluginsDownloadURL": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.15.zip",
                  "containerdDownloadURLBase": "https://storage.googleapis.com/cri-containerd-release/"
                },
                "endpointConfig": {
                  "resourceManagerVMDNSSuffix": "cloudapp.azurestack.external"
                },
                "osImageConfig": {
                  "aks": {
                    "imageOffer": "aks",
                    "imageSku": "aks-ubuntu-1604-201812",
                    "imagePublisher": "microsoft-aks",
                    "imageVersion": "2018.12.19"
                  },
                  "aks-docker-engine": {
                    "imageOffer": "aks",
                    "imageSku": "aks-ubuntu-1604-docker-engine",
                    "imagePublisher": "microsoft-aks",
                    "imageVersion": "2018.12.19"
                  },
                  "test": {
                    "imageOffer": "imageOffertest",
                    "imageSku": "imageSkutest",
                    "imagePublisher": "imagePublishertest",
                    "imageVersion": "imageVersiontest"
                  },
                  "rhel": {
                    "imageOffer": "RHEL",
                    "imageSku": "7.3",
                    "imagePublisher": "RedHat",
                    "imageVersion": "latest"
                  },
                  "ubuntu": {
                    "imageOffer": "UbuntuServer",
                    "imageSku": "16.04-LTS",
                    "imagePublisher": "Canonical",
                    "imageVersion": "latest"
                  }
                }
              }
        },
        "masterProfile": {
            "dnsPrefix": "k111007",
            "distro": "ubuntu",
            "osDiskSizeGB": 200,
            "count": 3,
            "vmSize": "Standard_D2_v2"
        },
        "agentPoolProfiles": [
            {
                "name": "linuxpool",
                "osDiskSizeGB": 200,
                "count": 3,
                "vmSize": "Standard_D2_v2",
                "distro": "ubuntu",
                "availabilityProfile": "AvailabilitySet",
                "AcceleratedNetworkingEnabled": false
            }
        ],
        "linuxProfile": {
            "adminUsername": "azureuser",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "ssh-rsa publickey azure@linux"
                    }
                ]
            }
        },
        "servicePrincipalProfile": {
            "clientId": "ServicePrincipalClientID",
            "secret": "myServicePrincipalClientSecret"
        },
        "certificateProfile": {
          "caCertificate": "caCertificate",
          "caPrivateKey": "caPrivateKey",
          "apiServerCertificate": "/subscriptions/my-sub/resourceGroups/my-rg/providers/Microsoft.KeyVault/vaults/my-kv/secrets/my-secret1/ver1",
          "apiServerPrivateKey": "apiServerPrivateKey",
          "clientCertificate": "clientCertificate",
          "clientPrivateKey": "clientPrivateKey",
          "kubeConfigCertificate": "kubeConfigCertificate",
          "kubeConfigPrivateKey": "kubeConfigPrivateKey",
          "etcdClientCertificate": "etcdClientCertificate",
          "etcdClientPrivateKey": "etcdClientPrivateKey",
          "etcdServerCertificate": "etcdServerCertificate",
          "etcdServerPrivateKey": "etcdServerPrivateKey",
          "etcdPeerCertificates": [
            "etcdPeerCertificate0"
          ],
          "etcdPeerPrivateKeys": [
            "etcdPeerPrivateKey0"
          ]
        }
    }
}
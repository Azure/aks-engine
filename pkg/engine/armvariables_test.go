// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

package engine

import (
	"encoding/json"
	"fmt"
	"testing"

	"github.com/google/go-cmp/cmp"

	"github.com/Azure/aks-engine/pkg/api"
)

func TestSizeMap(t *testing.T) {
	sizeMap := getSizeMap()
	b, _ := json.MarshalIndent(sizeMap["vmSizesMap"], "", "   ")
	fmt.Println(string(b))
}

func TestK8sVars(t *testing.T) {
	cs := &api.ContainerService{
		Properties: &api.Properties{
			ServicePrincipalProfile: &api.ServicePrincipalProfile{
				ClientID: "barClientID",
				Secret:   "bazSecret",
			},
			MasterProfile: &api.MasterProfile{
				Count:     1,
				DNSPrefix: "blueorange",
				VMSize:    "Standard_D2_v2",
			},
			OrchestratorProfile: &api.OrchestratorProfile{
				OrchestratorType: api.Kubernetes,
			},
			LinuxProfile: &api.LinuxProfile{},
			AgentPoolProfiles: []*api.AgentPoolProfile{
				{
					Name:   "agentpool1",
					VMSize: "Standard_D2_v2",
					Count:  2,
				},
			},
		},
	}

	cs.SetPropertiesDefaults(false, false)

	varMap := GetKubernetesVariables(cs)
	expectedMap := map[string]interface{}{
		"agentpool1Count":                           "[parameters('agentpool1Count')]",
		"agentpool1Index":                           0,
		"agentpool1SubnetName":                      "[variables('subnetName')]",
		"agentpool1VMNamePrefix":                    "k8s-agentpool1-18280257-vmss",
		"agentpool1VMSize":                          "[parameters('agentpool1VMSize')]",
		"agentpool1VnetSubnetID":                    "[variables('vnetSubnetID')]",
		"agentpool1osImageName":                     "[parameters('agentpool1osImageName')]",
		"agentpool1osImageOffer":                    "[parameters('agentpool1osImageOffer')]",
		"agentpool1osImagePublisher":                "[parameters('agentpool1osImagePublisher')]",
		"agentpool1osImageResourceGroup":            "[parameters('agentpool1osImageResourceGroup')]",
		"agentpool1osImageSKU":                      "[parameters('agentpool1osImageSKU')]",
		"agentpool1osImageVersion":                  "[parameters('agentpool1osImageVersion')]",
		"allocateNodeCidrs":                         true,
		"apiVersionAuthorizationSystem":             "2018-01-01-preview",
		"apiVersionAuthorizationUser":               "2018-09-01-preview",
		"apiVersionCompute":                         "2018-06-01",
		"apiVersionKeyVault":                        "2018-02-14",
		"apiVersionManagedIdentity":                 "2015-08-31-preview",
		"apiVersionNetwork":                         "2018-08-01",
		"apiVersionStorage":                         "2018-07-01",
		"clusterKeyVaultName":                       "",
		"contributorRoleDefinitionId":               "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
		"customSearchDomainsScript":                 "H4sIAAAAAAAA/5RQwY7TQAy95ytMOU+nW6nigiKQOCOEtBcuWXfiNCYz48h2KFntx6Mq5bBiL1xm9J6en5/f+3fxzDWe0cbGyCH8bkwWTQRRZo/4vCjFJNWRK6nFWeUXG0vtNtnexqaxpRegNArsAPpqwQg1jfBx+79IQa5fsVC7g7aFSJ5iJb+KTpGrkw6YyPZ9PB1CyrL0gSv7Pg2XxlZzKslzp2SO6nA8wAkeDvAX3424XporsneDaIezd1nSZI2S65pK3/HQDch5UboNn+DheACcPVxuR6/A1RxzBiXMpQcz257gItnAsJwxJClF6gZeU/Pqo9Tj/sOdznw2mDFNeKGJ/a1kW1+vKvp+W/4Nza6ifbuDly0O/BSuEB7hX/Gjkbafnt7wutf9Aq4QMTxHiJ/Dj/gE/yP+EwAA//9I8xcdHgIAAA==",
		"etcdCaFilepath":                            "/etc/kubernetes/certs/ca.crt",
		"etcdClientCertFilepath":                    "/etc/kubernetes/certs/etcdclient.crt",
		"etcdClientKeyFilepath":                     "/etc/kubernetes/certs/etcdclient.key",
		"etcdPeerCertFilepath":                      []string{"/etc/kubernetes/certs/etcdpeer0.crt", "/etc/kubernetes/certs/etcdpeer1.crt", "/etc/kubernetes/certs/etcdpeer2.crt", "/etc/kubernetes/certs/etcdpeer3.crt", "/etc/kubernetes/certs/etcdpeer4.crt"},
		"etcdPeerCertificates":                      []string{"[parameters('etcdPeerCertificate0')]"},
		"etcdPeerKeyFilepath":                       []string{"/etc/kubernetes/certs/etcdpeer0.key", "/etc/kubernetes/certs/etcdpeer1.key", "/etc/kubernetes/certs/etcdpeer2.key", "/etc/kubernetes/certs/etcdpeer3.key", "/etc/kubernetes/certs/etcdpeer4.key"},
		"etcdPeerPrivateKeys":                       []string{"[parameters('etcdPeerPrivateKey0')]"},
		"etcdServerCertFilepath":                    "/etc/kubernetes/certs/etcdserver.crt",
		"etcdServerKeyFilepath":                     "/etc/kubernetes/certs/etcdserver.key",
		"excludeMasterFromStandardLB":               "false",
		"generateProxyCertsScript":                  "H4sIAAAAAAAA/7RX627bOBP9HT3FVDVyAT5FtvP15q6yMBQvGiRNsrILbNEtBFoa21zLokLSSd3W774gZd0cyel2s/kVkzNnzhwOh6Pnz+wxje0xETPDEGzJAwSbJdImX5cc7YDFktAYubATzu6ooCz2U7Nj5XHjXf/x0Xf7/sXgo2O2vpV/9xxbLhLl92VlBRHFWFoBOZ7jam1mjt6o5OWNGlwCLguXy/PB1WgrXr5WA1ANmFq6Q++Btzv06rwDwR94V1jna7Xemvlg5J753uD3D4Ph6N2gfzbwcre+Qtq133NSxAC5FDbH2yUKOUMSIi8UsiY0wizQhtcgZbm1VIWrCo1c1gBtlK6u7ICZ4ypDuXg99POKcL2R/9v55eCmP3qnABs3e46NMrDnyzHyGCUKuxIlK4fC/2LwsQG5vLMTdlMkJU7NbH+U6oanUYg/9C+v3Qv/qv9+4JgLIiRyX5v6ys2PWDA3S+aptYrlmLq0Ao5EojY+ntBJZBoGncCnT2B9BbP1zb0evr8e+h+887UJnz+/BTnD2ABQR+eOLv3B1dnN9fnVaJidZ2Wx58ykTETPtjvdV8ft4/Zxp9c9efVmbZYg3P6GTwGwWWqSIj+vFESZ3/S9/nvHtKyAKBvnAdbaNDAS+BPUKyJU6Zcim8aEGhlKViNl5GytKSmUQVjpLnkCg011VBTKFn8AblMzmasmPNRascWCxKEl6QLZUjonbQGWta1fFmkNlrqIzsOU1rC5y5kcyhTjMGE0lsKpUVedxpeEcQle/+pMJ9c6XMwlLpIjw2AJxkJEMMWYCwIWW0polZ8B6Lb//zo343gLVoz3YH150X4DVkhWAjqvuy9B8d3yrIB5I7DEcvwXHNjulaOvjas1c/sHO1nkj0MTk3LgwrgGwx16ZQ5kOuU4JZJx+9oRKyFx0UtvtSgYpWnqYDrXVydtsGhch+z2K8m6/RpFBEpfIKckgna3lqM3Mox7Tjd9QviS+SEV88Mj+GYAFFeqf3PunIAuPRlBce5pya1hihJau14msKyE01hadyRaosXiaAWn0Grs6z8ZPe/kj8Yrd/t/FUxdo8ez207tOXi4YHcI9zMqUSQkQEhIGNJ4CkTCGKc0jtUPNoGOkBDRGLWjwBAsCgcdYf8pbPtgh4ZNBHbKEMwWLISX7Xaj1bq2ZPx7Kmc+R8lXefVMGAcKqn4PBd5CBzrdo7cQMr2p/mpw8r1P0PoVLLyFNsBn2N+HMUcyh+/fQUSICbzQliGL0VgbVPjqxPwZkkjOVodHTQTa7SqDHz31rOlBGuFJWILxHNQzDmoCAskAYzKOEExdPx1I24NqU8iJRAFaKNPgC7AmUAyVldd/bRqL+YRO2A4DA4OZ2j8MicQjIFK1Z6mqTTIgwe2SctwwYxx099SxFZXi+XpMMg1Q5lCaaNYAp80EYX+LoYbaEAtNw0ho6LSeqXmGIwn1tpxRAb80Y+YDTjoEmSY4jgrwX3a4o2Kygn/UY5LlY8FMaB0GRELpe2h9ZMIp2CHe2fEyiqB7ut95a+zp4WhvLxV0wpZxCOn4AJvvA0g/ECAg/4OYSdCDo249MZp7BsCEPoVsu1rzEwhVwD+QJn+maxWCXCIoa5RW/RxXNaI8sSYNL8iTiaLxG1RpqhuoLZyiFTSqMqHGnEYRtBIaGveEyvS/x3rW1oXPug2QOARB7tAOZhjMddIQsEUSodSdYPdL9HcAAAD//z5tw7exEAAA",
		"healthMonitorScript":                       "H4sIAAAAAAAA/6RVbW/bNhf9rl9xrBgPnBayIgPpA6RTgC4z1qCLU8RJ9yENDJq6sghLpEBSaTLD/32QRL8odgcM8xdL4n075557edILK6PDuZAhyWfMmck87wT3mTAwXIvSQmmxEJJZSsAsMmtLcxGGC2Gzaj7kqgiX1Zy0JEtm/3Geq3lYMGNJhzyvmv8Fp3DBRZgRy20WFEoKq/TQZN4JmEyQMYM5kUShEpEKSpAqDbY0AcmFkDT0PEMWgYJUlTRkN6+lKCllIvc8rqRlQpKe6UpaUdDMZRFyMTjFygNyxVmOQKNgLzNmLRWlNfH59sR9iqN9W64Ft3ns91dfHn4dzz7f3ozXDW3tgd+xPahBsoJq36vbyf2n68n4bnb3MLm/vhnPJp9uxhdBoviS9HoXpWWIZ8SXM66Kgskk9lsrlKa2EykeH3Es5i4cejGcl4+np4+wGUkPwPH4/VULZo1SJU2SVHgeUIPIUQNRlcWHM/RXR/zXuESY0HMoqzz/iEQ1iUSKwWBDKeK4QzpOT/dqAohnCv4Ne9k69Ff79mtoYjyjpIevWnGiRMgFrILr8Y55OOYdUCHJmKHv0sw1sWXznApvl7e/SSqksGInBHz3jwP+7vdwr1/rGtiCCQkhsQ1iiCuZmOHQpTU5UQm/PxhghHfvNsHfv8fpaW2RKEke8CMTOcHqivYp7P1b9g9IvTpgpr86rtM16kmipLeha6O04+Z+3dTjImt/5VLkOYLp9e8P07sIrWXiDFwDAPNqLBXc5mjNg/ov+JGpuKiZ9X9a7abKlt9odNZ2NDfUOfD7q+kf4/HX2XR8dTv5ber8mvwN9WvPq7dXTvZwY7QU/smEbRbSCIWQlSXTvDmvWoZzQlpJboWSrFkJ+0V11o5TRxztTlRly8rGvr9VwSMiPHVl4Iz6A17pHEFR49qLt/YRpAgMgmmzqS/CMBr9f3g2PBtGF9HZ6Pzc7d6/MLr8X3Rk+vptho52vjiEwqCSrf/rVh1vGufY6HD/4T/0ZCO+Ex+BpJqQncLa6h4MW9AFDu4U/LJVTOAUE7rqLutE9CIsIq9ecduVHvvNddg0pN7ufns0nnyL/ZAsDxNKWZXbJlBA8tl3BSIgbO6G8eTbujMJRlWavzlv8nbQ11rgqiiVJGnjfuS18KaWaYvdxeqAYifSRoX1fDjftb+jbf9rM6gHnHQq/afb06P8p1Edr51Yh9PkOQW0wD4fxbGN/DaNMJDKwlRlqbRt1lMqvL8DAAD//2MFqDLACAAA",
		"kubeconfigServer":                          "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', parameters('fqdnEndpointSuffix'))]",
		"kubernetesAPIServerIP":                     "[parameters('firstConsecutiveStaticIP')]",
		"labelResourceGroup":                        "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
		"loadBalancerSku":                           "Basic",
		"location":                                  "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
		"locations":                                 []string{"[resourceGroup().location]", "[parameters('location')]"},
		"masterAvailabilitySet":                     "[concat('master-availabilityset-', parameters('nameSuffix'))]",
		"masterCount":                               1,
		"masterEtcdClientPort":                      2379,
		"masterEtcdClientURLs":                      []string{"[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"},
		"masterEtcdClusterStates":                   []string{"[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]", "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]", "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"},
		"masterEtcdPeerURLs":                        []string{"[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]", "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"},
		"masterEtcdServerPort":                      2380,
		"masterFirstAddrComment":                    "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
		"masterFirstAddrOctet4":                     "[variables('masterFirstAddrOctets')[3]]",
		"masterFirstAddrOctets":                     "[split(parameters('firstConsecutiveStaticIP'),'.')]",
		"masterFirstAddrPrefix":                     "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
		"masterFqdnPrefix":                          "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
		"masterLbBackendPoolName":                   "[concat(parameters('orchestratorName'), '-master-pool-', parameters('nameSuffix'))]",
		"masterLbID":                                "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
		"masterLbIPConfigID":                        "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
		"masterLbIPConfigName":                      "[concat(parameters('orchestratorName'), '-master-lbFrontEnd-', parameters('nameSuffix'))]",
		"masterLbName":                              "[concat(parameters('orchestratorName'), '-master-lb-', parameters('nameSuffix'))]",
		"masterOffset":                              "[parameters('masterOffset')]",
		"masterPrivateIpAddrs":                      []string{"[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]", "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]", "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]", "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]", "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"},
		"masterPublicIPAddressName":                 "[concat(parameters('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', parameters('nameSuffix'))]",
		"masterVMNamePrefix":                        "k8s-master-18280257-",
		"masterVMNames":                             []string{"[concat(variables('masterVMNamePrefix'), '0')]", "[concat(variables('masterVMNamePrefix'), '1')]", "[concat(variables('masterVMNamePrefix'), '2')]", "[concat(variables('masterVMNamePrefix'), '3')]", "[concat(variables('masterVMNamePrefix'), '4')]"},
		"maxVMsPerPool":                             100,
		"maximumLoadBalancerRuleCount":              250,
		"mountetcdScript":                           "H4sIAAAAAAAA/3RT0W4TMRB891cMad7oxbmCKrVSiioBUgRNqhKeEIp8572ziWOHs52kBf4d2UmaIOBeLO94Z2d3585e8EpbXgmv2BnuXLRB2xbaQzpLUNQRtPWBhIRrQKGWqKgW0VO6V7GFCmHlrzmvYusHRkRbq5WQA0uB18ZFWWirA39ZxZaXl1cXw6tX7AxTWxOCosygPRq9JXmOjlZGHBAyboONDipfMxcSF2olbEv+8DpFn1W0OqhYDWq35LdPsSMuFr4g22pLfBWN4ZeX5YB5Cii27O3404cRl7TmXtbs/vZhNp6Np5NR/0dCfpXsbvp5MrufjiezEV+Ljhtd8TQDqf2CRUlrIZfwFIIhtlxI3aFYoX/MYss0UfxE29GfgG7wBf03KOg7hvjKgiLLAIBq5dBLBdJchOlIyEdkHpK93ZOtDhiyRrNM2zt0UPaQ1PHGB1EdK1j6V4X+c7vYfSfq9hERg0unpEZEE/y5dY3QZo8O9+dFDzc3p4UbzYzHkf//SrhP5vNt7rYoLG1Qop9mfwIvF40f0Da8PqFE8TF7cb7LfI/iHYx4epzrICpD82STUXmeQ99c7Kww+1hSt1vK6TbyT1Art7EoHjLzdbb630v/HQAA///IpMlTMQMAAA==",
		"nsgID":                                     "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
		"nsgName":                                   "[concat(variables('masterVMNamePrefix'), 'nsg')]",
		"orchestratorNameVersionTag":                "Kubernetes:1.10.13",
		"primaryAvailabilitySetName":                "",
		"primaryScaleSetName":                       "[concat(parameters('orchestratorName'), '-agentpool1-',parameters('nameSuffix'), '-vmss')]",
		"provisionConfigs":                          "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",
		"provisionInstalls":                         "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",
		"provisionScript":                           "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",
		"provisionScriptParametersCommon":           "[concat('ADMINUSER=',parameters('linuxAdminUsername'),' ETCD_DOWNLOAD_URL=',parameters('etcdDownloadURLBase'),' ETCD_VERSION=',parameters('etcdVersion'),' CONTAINERD_VERSION=',parameters('containerdVersion'),' MOBY_VERSION=',parameters('mobyVersion'),' DOCKER_ENGINE_REPO=',parameters('dockerEngineDownloadRepo'),' TENANT_ID=',variables('tenantID'),' KUBERNETES_VERSION=1.10.13 HYPERKUBE_URL=',parameters('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' VM_TYPE=',variables('vmType'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' PRIMARY_SCALE_SET=',variables('primaryScaleSetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' TARGET_ENVIRONMENT=',parameters('targetEnvironment'),' NETWORK_PLUGIN=',parameters('networkPlugin'),' NETWORK_POLICY=',parameters('networkPolicy'),' VNET_CNI_PLUGINS_URL=',parameters('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',parameters('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',toLower(string(parameters('cloudproviderConfig').cloudProviderBackoff)),' CLOUDPROVIDER_BACKOFF_RETRIES=',parameters('cloudproviderConfig').cloudProviderBackoffRetries,' CLOUDPROVIDER_BACKOFF_EXPONENT=',parameters('cloudproviderConfig').cloudProviderBackoffExponent,' CLOUDPROVIDER_BACKOFF_DURATION=',parameters('cloudproviderConfig').cloudProviderBackoffDuration,' CLOUDPROVIDER_BACKOFF_JITTER=',parameters('cloudproviderConfig').cloudProviderBackoffJitter,' CLOUDPROVIDER_RATELIMIT=',toLower(string(parameters('cloudproviderConfig').cloudProviderRatelimit)),' CLOUDPROVIDER_RATELIMIT_QPS=',parameters('cloudproviderConfig').cloudProviderRatelimitQPS,' CLOUDPROVIDER_RATELIMIT_BUCKET=',parameters('cloudproviderConfig').cloudProviderRatelimitBucket,' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USER_ASSIGNED_IDENTITY_ID=',variables('userAssignedClientID'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' LOAD_BALANCER_SKU=',variables('loadBalancerSku'),' EXCLUDE_MASTER_FROM_STANDARD_LB=',variables('excludeMasterFromStandardLB'),' MAXIMUM_LOADBALANCER_RULE_COUNT=',variables('maximumLoadBalancerRuleCount'),' CONTAINER_RUNTIME=',parameters('containerRuntime'),' CONTAINERD_DOWNLOAD_URL_BASE=',parameters('containerdDownloadURLBase'),' POD_INFRA_CONTAINER_SPEC=',parameters('kubernetesPodInfraContainerSpec'),' KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' IS_HOSTED_MASTER=false',' PRIVATE_AZURE_REGISTRY_SERVER=',parameters('privateAzureRegistryServer'))]",
		"provisionScriptParametersMaster":           "[concat('COSMOS_URI= MASTER_VM_NAME=',variables('masterVMNames')[variables('masterOffset')],' ETCD_PEER_URL=',variables('masterEtcdPeerURLs')[variables('masterOffset')],' ETCD_CLIENT_URL=',variables('masterEtcdClientURLs')[variables('masterOffset')],' MASTER_NODE=true NO_OUTBOUND=false CLUSTER_AUTOSCALER_ADDON=',parameters('kubernetesClusterAutoscalerEnabled'),' ACI_CONNECTOR_ADDON=',parameters('kubernetesACIConnectorEnabled'),' APISERVER_PRIVATE_KEY=',parameters('apiServerPrivateKey'),' CA_CERTIFICATE=',parameters('caCertificate'),' CA_PRIVATE_KEY=',parameters('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',parameters('kubeConfigCertificate'),' KUBECONFIG_KEY=',parameters('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',parameters('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',parameters('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',parameters('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',parameters('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ENABLE_AGGREGATED_APIS=',string(parameters('enableAggregatedAPIs')),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
		"provisionSource":                           "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",
		"readerRoleDefinitionId":                    "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
		"resourceGroup":                             "[resourceGroup().name]",
		"routeTableID":                              "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
		"routeTableName":                            "[concat(variables('masterVMNamePrefix'),'routetable')]",
		"scope":                                     "[resourceGroup().id]",
		"servicePrincipalClientId":                  "[parameters('servicePrincipalClientId')]",
		"servicePrincipalClientSecret":              "[parameters('servicePrincipalClientSecret')]",
		"singleQuote":                               "'",
		"sshKeyPath":                                "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
		"sshNatPorts":                               []int{22, 2201, 2202, 2203, 2204},
		"sshdConfig":                                "H4sIAAAAAAAA/4xWW3PbOA9956/AVA9pv/G9Xzptnup1LvXETjxxMtu3DEXBEjcUqSEou9qH/vYdUL4kqbfZySQjEeDBAXAAJYE/Cxmgcj5QB6YLAmkzqLwLTjlDsEEwmgJaWDkvFs4HGI1EAg+EEAokBFcF7SxBcOCRgtcqwKbQqgBtA/qVVEj9AyBRkcFGGwOpthkEJ5JZDDDOMo9EcHb2+mTQiz9isQUBJvDNUbjGhpjXni+s0ZN2FkZia4c+BtUnKvj3sXAUHj3JxydsfuORvemB6j/4ZKPT0+GX6CWu8cfY5M7rUJQEqvZrjNYuFXJ0+umr0SlR0XM+FxNdFegJVCFVIUeDbuVMM/w4OP3qKrTspVzZkUij00/dXJWvj4ejz8eO2VsFHz2+jPaPo8/8KObjCUFRShUJdU+Hoy6GlxgHK0O9ttZsZbRXBiGShddrbTBHWGIlvWS9gCYItbeYgYvaAkJVex0a8UC4v/HsQoMkRAIzvcKgS4w6Jf03glsBVgWW6OVBAEMg9Gv0wNW/xuYOc7TYQk1Zl2tp4OOnwUAso981Nn/oQDAcjP4fw7g81zYXy4aMyy+l0kaHBsYP99/EzOUzXKOB6c3lLTuP61CgDVpF+DN20PbKS4X3zHQ4GogF+lKHO+dCNLJiC53q0K0k0cb5TCzj6MxdhtTmerccvwSOx4s6fcLmiEEkcO7sSQCPMuPZhJrQnxD87Pc8C7Id7Z/9HrVvK22QxDS3zuNde8Q4CVw6D6HQcaQ3zj9B4+p2ZKUhBxYxA/bn2hJou9f+45N1GxvVT6KF/DUJ60QCpEttpP/d8KaSMPv1rkjg3gFamRoELKvQwK6E1OGZsTky8QYJ3t/c3sPdxeR2Pr+4Ob84/7BtwwVfW+xubVEnL66GfQxVSGPQ5tj1SJWzhIeA8D7FjfQImqhGgo0OBWfnSoTFeA6ly2qDbeFDwY2hD2KyA7zb4h1N8kDHOv6baYp0Qm0tGoMZKIPSQ8Af4UBI7LI6gvl9OLx0fiN9pm3OJ9+Hw3NNlZHN7WpFGGDIO1bbMHchY4f4MpPEmo3auJ8srhGrsdFrbMXyQNgKumU9NsZtQBmNNjBrJgbGKcnNsmvtnS3ZtJZeczokxkphFS7sGmbjmyuYTR7/J8SyTqmhgCXQKlTQr8n3jU77273S59NuO+AcdYlhL9iTBunkWfu4DfJFMToglXK1Daw8hUTa5h2RtAuFX519ZunBdNWCa9piZp0jqHFARAIpguQiYOy4q/MizuJbTZc2Ewkc714P4BwrtLFvPO2u9pGBcnal87rdapzCEVprLd8MXsoG0oZ7JZLIljCEGGwF715vLta4qw+L611PJFwjXhJ/1RRgI7n3xbb021I/L64qUD21/zDUe7yj7DuMY3etjF1I68D0/qVU2za+lTDrxLqTXvzWjOe7/TmZ3T6cP07nV2dwz7F4Q8JGEiiPMmDWL12mVxozSJu2q8bVGUxLmSOktTbZTjhiEkcgDsr+c8PfgX8CAAD//8RJh7hwCQAA",
		"storageAccountBaseName":                    "",
		"storageAccountPrefixes":                    []interface{}{},
		"subnetName":                                "[concat(parameters('orchestratorName'), '-subnet')]",
		"subnetNameResourceSegmentIndex":            10,
		"subscriptionId":                            "[subscription().subscriptionId]",
		"tenantId":                                  "[subscription().tenantId]",
		"truncatedResourceGroup":                    "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
		"useInstanceMetadata":                       "true",
		"useManagedIdentityExtension":               "false",
		"userAssignedClientID":                      "",
		"userAssignedID":                            "",
		"userAssignedIDReference":                   "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedID'))]",
		"virtualNetworkName":                        "[concat(parameters('orchestratorName'), '-vnet-', parameters('nameSuffix'))]",
		"virtualNetworkResourceGroupName":           "''",
		"vmType":                                    "vmss",
		"vnetID":                                    "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"vnetNameResourceSegmentIndex":              8,
		"vnetResourceGroupNameResourceSegmentIndex": 4,
		"vnetSubnetID":                              "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
	}
	diff := cmp.Diff(varMap, expectedMap)

	if diff != "" {
		t.Errorf("unexpected diff while expecting equal structs: %s", diff)
	}

	// Test with CustomVnet enabled
	cs.Properties.MasterProfile.VnetSubnetID = "fooSubnetID"
	varMap = GetKubernetesVariables(cs)

	expectedMap["subnetName"] = "[split(parameters('masterVnetSubnetID'), '/')[variables('subnetNameResourceSegmentIndex')]]"
	expectedMap["virtualNetworkName"] = "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetNameResourceSegmentIndex')]]"
	expectedMap["virtualNetworkResourceGroupName"] = "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetResourceGroupNameResourceSegmentIndex')]]"
	expectedMap["vnetSubnetID"] = "[parameters('masterVnetSubnetID')]"
	delete(expectedMap, "vnetID")

	diff = cmp.Diff(varMap, expectedMap)

	if diff != "" {
		t.Errorf("unexpected diff while expecting equal structs: %s", diff)
	}

	// Test with  3 Multiple Master Nodes
	cs.Properties.MasterProfile.Count = 3
	varMap = GetKubernetesVariables(cs)
	expectedMap["etcdPeerCertificates"] = []string{
		"[parameters('etcdPeerCertificate0')]",
		"[parameters('etcdPeerCertificate1')]",
		"[parameters('etcdPeerCertificate2')]",
	}
	expectedMap["etcdPeerPrivateKeys"] = []string{
		"[parameters('etcdPeerPrivateKey0')]",
		"[parameters('etcdPeerPrivateKey1')]",
		"[parameters('etcdPeerPrivateKey2')]",
	}
	expectedMap["kubernetesAPIServerIP"] = "[concat(variables('masterFirstAddrPrefix'), add(variables('masterInternalLbIPOffset'), int(variables('masterFirstAddrOctet4'))))]"
	expectedMap["masterCount"] = 3
	expectedMap["masterInternalLbID"] = "[resourceId('Microsoft.Network/loadBalancers',variables('masterInternalLbName'))]"
	expectedMap["masterInternalLbIPConfigID"] = "[concat(variables('masterInternalLbID'),'/frontendIPConfigurations/', variables('masterInternalLbIPConfigName'))]"
	expectedMap["masterInternalLbIPConfigName"] = "[concat(parameters('orchestratorName'), '-master-internal-lbFrontEnd-', parameters('nameSuffix'))]"
	expectedMap["masterInternalLbIPOffset"] = 10
	expectedMap["masterInternalLbName"] = "[concat(parameters('orchestratorName'), '-master-internal-lb-', parameters('nameSuffix'))]"

	diff = cmp.Diff(varMap, expectedMap)

	if diff != "" {
		t.Errorf("unexpected diff while expecting equal structs: %s", diff)
	}

	// Test with  5 Multiple Master Nodes
	cs.Properties.MasterProfile.Count = 5
	varMap = GetKubernetesVariables(cs)
	expectedMap["etcdPeerCertificates"] = []string{
		"[parameters('etcdPeerCertificate0')]",
		"[parameters('etcdPeerCertificate1')]",
		"[parameters('etcdPeerCertificate2')]",
		"[parameters('etcdPeerCertificate3')]",
		"[parameters('etcdPeerCertificate4')]",
	}
	expectedMap["etcdPeerPrivateKeys"] = []string{
		"[parameters('etcdPeerPrivateKey0')]",
		"[parameters('etcdPeerPrivateKey1')]",
		"[parameters('etcdPeerPrivateKey2')]",
		"[parameters('etcdPeerPrivateKey3')]",
		"[parameters('etcdPeerPrivateKey4')]",
	}
	expectedMap["masterCount"] = 5

	diff = cmp.Diff(varMap, expectedMap)

	if diff != "" {
		t.Errorf("unexpected diff while expecting equal structs: %s", diff)
	}

	// Test with HostedMasterProfile and StorageAccount
	cs.Properties.MasterProfile = nil
	cs.Properties.HostedMasterProfile = &api.HostedMasterProfile{
		DNSPrefix: "fooDNSPrefix",
	}
	cs.Properties.AgentPoolProfiles[0].StorageProfile = api.StorageAccount
	varMap = GetKubernetesVariables(cs)
	expectedMap["agentNamePrefix"] = "[concat(parameters('orchestratorName'), '-agentpool-', parameters('nameSuffix'), '-')]"
	expectedMap["agentpool1AccountName"] = "[concat(variables('storageAccountBaseName'), 'agnt0')]"
	expectedMap["agentpool1StorageAccountOffset"] = "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpool1Index'))]"
	expectedMap["agentpool1StorageAccountsCount"] = "[add(div(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),1)))]"
	expectedMap["agentpool1VMNamePrefix"] = "aks-agentpool1-18280257-vmss"
	expectedMap["dataStorageAccountPrefixSeed"] = 97
	expectedMap["kubernetesAPIServerIP"] = "[parameters('kubernetesEndpoint')]"
	expectedMap["masterVMNamePrefix"] = "aks-master-18280257-"
	expectedMap["maxStorageAccountsPerAgent"] = "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]"
	expectedMap["maxVMsPerStorageAccount"] = 20
	expectedMap["nsgName"] = "[concat(variables('agentNamePrefix'), 'nsg')]"
	expectedMap["provisionScriptParametersCommon"] = "[concat('ADMINUSER=',parameters('linuxAdminUsername'),' ETCD_DOWNLOAD_URL=',parameters('etcdDownloadURLBase'),' ETCD_VERSION=',parameters('etcdVersion'),' CONTAINERD_VERSION=',parameters('containerdVersion'),' MOBY_VERSION=',parameters('mobyVersion'),' DOCKER_ENGINE_REPO=',parameters('dockerEngineDownloadRepo'),' TENANT_ID=',variables('tenantID'),' KUBERNETES_VERSION=1.10.13 HYPERKUBE_URL=',parameters('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',parameters('apiServerCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' VM_TYPE=',variables('vmType'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' PRIMARY_SCALE_SET=',variables('primaryScaleSetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',parameters('clientPrivateKey'),' TARGET_ENVIRONMENT=',parameters('targetEnvironment'),' NETWORK_PLUGIN=',parameters('networkPlugin'),' NETWORK_POLICY=',parameters('networkPolicy'),' VNET_CNI_PLUGINS_URL=',parameters('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',parameters('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',toLower(string(parameters('cloudproviderConfig').cloudProviderBackoff)),' CLOUDPROVIDER_BACKOFF_RETRIES=',parameters('cloudproviderConfig').cloudProviderBackoffRetries,' CLOUDPROVIDER_BACKOFF_EXPONENT=',parameters('cloudproviderConfig').cloudProviderBackoffExponent,' CLOUDPROVIDER_BACKOFF_DURATION=',parameters('cloudproviderConfig').cloudProviderBackoffDuration,' CLOUDPROVIDER_BACKOFF_JITTER=',parameters('cloudproviderConfig').cloudProviderBackoffJitter,' CLOUDPROVIDER_RATELIMIT=',toLower(string(parameters('cloudproviderConfig').cloudProviderRatelimit)),' CLOUDPROVIDER_RATELIMIT_QPS=',parameters('cloudproviderConfig').cloudProviderRatelimitQPS,' CLOUDPROVIDER_RATELIMIT_BUCKET=',parameters('cloudproviderConfig').cloudProviderRatelimitBucket,' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USER_ASSIGNED_IDENTITY_ID=',variables('userAssignedClientID'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' LOAD_BALANCER_SKU=',variables('loadBalancerSku'),' EXCLUDE_MASTER_FROM_STANDARD_LB=',variables('excludeMasterFromStandardLB'),' MAXIMUM_LOADBALANCER_RULE_COUNT=',variables('maximumLoadBalancerRuleCount'),' CONTAINER_RUNTIME=',parameters('containerRuntime'),' CONTAINERD_DOWNLOAD_URL_BASE=',parameters('containerdDownloadURLBase'),' POD_INFRA_CONTAINER_SPEC=',parameters('kubernetesPodInfraContainerSpec'),' KMS_PROVIDER_VAULT_NAME=',variables('clusterKeyVaultName'),' IS_HOSTED_MASTER=true',' PRIVATE_AZURE_REGISTRY_SERVER=',parameters('privateAzureRegistryServer'))]"
	expectedMap["routeTableName"] = "[concat(variables('agentNamePrefix'), 'routetable')]"
	expectedMap["storageAccountBaseName"] = "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]"
	expectedMap["storageAccountPrefixes"] = []string{"0", "6", "c", "i", "o", "u", "1", "7", "d", "j", "p", "v", "2", "8", "e", "k", "q", "w", "3", "9", "f", "l", "r", "x", "4", "a", "g", "m", "s", "y", "5", "b", "h", "n", "t", "z"}
	expectedMap["storageAccountPrefixesCount"] = "[length(variables('storageAccountPrefixes'))]"
	expectedMap["subnetName"] = "[concat(parameters('orchestratorName'), '-subnet')]"
	expectedMap["virtualNetworkName"] = "[concat(parameters('orchestratorName'), '-vnet-', parameters('nameSuffix'))]"
	expectedMap["virtualNetworkResourceGroupName"] = ""
	expectedMap["vmSizesMap"] = map[string]interface{}{"Standard_A0": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A1": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A10": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A11": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A1_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A2_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A2m_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A4": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A4_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A4m_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A5": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A6": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A7": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A8": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A8_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A8m_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_A9": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_B1ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_B1s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_B2ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_B2s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_B4ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_B8ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D1": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D11": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D11_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D11_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D12": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D12_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D12_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D13": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D13_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D13_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D14": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D14_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D14_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D15_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D16_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D16s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D1_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D2_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D2_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D2_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D2s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D32_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D32s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D3_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D3_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D4": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D4_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D4_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D4_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D4s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D5_v2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D5_v2_Promo": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D64_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D64s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_D8_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_D8s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DC2s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DC4s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS1": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS11": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS11-1_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS11_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS11_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS12": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS12-1_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS12-2_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS12_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS12_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS13": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS13-2_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS13-4_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS13_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS13_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS14": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS14-4_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS14-8_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS14_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS14_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS15_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS1_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS2_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS2_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS3_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS3_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS4": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS4_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS4_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS5_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_DS5_v2_Promo": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E16-4s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E16-8s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E16_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E16s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E20_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E20s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E2_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E2s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E32-16s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E32-8s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E32_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E32s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E4-2s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E4_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E4s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E64-16s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E64-32s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E64_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E64i_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E64is_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E64s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E8-2s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E8-4s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_E8_v3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_E8s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F1": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_F16": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_F16s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F16s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F1s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_F2s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F2s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F32s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F4": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_F4s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F4s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F64s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F72s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F8": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_F8s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_F8s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_G1": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_G2": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_G3": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_G4": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_G5": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_GS1": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS4": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS4-4": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS4-8": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS5": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS5-16": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_GS5-8": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_H16": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_H16m": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_H16mr": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_H16r": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_H8": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_H8m": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_L16s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L16s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L32s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L32s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L4s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L64s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L80s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L8s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_L8s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M128": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_M128-32ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M128-64ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M128m": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_M128ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M128s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M16-4ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M16-8ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M16ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M32-16ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M32-8ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M32ls": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M32ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M32ts": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M64": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_M64-16ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M64-32ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M64ls": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M64m": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_M64ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M64s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M8-2ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M8-4ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_M8ms": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC12": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NC12s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC12s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC24": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NC24r": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NC24rs_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC24rs_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC24s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC24s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC6": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NC6s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NC6s_v3": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_ND12s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_ND24rs": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_ND24s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_ND6s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NV12": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NV12s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NV24": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NV24s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_NV6": map[string]interface{}{"storageAccountType": "Standard_LRS"}, "Standard_NV6s_v2": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_PB12s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_PB24s": map[string]interface{}{"storageAccountType": "Premium_LRS"}, "Standard_PB6s": map[string]interface{}{"storageAccountType": "Premium_LRS"}}
	expectedMap["vmsPerStorageAccount"] = 20
	expectedMap["vnetID"] = "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"
	expectedMap["vnetSubnetID"] = "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"

	delete(expectedMap, "etcdCaFilepath")
	delete(expectedMap, "etcdClientCertFilepath")
	delete(expectedMap, "etcdClientKeyFilepath")
	delete(expectedMap, "etcdPeerCertFilepath")
	delete(expectedMap, "etcdPeerCertificates")
	delete(expectedMap, "etcdPeerKeyFilepath")
	delete(expectedMap, "etcdPeerPrivateKeys")
	delete(expectedMap, "etcdServerCertFilepath")
	delete(expectedMap, "etcdServerKeyFilepath")
	delete(expectedMap, "masterCount")
	delete(expectedMap, "masterEtcdClientPort")
	delete(expectedMap, "masterEtcdServerPort")
	delete(expectedMap, "masterFirstAddrComment")
	delete(expectedMap, "masterFirstAddrOctets")
	delete(expectedMap, "masterFirstAddrPrefix")
	delete(expectedMap, "masterInternalLbID")
	delete(expectedMap, "masterInternalLbIPConfigID")
	delete(expectedMap, "masterInternalLbIPConfigName")
	delete(expectedMap, "masterInternalLbIPOffset")
	delete(expectedMap, "masterInternalLbName")
	delete(expectedMap, "kubeConfigServer")
	delete(expectedMap, "masterFirstAddrOctet4")
	delete(expectedMap, "masterLbBackendPoolName")
	delete(expectedMap, "masterLbID")
	delete(expectedMap, "masterLbIPConfigID")
	delete(expectedMap, "masterLbIPConfigName")
	delete(expectedMap, "masterLbName")
	delete(expectedMap, "masterOffset")
	delete(expectedMap, "masterPublicIPAddressName")
	delete(expectedMap, "provisionScriptParametersMaster")
	delete(expectedMap, "kubeconfigServer")

	diff = cmp.Diff(varMap, expectedMap)

	if diff != "" {
		t.Errorf("unexpected diff while expecting equal structs: %s", diff)
	}

}

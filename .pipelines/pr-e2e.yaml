trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - docs/*

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - docs/*

resources:
  containers:
  - container: dev1
    image: mcr.microsoft.com/oss/azcu/go-dev:v1.36.1

jobs:
- job: unit_tests
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 5
  strategy:
    maxParallel: 0
  pool:
      vmImage: 'Ubuntu 20.04'

  container: dev1

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go' # Go installation path
    GOPATH: '$(Agent.TempDirectory)/go' # Go workspace path
    MSI_USER_ASSIGNED_ID_AKS_ENGINE_E2E: ''
    REGIONS: ''
    SUBSCRIPTION_ID_E2E_KUBERNETES: ''
    TENANT_ID: ''
    SERVICE_PRINCIPAL_CLIENT_ID_E2E_KUBERNETES: ''
    SERVICE_PRINCIPAL_CLIENT_SECRET_E2E_KUBERNETES: ''


  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      shopt -s extglob
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'
  - script: make bootstrap
    displayName: Install dependencies
  - script: make ensure-generated
    displayName: Check if generated code is up to date
  - script: make generate test-style
    displayName: Run linting rules
  - script: make build-cross
    displayName: Build cross-architectural binaries
  - script: make validate-dependencies
    displayName: Check if go mod is up-to-date
  - script: make test
    displayName: Run unit tests

- template: e2e-job-template.yaml
  parameters:
    name: 'k8s_1_24_containerd_e2e'
    k8sRelease: '1.24'
    apimodel: 'examples/e2e-tests/kubernetes/release/default/definition-no-vnet.json'
    createVNET: false
    enableKMSEncryption: false
    containerRuntime: 'containerd'
    runSSHTests: true
    skipTests: 'should be able to create and connect to a hostPort-configured pod|should be labeled with zones for each node|should have node labels specific to masters or agents'

- template: e2e-job-template.yaml
  parameters:
    name: 'k8s_1_24_2004_e2e'
    k8sRelease: '1.24'
    apimodel: 'examples/e2e-tests/kubernetes/release/default/definition-no-vnet.json'
    createVNET: false
    enableKMSEncryption: false
    containerRuntime: 'containerd'
    distro: 'aks-ubuntu-20.04'
    runSSHTests: true
    skipTests: 'should be able to create and connect to a hostPort-configured pod|should be labeled with zones for each node|should have node labels specific to masters or agents'
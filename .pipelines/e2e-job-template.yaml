parameters:
  name: ''  # defaults for any parameters that aren't specified
  k8sRelease: ''
  apimodel: 'examples/e2e-tests/kubernetes/release/default/definition.json'
  createVNET: false
  skipTests: ''
  stabilityIterations: '0'

jobs:
- job: ${{ parameters.name }}
  dependsOn: unit_tests
  timeoutInMinutes: 150
  cancelTimeoutInMinutes: 5
  strategy:
    maxParallel: 0
  pool:
    vmImage: ubuntu-16.04

  container: dev1

  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go' # Go installation path
    GOPATH: '$(Agent.TempDirectory)/go' # Go workspace path
    TIMEOUT: 30m
    CLUSTER_DEFINITION: ${{ parameters.apimodel }}
    ORCHESTRATOR_RELEASE: ${{ parameters.k8sRelease }}
    CREATE_VNET: ${{ parameters.createVNET }}
    CLEANUP_ON_EXIT: true
    CLEANUP_IF_FAIL: true
    GINKGO_SKIP: ${{ parameters.skipTests }}
    STABILITY_ITERATIONS: ${{ parameters.stabilityIterations }}
    RETAIN_SSH: false
    ENABLE_KMS_ENCRYPTION: ${{ parameters.enableKMSEncryption }}
    SUBSCRIPTION_ID: '$(SUBSCRIPTION_ID_E2E_KUBERNETES)'
    MSI_USER_ASSIGNED_ID: '$(MSI_USER_ASSIGNED_ID_AKS_ENGINE_E2E)'
    CONTAINER_RUNTIME: ${{ parameters.containerRuntime }}
    BLOCK_SSH: ${{ parameters.runSSHTests }}

  steps:
    - template: e2e-step-template.yaml
      parameters:
        job: ${{ parameters.name }}

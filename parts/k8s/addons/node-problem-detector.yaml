apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-problem-detector
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-problem-detector-binding
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-problem-detector
subjects:
- kind: ServiceAccount
  name: node-problem-detector
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-problem-detector-{{ContainerConfig "versionLabel"}}
  namespace: kube-system
  labels:
    k8s-app: node-problem-detector
    version: {{ContainerConfig "versionLabel"}}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      k8s-app: node-problem-detector
      version: {{ContainerConfig "versionLabel"}}
  template:
    metadata:
      labels:
        k8s-app: node-problem-detector
        version: {{ContainerConfig "versionLabel"}}
        kubernetes.io/cluster-service: "true"
      annotations:
        cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    spec:
      containers:
      - name: node-problem-detector
        image: {{ContainerImage "node-problem-detector"}}
        command:
        - "/bin/sh"
        - "-c"
        - "exec /node-problem-detector --logtostderr --prometheus-address=0.0.0.0 --config.system-log-monitor={{ContainerConfig "systemLogMonitor"}} --config.custom-plugin-monitor={{ContainerConfig "customPluginMonitor"}} --config.system-stats-monitor={{ContainerConfig "systemStatsMonitor"}} >>/var/log/node-problem-detector.log 2>&1"
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: {{ContainerCPULimits "node-problem-detector"}}
            memory: {{ContainerMemLimits "node-problem-detector"}}
          requests:
            cpu: {{ContainerCPUReqs "node-problem-detector"}}
            memory: {{ContainerMemReqs "node-problem-detector"}}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: log
          mountPath: /var/log
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: kmsg
          mountPath: /dev/kmsg
          readOnly: true
      volumes:
      - name: log
        hostPath:
          path: /var/log/
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: "FileOrCreate"
      - name: kmsg
        hostPath:
          path: /dev/kmsg
          type: "CharDevice"
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: node-problem-detector
      tolerations:
      - operator: "Exists"
        effect: "NoExecute"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: node-problem-detector
    addonmanager.kubernetes.io/mode: Reconcile
  name: node-problem-detector
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: exporter
    port: 20257
    protocol: TCP
  selector:
    k8s-app: node-problem-detector
  type: ClusterIP

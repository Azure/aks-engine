apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: guard
subjects:
- kind: ServiceAccount
  name: guard
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: guard
  strategy: {}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      creationTimestamp: null
      labels:
        app: guard
    spec:
      containers:
      - args:
        - run
        - --v=3
        - --tls-ca-file=/etc/guard/pki/ca.crt
        - --tls-cert-file=/etc/guard/pki/tls.crt
        - --tls-private-key-file=/etc/guard/pki/tls.key
        - --auth-providers=Azure
        - --azure.client-id={{GetGuardProperty "clientID"}}
        - --azure.tenant-id={{GetGuardProperty "tenantID"}}
        - --azure.auth-mode=obo
        - --azure.use-group-uid=true
        - --azure.graph-call-on-overage-claim=true
        - --azure.verify-clientID=false
        - --authz-providers=Azure,azure
        - --azure.authz-mode=arc
        - --azure.resource-id=/subscriptions/{{GetGuardProperty "subscriptionID"}}/resourceGroups/{{GetGuardProperty "resourceGroup"}}/providers/Microsoft.Kubernetes/connectedClusters/{{GetGuardProperty "clusterName"}}
        - --azure.arm-call-limit=2000
        - --azure.skip-authz-check=
        - --azure.authz-resolve-group-memberships=false
        - --azure.skip-authz-for-non-aad-users=true
        - --azure.allow-nonres-discovery-path-access=true
        env:
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: guard-azure-auth
        image: appscode/guard:v0.6.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
        name: guard
        ports:
        - containerPort: 8443
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
        resources: {}
        volumeMounts:
        - mountPath: /etc/guard/pki
          name: guard-pki
        - mountPath: /etc/guard/auth/azure
          name: guard-azure-auth
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccountName: guard
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: guard-pki
        secret:
          defaultMode: 365
          secretName: guard-pki
      - name: guard-azure-auth
        secret:
          defaultMode: 365
          secretName: guard-azure-auth
status: {}
---
apiVersion: v1
data:
  ca.crt: {{ContainerConfigBase64 "guardCACertificate"}}
  tls.crt: {{ContainerConfigBase64 "guardServerCertificate"}}
  tls.key: {{ContainerConfigBase64 "guardServerCertificateKey"}}
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard-pki
  namespace: kube-system
---
apiVersion: v1
data:
  client-secret: {{ContainerConfigBase64 "clientSecret"}}
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard-azure-auth
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: guard
    addonmanager.kubernetes.io/mode: "EnsureExists"
  name: guard
  namespace: kube-system
spec:
  ports:
  - name: api
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: guard
  type: ClusterIP
status:
  loadBalancer: {}
